"use strict";var THREE={REVISION:"68"};"object"==typeof module&&(module.exports=THREE),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(t,e,r){return 3===arguments.length?this.setRGB(arguments[0],e,r):this.set(t)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(t){return t instanceof THREE.Color?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,r){return this.r=t,this.g=e,this.b=r,this},setHSL:function(t,e,r){if(0===e)this.r=this.g=this.b=r;else{var i=function(t,e,r){return r<0&&(r+=1),1<r&&(r-=1),r<1/6?t+6*(e-t)*r:r<.5?e:r<2/3?t+6*(e-t)*(2/3-r):t};r=2*r-(e=r<=.5?r*(1+e):r+e-r*e),this.r=i(r,e,t+1/3),this.g=i(r,e,t),this.b=i(r,e,t-1/3)}return this},setStyle:function(t){return/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(t)?(t=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(t),this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,this):/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(t)?(t=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(t),this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,this):/^\#([0-9a-f]{6})$/i.test(t)?(t=/^\#([0-9a-f]{6})$/i.exec(t),this.setHex(parseInt(t[1],16)),this):/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(t)?(t=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(t),this.setHex(parseInt(t[1]+t[1]+t[2]+t[2]+t[3]+t[3],16)),this):/^(\w+)$/i.test(t)?(this.setHex(THREE.ColorKeywords[t]),this):void 0},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t){return this.r=t.r*t.r,this.g=t.g*t.g,this.b=t.b*t.b,this},copyLinearToGamma:function(t){return this.r=Math.sqrt(t.r),this.g=Math.sqrt(t.g),this.b=Math.sqrt(t.b),this},convertGammaToLinear:function(){var t=this.r,e=this.g,r=this.b;return this.r=t*t,this.g=e*e,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){t=t||{h:0,s:0,l:0};var e,r=this.r,i=this.g,n=this.b,o=Math.max(r,i,n),a=((h=Math.min(r,i,n))+o)/2;if(h===o)h=e=0;else{var s=o-h,h=a<=.5?s/(o+h):s/(2-o-h);switch(o){case r:e=(i-n)/s+(i<n?6:0);break;case i:e=(n-r)/s+2;break;case n:e=(r-i)/s+4}e/=6}return t.h=e,t.s=h,t.l=a,t},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,r){var i=this.getHSL();return i.h+=t,i.s+=e,i.l+=r,this.setHSL(i.h,i.s,i.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t){return this.r=t[0],this.g=t[1],this.b=t[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(t,e,r,i){this._x=t||0,this._y=e||0,this._z=r||0,this._w=void 0!==i?i:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get w(){return this._w},set w(t){this._w=t,this.onChangeCallback()},set:function(t,e,r,i){return this._x=t,this._y=e,this._z=r,this._w=i,this.onChangeCallback(),this},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,e){if(!1==t instanceof THREE.Euler)throw Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var r=Math.cos(t._x/2),i=Math.cos(t._y/2),n=Math.cos(t._z/2),o=Math.sin(t._x/2),a=Math.sin(t._y/2),s=Math.sin(t._z/2);return"XYZ"===t.order?(this._x=o*i*n+r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n-o*a*s):"YXZ"===t.order?(this._x=o*i*n+r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n+o*a*s):"ZXY"===t.order?(this._x=o*i*n-r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n-o*a*s):"ZYX"===t.order?(this._x=o*i*n-r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n+o*a*s):"YZX"===t.order?(this._x=o*i*n+r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n-o*a*s):"XZY"===t.order&&(this._x=o*i*n-r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n+o*a*s),!1!==e&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){var r=e/2,i=Math.sin(r);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(r),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var e=(r=t.elements)[0];t=r[4];var r,i=r[8],n=r[1],o=r[5],a=r[9],s=r[2],h=r[6],l=e+o+(r=r[10]);return 0<l?(e=.5/Math.sqrt(l+1),this._w=.25/e,this._x=(h-a)*e,this._y=(i-s)*e,this._z=(n-t)*e):o<e&&r<e?(e=2*Math.sqrt(1+e-o-r),this._w=(h-a)/e,this._x=.25*e,this._y=(t+n)/e,this._z=(i+s)/e):r<o?(e=2*Math.sqrt(1+o-e-r),this._w=(i-s)/e,this._x=(t+n)/e,this._y=.25*e,this._z=(a+h)/e):(e=2*Math.sqrt(1+r-e-o),this._w=(n-t)/e,this._x=(i+s)/e,this._y=(a+h)/e,this._z=.25*e),this.onChangeCallback(),this},setFromUnitVectors:function(){var r,i;return function(t,e){return void 0===r&&(r=new THREE.Vector3),(i=t.dot(e)+1)<1e-6?(i=0,Math.abs(t.x)>Math.abs(t.z)?r.set(-t.y,t.x,0):r.set(0,-t.z,t.y)):r.crossVectors(t,e),this._x=r.x,this._y=r.y,this._z=r.z,this._w=i,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._z=this._y=this._x=0,this._w=1):(t=1/t,this._x*=t,this._y*=t,this._z*=t,this._w*=t),this.onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},multiplyQuaternions:function(t,e){var r=t._x,i=t._y,n=t._z,o=t._w,a=e._x,s=e._y,h=e._z,l=e._w;return this._x=r*l+o*a+i*h-n*s,this._y=i*l+o*s+n*a-r*h,this._z=n*l+o*h+r*s-i*a,this._w=o*l-r*a-i*s-n*h,this.onChangeCallback(),this},multiplyVector3:function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},slerp:function(t,e){var r=this._x,i=this._y,n=this._z,o=this._w,a=o*t._w+r*t._x+i*t._y+n*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),1<=a)return this._w=o,this._x=r,this._y=i,this._z=n,this;var s=Math.acos(a),h=Math.sqrt(1-a*a);return Math.abs(h)<.001?(this._w=.5*(o+this._w),this._x=.5*(r+this._x),this._y=.5*(i+this._y),this._z=.5*(n+this._z)):(a=Math.sin((1-e)*s)/h,s=Math.sin(e*s)/h,this._w=o*a+this._w*s,this._x=r*a+this._x*s,this._y=i*a+this._y*s,this._z=n*a+this._z*s,this.onChangeCallback()),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],this._w=t[3],this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(t,e,r,i){return r.copy(t).slerp(e,i)},THREE.Vector2=function(t,e){this.x=t||0,this.y=e||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(t,e){return this.x=t,this.y=e,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScalar:function(t){return this.x+=t,this.y+=t,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return 0!==t?(t=1/t,this.x*=t,this.y*=t):this.y=this.x=0,this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this},clampScalar:function(){var r,i;return function(t,e){return void 0===r&&(r=new THREE.Vector2,i=new THREE.Vector2),r.set(t,t),i.set(e,e),this.clamp(r,i)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x;return e*e+(t=this.y-t.y)*t},setLength:function(t){var e=this.length();return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t){return this.x=t[0],this.y=t[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(t,e,r){this.x=t||0,this.y=e||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(t,e,r){return this.x=t,this.y=e,this.z=r,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(){var e;return function(t){return!1==t instanceof THREE.Euler&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order."),void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromEuler(t)),this}}(),applyAxisAngle:function(){var r;return function(t,e){return void 0===r&&(r=new THREE.Quaternion),this.applyQuaternion(r.setFromAxisAngle(t,e)),this}}(),applyMatrix3:function(t){var e=this.x,r=this.y,i=this.z;return t=t.elements,this.x=t[0]*e+t[3]*r+t[6]*i,this.y=t[1]*e+t[4]*r+t[7]*i,this.z=t[2]*e+t[5]*r+t[8]*i,this},applyMatrix4:function(t){var e=this.x,r=this.y,i=this.z;return t=t.elements,this.x=t[0]*e+t[4]*r+t[8]*i+t[12],this.y=t[1]*e+t[5]*r+t[9]*i+t[13],this.z=t[2]*e+t[6]*r+t[10]*i+t[14],this},applyProjection:function(t){var e=this.x,r=this.y,i=this.z,n=1/((t=t.elements)[3]*e+t[7]*r+t[11]*i+t[15]);return this.x=(t[0]*e+t[4]*r+t[8]*i+t[12])*n,this.y=(t[1]*e+t[5]*r+t[9]*i+t[13])*n,this.z=(t[2]*e+t[6]*r+t[10]*i+t[14])*n,this},applyQuaternion:function(t){var e=this.x,r=this.y,i=this.z,n=t.x,o=t.y,a=t.z,s=(t=t.w)*e+o*i-a*r,h=t*r+a*e-n*i,l=t*i+n*r-o*e;e=-n*e-o*r-a*i;return this.x=s*t+e*-n+h*-a-l*-o,this.y=h*t+e*-o+l*-n-s*-a,this.z=l*t+e*-a+s*-o-h*-n,this},transformDirection:function(t){var e=this.x,r=this.y,i=this.z;return t=t.elements,this.x=t[0]*e+t[4]*r+t[8]*i,this.y=t[1]*e+t[5]*r+t[9]*i,this.z=t[2]*e+t[6]*r+t[10]*i,this.normalize(),this},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return 0!==t?(t=1/t,this.x*=t,this.y*=t,this.z*=t):this.z=this.y=this.x=0,this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this.z>t.z&&(this.z=t.z),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this.z<t.z&&(this.z=t.z),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this.z<t.z?this.z=t.z:this.z>e.z&&(this.z=e.z),this},clampScalar:function(){var r,i;return function(t,e){return void 0===r&&(r=new THREE.Vector3,i=new THREE.Vector3),r.set(t,t,t),i.set(e,e,e),this.clamp(r,i)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){var e=this.length();return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},cross:function(t,e){if(void 0!==e)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e);var r=this.x,i=this.y,n=this.z;return this.x=i*t.z-n*t.y,this.y=n*t.x-r*t.z,this.z=r*t.y-i*t.x,this},crossVectors:function(t,e){var r=t.x,i=t.y,n=t.z,o=e.x,a=e.y,s=e.z;return this.x=i*s-n*a,this.y=n*o-r*s,this.z=r*a-i*o,this},projectOnVector:function(){var e,r;return function(t){return void 0===e&&(e=new THREE.Vector3),e.copy(t).normalize(),r=this.dot(e),this.copy(e).multiplyScalar(r)}}(),projectOnPlane:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(t){return t=this.dot(t)/(this.length()*t.length()),Math.acos(THREE.Math.clamp(t,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,r=this.y-t.y;return e*e+r*r+(t=this.z-t.z)*t},setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},setFromMatrixPosition:function(t){return this.x=t.elements[12],this.y=t.elements[13],this.z=t.elements[14],this},setFromMatrixScale:function(t){var e=this.set(t.elements[0],t.elements[1],t.elements[2]).length(),r=this.set(t.elements[4],t.elements[5],t.elements[6]).length();return t=this.set(t.elements[8],t.elements[9],t.elements[10]).length(),this.x=e,this.y=r,this.z=t,this},setFromMatrixColumn:function(t,e){var r=4*t,i=e.elements;return this.x=i[r],this.y=i[r+1],this.z=i[r+2],this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t){return this.x=t[0],this.y=t[1],this.z=t[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(t,e,r,i){this.x=t||0,this.y=e||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(t,e,r,i){return this.x=t,this.y=e,this.z=r,this.w=i,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,r=this.y,i=this.z,n=this.w;return t=t.elements,this.x=t[0]*e+t[4]*r+t[8]*i+t[12]*n,this.y=t[1]*e+t[5]*r+t[9]*i+t[13]*n,this.z=t[2]*e+t[6]*r+t[10]*i+t[14]*n,this.w=t[3]*e+t[7]*r+t[11]*i+t[15]*n,this},divideScalar:function(t){return 0!==t?(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t):(this.z=this.y=this.x=0,this.w=1),this},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.z=this.y=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,r,i,n=(t=t.elements)[0];i=t[4];var o=t[8],a=t[1],s=t[5],h=t[9];r=t[2],e=t[6];var l=t[10];return Math.abs(i-a)<.01&&Math.abs(o-r)<.01&&Math.abs(h-e)<.01?Math.abs(i+a)<.1&&Math.abs(o+r)<.1&&Math.abs(h+e)<.1&&Math.abs(n+s+l-3)<.1?this.set(1,0,0,0):(t=Math.PI,l=(l+1)/2,i=(i+a)/4,o=(o+r)/4,h=(h+e)/4,(s=(s+1)/2)<(n=(n+1)/2)&&l<n?n<.01?(e=0,i=r=.707106781):(r=i/(e=Math.sqrt(n)),i=o/e):l<s?s<.01?(r=0,i=e=.707106781):(e=i/(r=Math.sqrt(s)),i=h/r):l<.01?(r=e=.707106781,i=0):(e=o/(i=Math.sqrt(l)),r=h/i),this.set(e,r,i,t)):(t=Math.sqrt((e-h)*(e-h)+(o-r)*(o-r)+(a-i)*(a-i)),Math.abs(t)<.001&&(t=1),this.x=(e-h)/t,this.y=(o-r)/t,this.z=(a-i)/t,this.w=Math.acos((n+s+l-1)/2)),this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this.z>t.z&&(this.z=t.z),this.w>t.w&&(this.w=t.w),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this.z<t.z&&(this.z=t.z),this.w<t.w&&(this.w=t.w),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this.z<t.z?this.z=t.z:this.z>e.z&&(this.z=e.z),this.w<t.w?this.w=t.w:this.w>e.w&&(this.w=e.w),this},clampScalar:function(){var r,i;return function(t,e){return void 0===r&&(r=new THREE.Vector4,i=new THREE.Vector4),r.set(t,t,t,t),i.set(e,e,e,e),this.clamp(r,i)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){var e=this.length();return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t){return this.x=t[0],this.y=t[1],this.z=t[2],this.w=t[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(t,e,r,i){this._x=t||0,this._y=e||0,this._z=r||0,this._order=i||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" "),THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get order(){return this._order},set order(t){this._order=t,this.onChangeCallback()},set:function(t,e,r,i){return this._x=t,this._y=e,this._z=r,this._order=i||this._order,this.onChangeCallback(),this},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e){var r=THREE.Math.clamp,i=(u=t.elements)[0],n=u[4],o=u[8],a=u[1],s=u[5],h=u[9],l=u[2],c=u[6],u=u[10];return"XYZ"===(e=e||this._order)?(this._y=Math.asin(r(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(-h,u),this._z=Math.atan2(-n,i)):(this._x=Math.atan2(c,s),this._z=0)):"YXZ"===e?(this._x=Math.asin(-r(h,-1,1)),Math.abs(h)<.99999?(this._y=Math.atan2(o,u),this._z=Math.atan2(a,s)):(this._y=Math.atan2(-l,i),this._z=0)):"ZXY"===e?(this._x=Math.asin(r(c,-1,1)),Math.abs(c)<.99999?(this._y=Math.atan2(-l,u),this._z=Math.atan2(-n,s)):(this._y=0,this._z=Math.atan2(a,i))):"ZYX"===e?(this._y=Math.asin(-r(l,-1,1)),Math.abs(l)<.99999?(this._x=Math.atan2(c,u),this._z=Math.atan2(a,i)):(this._x=0,this._z=Math.atan2(-n,s))):"YZX"===e?(this._z=Math.asin(r(a,-1,1)),Math.abs(a)<.99999?(this._x=Math.atan2(-h,s),this._y=Math.atan2(-l,i)):(this._x=0,this._y=Math.atan2(o,u))):"XZY"===e?(this._z=Math.asin(-r(n,-1,1)),Math.abs(n)<.99999?(this._x=Math.atan2(c,s),this._y=Math.atan2(o,i)):(this._x=Math.atan2(-h,u),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,this.onChangeCallback(),this},setFromQuaternion:function(t,e,r){var i=THREE.Math.clamp,n=t.x*t.x,o=t.y*t.y,a=t.z*t.z,s=t.w*t.w;return"XYZ"===(e=e||this._order)?(this._x=Math.atan2(2*(t.x*t.w-t.y*t.z),s-n-o+a),this._y=Math.asin(i(2*(t.x*t.z+t.y*t.w),-1,1)),this._z=Math.atan2(2*(t.z*t.w-t.x*t.y),s+n-o-a)):"YXZ"===e?(this._x=Math.asin(i(2*(t.x*t.w-t.y*t.z),-1,1)),this._y=Math.atan2(2*(t.x*t.z+t.y*t.w),s-n-o+a),this._z=Math.atan2(2*(t.x*t.y+t.z*t.w),s-n+o-a)):"ZXY"===e?(this._x=Math.asin(i(2*(t.x*t.w+t.y*t.z),-1,1)),this._y=Math.atan2(2*(t.y*t.w-t.z*t.x),s-n-o+a),this._z=Math.atan2(2*(t.z*t.w-t.x*t.y),s-n+o-a)):"ZYX"===e?(this._x=Math.atan2(2*(t.x*t.w+t.z*t.y),s-n-o+a),this._y=Math.asin(i(2*(t.y*t.w-t.x*t.z),-1,1)),this._z=Math.atan2(2*(t.x*t.y+t.z*t.w),s+n-o-a)):"YZX"===e?(this._x=Math.atan2(2*(t.x*t.w-t.z*t.y),s-n+o-a),this._y=Math.atan2(2*(t.y*t.w-t.x*t.z),s+n-o-a),this._z=Math.asin(i(2*(t.x*t.y+t.z*t.w),-1,1))):"XZY"===e?(this._x=Math.atan2(2*(t.x*t.w+t.y*t.z),s-n+o-a),this._y=Math.atan2(2*(t.x*t.z+t.y*t.w),s+n-o-a),this._z=Math.asin(i(2*(t.z*t.w-t.x*t.y),-1,1))):console.warn("THREE.Euler: .setFromQuaternion() given unsupported order: "+e),this._order=e,!1!==r&&this.onChangeCallback(),this},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(t,e){this.start=void 0!==t?t:new THREE.Vector3,this.end=void 0!==e?e:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(t,e){return this.start.copy(t),this.end.copy(e
),this},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},center:function(t){return(t||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){return(t||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){var r=e||new THREE.Vector3;return this.delta(r).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(){var i=new THREE.Vector3,n=new THREE.Vector3;return function(t,e){i.subVectors(t,this.start),n.subVectors(this.end,this.start);var r=n.dot(n);r=n.dot(i)/r;return e&&(r=THREE.Math.clamp(r,0,1)),r}}(),closestPointToPoint:function(t,e,r){return t=this.closestPointToPointParameter(t,e),r=r||new THREE.Vector3,this.delta(r).multiplyScalar(t).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(t,e){this.min=void 0!==t?t:new THREE.Vector2(Infinity,Infinity),this.max=void 0!==e?e:new THREE.Vector2(-Infinity,-Infinity)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,r=t.length;e<r;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var i=new THREE.Vector2;return function(t,e){var r=i.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=Infinity,this.max.x=this.max.y=-Infinity,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(t){return(t||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(t){return(t||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){return(e||new THREE.Vector2).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){return(e||new THREE.Vector2).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(t,e){this.min=void 0!==t?t:new THREE.Vector3(Infinity,Infinity,Infinity),this.max=void 0!==e?e:new THREE.Vector3(-Infinity,-Infinity,-Infinity)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,r=t.length;e<r;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var i=new THREE.Vector3;return function(t,e){var r=i.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),setFromObject:function(){var o=new THREE.Vector3;return function(t){var n=this;return t.updateMatrixWorld(!0),this.makeEmpty(),t.traverse(function(t){if(void 0!==t.geometry&&void 0!==t.geometry.vertices)for(var e=t.geometry.vertices,r=0,i=e.length;r<i;r++)o.copy(e[r]),o.applyMatrix4(t.matrixWorld),n.expandByPoint(o)}),this}}(),copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-Infinity,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(t){return(t||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(t){return(t||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return(e||new THREE.Vector3).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},clampPoint:function(t,e){return(e||new THREE.Vector3).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){return(t=t||new THREE.Sphere).center=this.center(),t.radius=.5*this.size(e).length(),t}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){return e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(e),this}}(),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(t,e,r,i,n,o,a,s,h){var l=this.elements=new Float32Array(9);l[0]=void 0!==t?t:1,l[3]=e||0,l[6]=r||0,l[1]=i||0,l[4]=void 0!==n?n:1,l[7]=o||0,l[2]=a||0,l[5]=s||0,l[8]=void 0!==h?h:1},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(t,e,r,i,n,o,a,s,h){var l=this.elements;return l[0]=t,l[3]=e,l[6]=r,l[1]=i,l[4]=n,l[7]=o,l[2]=a,l[5]=s,l[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(t){return t=t.elements,this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(t){return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(t)},applyToVector3Array:function(){var n=new THREE.Vector3;return function(t,e,r){void 0===e&&(e=0),void 0===r&&(r=t.length);for(var i=0;i<r;i+=3,e+=3)n.x=t[e],n.y=t[e+1],n.z=t[e+2],n.applyMatrix3(this),t[e]=n.x,t[e+1]=n.y,t[e+2]=n.z;return t}}(),multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t,e=(t=this.elements)[0],r=t[1],i=t[2],n=t[3],o=t[4],a=t[5],s=t[6],h=t[7];return e*o*(t=t[8])-e*a*h-r*n*t+r*a*s+i*n*h-i*o*s},getInverse:function(t,e){var r=t.elements,i=this.elements;if(i[0]=r[10]*r[5]-r[6]*r[9],i[1]=-r[10]*r[1]+r[2]*r[9],i[2]=r[6]*r[1]-r[2]*r[5],i[3]=-r[10]*r[4]+r[6]*r[8],i[4]=r[10]*r[0]-r[2]*r[8],i[5]=-r[6]*r[0]+r[2]*r[4],i[6]=r[9]*r[4]-r[5]*r[8],i[7]=-r[9]*r[0]+r[1]*r[8],i[8]=r[5]*r[0]-r[1]*r[4],0!=(r=r[0]*i[0]+r[1]*i[3]+r[2]*i[6]))return this.multiplyScalar(1/r),this;if(e)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},flattenToArrayOffset:function(t,e){var r=this.elements;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t},getNormalMatrix:function(t){return this.getInverse(t).transpose(),this},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},fromArray:function(t){return this.elements.set(t),this},toArray:function(){var t=this.elements;return[t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8]]},clone:function(){var t=this.elements;return new THREE.Matrix3(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8])}},THREE.Matrix4=function(t,e,r,i,n,o,a,s,h,l,c,u,f,E,p,d){var m=this.elements=new Float32Array(16);m[0]=void 0!==t?t:1,m[4]=e||0,m[8]=r||0,m[12]=i||0,m[1]=n||0,m[5]=void 0!==o?o:1,m[9]=a||0,m[13]=s||0,m[2]=h||0,m[6]=l||0,m[10]=void 0!==c?c:1,m[14]=u||0,m[3]=f||0,m[7]=E||0,m[11]=p||0,m[15]=void 0!==d?d:1},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(t,e,r,i,n,o,a,s,h,l,c,u,f,E,p,d){var m=this.elements;return m[0]=t,m[4]=e,m[8]=r,m[12]=i,m[1]=n,m[5]=o,m[9]=a,m[13]=s,m[2]=h,m[6]=l,m[10]=c,m[14]=u,m[3]=f,m[7]=E,m[11]=p,m[15]=d,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(t){return this.elements.set(t.elements),this},extractPosition:function(t){return console.warn("THREEMatrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},copyPosition:function(t){var e=this.elements;return t=t.elements,e[12]=t[12],e[13]=t[13],e[14]=t[14],this},extractRotation:function(){var o=new THREE.Vector3;return function(t){var e=this.elements;t=t.elements;var r=1/o.set(t[0],t[1],t[2]).length(),i=1/o.set(t[4],t[5],t[6]).length(),n=1/o.set(t[8],t[9],t[10]).length();return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[4]=t[4]*i,e[5]=t[5]*i,e[6]=t[6]*i,e[8]=t[8]*n,e[9]=t[9]*n,e[10]=t[10]*n,this}}(),makeRotationFromEuler:function(t){!1==t instanceof THREE.Euler&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,r=t.x,i=t.y,n=t.z,o=Math.cos(r),a=(r=Math.sin(r),Math.cos(i)),s=(i=Math.sin(i),Math.cos(n));n=Math.sin(n);if("XYZ"===t.order){t=o*s;var h=o*n,l=r*s,c=r*n;e[0]=a*s,e[4]=-a*n,e[8]=i,e[1]=h+l*i,e[5]=t-c*i,e[9]=-r*a,e[2]=c-t*i,e[6]=l+h*i,e[10]=o*a}else"YXZ"===t.order?(t=a*s,h=a*n,l=i*s,c=i*n,e[0]=t+c*r,e[4]=l*r-h,e[8]=o*i,e[1]=o*n,e[5]=o*s,e[9]=-r,e[2]=h*r-l,e[6]=c+t*r,e[10]=o*a):"ZXY"===t.order?(t=a*s,h=a*n,l=i*s,c=i*n,e[0]=t-c*r,e[4]=-o*n,e[8]=l+h*r,e[1]=h+l*r,e[5]=o*s,e[9]=c-t*r,e[2]=-o*i,e[6]=r,e[10]=o*a):"ZYX"===t.order?(t=o*s,h=o*n,l=r*s,c=r*n,e[0]=a*s,e[4]=l*i-h,e[8]=t*i+c,e[1]=a*n,e[5]=c*i+t,e[9]=h*i-l,e[2]=-i,e[6]=r*a,e[10]=o*a):"YZX"===t.order?(t=o*a,h=o*i,l=r*a,c=r*i,e[0]=a*s,e[4]=c-t*n,e[8]=l*n+h,e[1]=n,e[5]=o*s,e[9]=-r*s,e[2]=-i*s,e[6]=h*n+l,e[10]=t-c*n):"XZY"===t.order&&(t=o*a,h=o*i,l=r*a,c=r*i,e[0]=a*s,e[4]=-n,e[8]=i*s,e[1]=t*n+c,e[5]=o*s,e[9]=h*n-l,e[2]=l*n-h,e[6]=r*s,e[10]=c*n+t);return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},makeRotationFromQuaternion:function(t){var e=this.elements,r=t.x,i=t.y,n=t.z,o=t.w,a=n+n;t=r*(l=r+r);var s=r*(c=i+i),h=(r=r*a,i*c),l=(i=i*a,n=n*a,o*l),c=o*c;o*=a;return e[0]=1-(h+n),e[4]=s-o,e[8]=r+c,e[1]=s+o,e[5]=1-(t+n),e[9]=i-l,e[2]=r-c,e[6]=i+l,e[10]=1-(t+h),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},lookAt:function(){var n=new THREE.Vector3,o=new THREE.Vector3,a=new THREE.Vector3;return function(t,e,r){var i=this.elements;return a.subVectors(t,e).normalize(),0===a.length()&&(a.z=1),n.crossVectors(r,a).normalize(),0===n.length()&&(a.x+=1e-4,n.crossVectors(r,a).normalize()),o.crossVectors(a,n),i[0]=n.x,i[4]=o.x,i[8]=a.x,i[1]=n.y,i[5]=o.y,i[9]=a.y,i[2]=n.z,i[6]=o.z,i[10]=a.z,this}}(),multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},multiplyMatrices:function(t,e){var r=t.elements,i=e.elements,n=this.elements,o=r[0],a=r[4],s=r[8],h=r[12],l=r[1],c=r[5],u=r[9],f=r[13],E=r[2],p=r[6],d=r[10],m=r[14],g=r[3],T=r[7],v=r[11],y=(r=r[15],i[0]),R=i[4],x=i[8],H=i[12],_=i[1],b=i[5],w=i[9],M=i[13],S=i[2],C=i[6],A=i[10],L=i[14],P=i[3],F=i[7],D=i[11];i=i[15];return n[0]=o*y+a*_+s*S+h*P,n[4]=o*R+a*b+s*C+h*F,n[8]=o*x+a*w+s*A+h*D,n[12]=o*H+a*M+s*L+h*i,n[1]=l*y+c*_+u*S+f*P,n[5]=l*R+c*b+u*C+f*F,n[9]=l*x+c*w+u*A+f*D,n[13]=l*H+c*M+u*L+f*i,n[2]=E*y+p*_+d*S+m*P,n[6]=E*R+p*b+d*C+m*F,n[10]=E*x+p*w+d*A+m*D,n[14]=E*H+p*M+d*L+m*i,n[3]=g*y+T*_+v*S+r*P,n[7]=g*R+T*b+v*C+r*F,n[11]=g*x+T*w+v*A+r*D,n[15]=g*H+T*M+v*L+r*i,this},multiplyToArray:function(t,e,r){var i=this.elements;return this.multiplyMatrices(t,e),r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),t.applyProjection(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(t){return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(t)},applyToVector3Array:function(){var n=new THREE.Vector3;return function(t,e,r){void 0===e&&(e=0),void 0===r&&(r=t.length);for(var i=0;i<r;i+=3,e+=3)n.x=t[e],n.y=t[e+1],n.z=t[e+2],n.applyMatrix4(this),t[e]=n.x,t[e+1]=n.y,t[e+2]=n.z;return t}}(),rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},determinant:function(){var t=this.elements,e=t[0],r=t[4],i=t[8],n=t[12],o=t[1],a=t[5],s=t[9],h=t[13],l=t[2],c=t[6],u=t[10],f=t[14];return t[3]*(+n*s*c-i*h*c-n*a*u+r*h*u+i*a*f-r*s*f)+t[7]*(+e*s*f-e*h*u+n*o*u-i*o*f+i*h*l-n*s*l)+t[11]*(+e*h*c-e*a*f-n*o*c+r*o*f+n*a*l-r*h*l)+t[15]*(-i*a*l-e*s*c+e*a*u+i*o*c-r*o*u+r*s*l)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},flattenToArrayOffset:function(t,e){var r=this.elements;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t[e+9]=r[9],t[e+10]=r[10],t[e+11]=r[11],t[e+12]=r[12],t[e+13]=r[13],t[e+14]=r[14],t[e+15]=r[15],t},getPosition:function(){var e=new THREE.Vector3;return function(){console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var r=this.elements,i=(T=t.elements)[0],n=T[4],o=T[8],a=T[12],s=T[1],h=T[5],l=T[9],c=T[13],u=T[2],f=T[6],E=T[10],p=T[14],d=T[3],m=T[7],g=T[11],T=T[15];if(r[0]=l*p*m-c*E*m+c*f*g-h*p*g-l*f*T+h*E*T,r[4]=a*E*m-o*p*m-a*f*g+n*p*g+o*f*T-n*E*T,r[8]=o*c*m-a*l*m+a*h*g-n*c*g-o*h*T+n*l*T,r[12]=a*l*f-o*c*f-a*h*E+n*c*E+o*h*p-n*l*p,r[1]=c*E*d-l*p*d-c*u*g+s*p*g+l*u*T-s*E*T,r[5]=o*p*d-a*E*d+a*u*g-i*p*g-o*u*T+i*E*T,r[9]=a*l*d-o*c*d-a*s*g+i*c*g+o*s*T-i*l*T,r[13]=o*c*u-a*l*u+a*s*E-i*c*E-o*s*p+i*l*p,r[2]=h*p*d-c*f*d+c*u*m-s*p*m-h*u*T+s*f*T,r[6]=a*f*d-n*p*d-a*u*m+i*p*m+n*u*T-i*f*T,r[10]=n*c*d-a*h*d+a*s*m-i*c*m-n*s*T+i*h*T,r[14]=a*h*u-n*c*u-a*s*f+i*c*f+n*s*p-i*h*p,r[3]=l*f*d-h*E*d-l*u*m+s*E*m+h*u*g-s*f*g,r[7]=n*E*d-o*f*d+o*u*m-i*E*m-n*u*g+i*f*g,r[11]=o*h*d-n*l*d-o*s*m+i*l*m+n*s*g-i*h*g,r[15]=n*l*u-o*h*u+o*s*f-i*l*f-n*s*E+i*h*E,0!=(r=i*r[0]+s*r[4]+u*r[8]+d*r[12]))return this.multiplyScalar(1/r),this;if(e)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this},translate:function(){console.warn("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.warn("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.warn("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.warn("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.warn("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(t){var e=this.elements,r=t.x,i=t.y;return t=t.z,e[0]*=r,e[4]*=i,e[8]*=t,e[1]*=r,e[5]*=i,e[9]*=t,e[2]*=r,e[6]*=i,e[10]*=t,e[3]*=r,e[7]*=i,e[11]*=t,this},getMaxScaleOnAxis:function(){var t=this.elements;return Math.sqrt(Math.max(t[0]*t[0]+t[1]*t[1]+t[2]*t[2],Math.max(t[4]*t[4]+t[5]*t[5]+t[6]*t[6],t[8]*t[8]+t[9]*t[9]+t[10]*t[10])))},makeTranslation:function(t,e,r){return this.set(1,0,0,t,0,1,0,e,0,0,1,r,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t);return t=Math.sin(t),this.set(1,0,0,0,0,e,-t,0,0,t,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t);return t=Math.sin(t),this.set(e,0,t,0,0,1,0,0,-t,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t);return t=Math.sin(t),this.set(e,-t,0,0,t,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var r=Math.cos(e),i=Math.sin(e),n=1-r,o=t.x,a=t.y,s=t.z,h=n*o,l=n*a;return this.set(h*o+r,h*a-i*s,h*s+i*a,0,h*a+i*s,l*a+r,l*s-i*o,0,h*s-i*a,l*s+i*o,n*s*s+r,0,0,0,0,1),this},makeScale:function(t,e,r){return this.set(t,0,0,0,0,e,0,0,0,0,r,0,0,0,0,1),this},compose:function(t,e,r){return this.makeRotationFromQuaternion(e),this.scale(r),this.setPosition(t),this},decompose:function(){var h=new THREE.Vector3,l=new THREE.Matrix4;return function(t,e,r){var i=this.elements,n=h.set(i[0],i[1],i[2]).length(),o=h.set(i[4],i[5],i[6]).length(),a=h.set(i[8],i[9],i[10]).length();this.determinant()<0&&(n=-n),t.x=i[12],t.y=i[13],t.z=i[14],l.elements.set(this.elements),t=1/n;i=1/o;var s=1/a;return l.elements[0]*=t,l.elements[1]*=t,l.elements[2]*=t,l.elements[4]*=i,l.elements[5]*=i,l.elements[6]*=i,l.elements[8]*=s,l.elements[9]*=s,l.elements[10]*=s,e.setFromRotationMatrix(l),r.x=n,r.y=o,r.z=a,this}}(),makeFrustum:function(t,e,r,i,n,o){var a=this.elements;return a[0]=2*n/(e-t),a[4]=0,a[8]=(e+t)/(e-t),a[12]=0,a[1]=0,a[5]=2*n/(i-r),a[9]=(i+r)/(i-r),a[13]=0,a[2]=0,a[6]=0,a[10]=-(o+n)/(o-n),a[14]=-2*o*n/(o-n),a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(t,e,r,i){var n=-(t=r*Math.tan(THREE.Math.degToRad(.5*t)));return this.makeFrustum(n*e,t*e,n,t,r,i)},makeOrthographic:function(t,e,r,i,n,o){var a=this.elements,s=e-t,h=r-i,l=o-n;return a[0]=2/s,a[4]=0,a[8]=0,a[12]=-(e+t)/s,a[1]=0,a[5]=2/h,a[9]=0,a[13]=-(r+i)/h,a[2]=0,a[6]=0,a[10]=-2/l,a[14]=-(o+n)/l,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},fromArray:function(t){return this.elements.set(t),this},toArray:function(){var t=this.elements;return[t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15]]},clone:function(){var t=this.elements;return new THREE.Matrix4(t[0],t[4],t[8],t[12],t[1],t[5],t[9],t[13],t[2],t[6],t[10],t[14],t[3],t[7],t[11],t[15])}},THREE.Ray=function(t,e){this.origin=void 0!==t?t:new THREE.Vector3,this.direction=void 0!==e?e:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return(e||new THREE.Vector3).copy(this.direction).multiplyScalar(t).add(this.origin)},recast:function(){var e=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(t,e){var r=e||new THREE.Vector3;r.subVectors(t,this.origin);var i=r.dot(this.direction);return i<0?r.copy(this.origin):r.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(){var r=new THREE.Vector3;return function(t){var e=r.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceTo(t):(r.copy(this.direction).multiplyScalar(e).add(this.origin),r.distanceTo(t))}}(),distanceSqToSegment:function(t,e,r,i){var n=t.clone().add(e).multiplyScalar(.5),o=e.clone().sub(t).normalize(),a=.5*t.distanceTo(e),s=this.origin.clone().sub(n);t=-this.direction.dot(o),e=s.dot(this.direction);var h,l,c=-s.dot(o),u=s.lengthSq(),f=Math.abs(1-t*t);return 0<=f?(h=t*e-c,l=a*f,0<=(s=t*c-e)?-l<=h?h<=l?t=(s*=a=1/f)*(s+t*(h*=a)+2*e)+h*(t*s+h+2*c)+u:(h=a,t=-(s=Math.max(0,-(t*h+e)))*s+h*(h+2*c)+u):(h=-a,t=-(s=Math.max(0,-(t*h+e)))*s+h*(h+2*c)+u):h<=-l?t=-(s=Math.max(0,-(-t*a+e)))*s+(h=0<s?-a:Math.min(Math.max(-a,-c),a))*(h+2*c)+u:h<=l?(s=0,t=(h=Math.min(Math.max(-a,-c),a))*(h+2*c)+u):t=-(s=Math.max(0,-(t*a+e)))*s+(h=0<s?a:Math.min(Math.max(-a,-c),a))*(h+2*c)+u):(h=0<t?-a:a,t=-(s=Math.max(0,-(t*h+e)))*s+h*(h+2*c)+u),r&&r.copy(this.direction.clone().multiplyScalar(s).add(this.origin)),i&&i.copy(o.clone().multiplyScalar(h).add(n)),t},isIntersectionSphere:function(t){return this.distanceToPoint(t.center)<=t.radius},intersectSphere:function(){var o=new THREE.Vector3;return function(t,e){o.subVectors(t.center,this.origin);var r=o.dot(this.direction),i=o.dot(o)-r*r,n=t.radius*t.radius;return n<i?null:(i=r-(n=Math.sqrt(n-i)),r+=n,i<0&&r<0?null:i<0?this.at(r,e):this.at(i,e))}}(),isIntersectionPlane:function(t){var e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0},distanceToPlane:function(t){var e=t.normal.dot(this.direction);return 0==e?0==t.distanceToPoint(this.origin)?0:null:0<=(t=-(this.origin.dot(t.normal)+t.constant)/e)?t:null},intersectPlane:function(t,e){var r=this.distanceToPlane(t);return null===r?null:this.at(r,e)},isIntersectionBox:function(){var e=new THREE.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectBox:function(t,e){var r,i,n,o,a;i=1/this.direction.x,o=1/this.direction.y,a=1/this.direction.z;var s=this.origin;return 0<=i?(r=(t.min.x-s.x)*i,i*=t.max.x-s.x):(r=(t.max.x-s.x)*i,i*=t.min.x-s.x),0<=o?(n=(t.min.y-s.y)*o,o*=t.max.y-s.y):(n=(t.max.y-s.y)*o,o*=t.min.y-s.y),o<r||i<n?null:((r<n||r!=r)&&(r=n),(o<i||i!=i)&&(i=o),0<=a?(n=(t.min.z-s.z)*a,a*=t.max.z-s.z):(n=(t.max.z-s.z)*a,a*=t.min.z-s.z),a<r||i<n?null:((r<n||r!=r)&&(r=n),(a<i||i!=i)&&(i=a),i<0?null:this.at(0<=r?r:i,e)))},intersectTriangle:function(){var o=new THREE.Vector3,a=new THREE.Vector3,s=new THREE.Vector3,h=new THREE.Vector3;return function(t,e,r,i,n){if(a.subVectors(e,t),s.subVectors(r,t),h.crossVectors(a,s),0<(e=this.direction.dot(h))){if(i)return null;i=1}else{if(!(e<0))return null;i=-1,e=-e}return o.subVectors(this.origin,t),(t=i*this.direction.dot(s.crossVectors(o,s)))<0?null:(r=i*this.direction.dot(a.cross(o)))<0||e<t+r?null:(t=-i*o.dot(h))<0?null:this.at(t/e,n)}}(),applyMatrix4:function(t){return this.direction.add(this.origin).applyMatrix4(t),this.origin.applyMatrix4(t),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(t,e){this.center=void 0!==t?t:new THREE.Vector3,this.radius=void 0!==e?e:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(){var a=new THREE.Box3;return function(t,e){var r=this.center;void 0!==e?r.copy(e):a.setFromPoints(t).center(r);for(var i=0,n=0,o=t.length;n<o;n++)i=Math.max(i,r.distanceToSquared(t[n]));return this.radius=Math.sqrt(i),this}}(),copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},clampPoint:function(t,e){var r=this.center.distanceToSquared(t),i=e||new THREE.Vector3;return i.copy(t),r>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(t){return(t=t||new THREE.Box3).set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius*=t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(t,e,r,i,n,o){this.planes=[void 0!==t?t:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==o?o:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(t,e,r,i,n,o){var a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(r),a[3].copy(i),a[4].copy(n),a[5].copy(o),this},copy:function(t){for(var e=this.planes,r=0;r<6;r++)e[r].copy(t.planes[r]);return this},setFromMatrix:function(t){var e=this.planes;t=(m=t.elements)[0];var r=m[1],i=m[2],n=m[3],o=m[4],a=m[5],s=m[6],h=m[7],l=m[8],c=m[9],u=m[10],f=m[11],E=m[12],p=m[13],d=m[14],m=m[15];return e[0].setComponents(n-t,h-o,f-l,m-E).normalize(),e[1].setComponents(n+t,h+o,f+l,m+E).normalize(),e[2].setComponents(n+r,h+a,f+c,m+p).normalize(),e[3].setComponents(n-r,h-a,f-c,m-p).normalize(),e[4].setComponents(n-i,h-s,f-u,m-d).normalize(),e[5].setComponents(n+i,h+s,f+u,m+d).normalize(),this},intersectsObject:function(){var r=new THREE.Sphere;return function(t){var e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),r.copy(e.boundingSphere),r.applyMatrix4(t.matrixWorld),this.intersectsSphere(r)}}(),intersectsSphere:function(t){var e=this.planes,r=t.center;t=-t.radius;for(var i=0;i<6;i++)if(e[i].distanceToPoint(r)<t)return!1;return!0},intersectsBox:function(){var o=new THREE.Vector3,a=new THREE.Vector3;return function(t){for(var e=this.planes,r=0;r<6;r++){var i=e[r];o.x=0<i.normal.x?t.min.x:t.max.x,a.x=0<i.normal.x?t.max.x:t.min.x,o.y=0<i.normal.y?t.min.y:t.max.y,a.y=0<i.normal.y?t.max.y:t.min.y,o.z=0<i.normal.z?t.min.z:t.max.z,a.z=0<i.normal.z?t.max.z:t.min.z;var n=i.distanceToPoint(o);i=i.distanceToPoint(a);if(n<0&&i<0)return!1}return!0}}(),containsPoint:function(t){for(var e=this.planes,r=0;r<6;r++)if(e[r].distanceToPoint(t)<0)return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(t,e){this.normal=void 0!==t?t:new THREE.Vector3(1,0,0),this.constant=void 0!==e?e:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,r,i){return this.normal.set(t,e,r),this.constant=i,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var i=new THREE.Vector3,n=new THREE.Vector3;return function(t,e,r){return e=i.subVectors(r,e).cross(n.subVectors(t,e)).normalize(),this.setFromNormalAndCoplanarPoint(e,t),this}}(),copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return this.orthoPoint(t,e).sub(t).negate()},orthoPoint:function(t,e){var r=this.distanceToPoint(t);return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(r)},isIntersectionLine:function(t){var e=this.distanceToPoint(t.start);return t=this.distanceToPoint(t.end),e<0&&0<t||t<0&&0<e},intersectLine:function(){var o=new THREE.Vector3;return function(t,e){var r=e||new THREE.Vector3,i=t.delta(o),n=this.normal.dot(i);return 0!=n?(n=-(t.start.dot(this.normal)+this.constant)/n)<0||1<n?void 0:r.copy(i).multiplyScalar(n).add(t.start):0==this.distanceToPoint(t.start)?r.copy(t.start):void 0}}(),coplanarPoint:function(t){return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var n=new THREE.Vector3,o=new THREE.Vector3,a=new THREE.Matrix3;return function(t,e){var r=e||a.getNormalMatrix(t),i=(r=n.copy(this.normal).applyMatrix3(r),this.coplanarPoint(o));return i.applyMatrix4(t),this.setFromNormalAndCoplanarPoint(r,i),this}}(),translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={generateUUID:function(){var e,r="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),i=Array(36),n=0;return function(){for(var t=0;t<36;t++)8==t||13==t||18==t||23==t?i[t]="-":14==t?i[t]="4":(n<=2&&(n=33554432+16777216*Math.random()|0),e=15&n,n>>=4,i[t]=r[19==t?3&e|8:e]);return i.join("")}}(),clamp:function(t,e,r){return t<e?e:r<t?r:t},clampBottom:function(t,e){return t<e?e:t},mapLinear:function(t,e,r,i,n){return i+(t-e)*(n-i)/(r-e)},smoothstep:function(t,e,r){return t<=e?0:r<=t?1:(t=(t-e)/(r-e))*t*(3-2*t)},smootherstep:function(t,e,r){return t<=e?0:r<=t?1:(t=(t-e)/(r-e))*t*t*(t*(6*t-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},sign:function(t){return t<0?-1:0<t?1:0},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}(),isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t}},THREE.Spline=function(t){function e(t,e,r,i,n,o,a){return(2*(e-r)+(t=.5*(r-t))+(i=.5*(i-e)))*a+(-3*(e-r)-2*t-i)*o+t*n+e}this.points=t;var r,i,n,o,a,s,h,l,c,u=[],f={x:0,y:0,z:0};this.initFromArray=function(t){this.points=[];for(var e=0;e<t.length;e++)this.points[e]={x:t[e][0],y:t[e][1],z:t[e][2]}},this.getPoint=function(t){return r=(this.points.length-1)*t,i=Math.floor(r),n=r-i,u[0]=0===i?i:i-1,u[1]=i,u[2]=i>this.points.length-2?this.points.length-1:i+1,u[3]=i>this.points.length-3?this.points.length-1:i+2,s=this.points[u[0]],h=this.points[u[1]],l=this.points[u[2]],c=this.points[u[3]],a=n*(o=n*n),f.x=e(s.x,h.x,l.x,c.x,n,o,a),f.y=e(s.y,h.y,l.y,c.y,n,o,a),f.z=e(s.z,h.z,l.z,c.z,n,o,a),f},this.getControlPointsArray=function(){var t,e,r=this.points.length,i=[];for(t=0;t<r;t++)e=this.points[t],i[t]=[e.x,e.y,e.z];return i},this.getLength=function(t){var e,r,i,n=e=e=0,o=new THREE.Vector3,a=new THREE.Vector3,s=[],h=0;for(s[0]=0,t||(t=100),r=this.points.length*t,o.copy(this.points[0]),t=1;t<r;t++)e=t/r,i=this.getPoint(e),a.copy(i),h+=a.distanceTo(o),o.copy(i),e*=this.points.length-1,(e=Math.floor(e))!=n&&(s[e]=h,n=e);return s[s.length]=h,{chunks:s,total:h}},
this.reparametrizeByArcLength=function(t){var e,r,i,n,o,a,s=[],h=new THREE.Vector3,l=this.getLength();for(s.push(h.copy(this.points[0]).clone()),e=1;e<this.points.length;e++){for(r=l.chunks[e]-l.chunks[e-1],a=Math.ceil(t*r/l.total),n=(e-1)/(this.points.length-1),o=e/(this.points.length-1),r=1;r<a-1;r++)i=n+1/a*r*(o-n),i=this.getPoint(i),s.push(h.copy(i).clone());s.push(h.copy(this.points[e]).clone())}this.points=s}},THREE.Triangle=function(t,e,r){this.a=void 0!==t?t:new THREE.Vector3,this.b=void 0!==e?e:new THREE.Vector3,this.c=void 0!==r?r:new THREE.Vector3},THREE.Triangle.normal=function(){var n=new THREE.Vector3;return function(t,e,r,i){return(i=i||new THREE.Vector3).subVectors(r,e),n.subVectors(t,e),i.cross(n),0<(t=i.lengthSq())?i.multiplyScalar(1/Math.sqrt(t)):i.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var s=new THREE.Vector3,h=new THREE.Vector3,l=new THREE.Vector3;return function(t,e,r,i,n){s.subVectors(i,e),h.subVectors(r,e),l.subVectors(t,e),t=s.dot(s),e=s.dot(h),r=s.dot(l);var o=h.dot(h);i=h.dot(l);var a=t*o-e*e;return n=n||new THREE.Vector3,0==a?n.set(-2,-1,-1):(o=(o*r-e*i)*(a=1/a),t=(t*i-e*r)*a,n.set(1-o-t,t,o))}}(),THREE.Triangle.containsPoint=function(){var n=new THREE.Vector3;return function(t,e,r,i){return 0<=(t=THREE.Triangle.barycoordFromPoint(t,e,r,i,n)).x&&0<=t.y&&t.x+t.y<=1}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(t,e,r){return this.a.copy(t),this.b.copy(e),this.c.copy(r),this},setFromPointsAndIndices:function(t,e,r,i){return this.a.copy(t[e]),this.b.copy(t[r]),this.c.copy(t[i]),this},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},area:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(){return t.subVectors(this.c,this.b),e.subVectors(this.a,this.b),.5*t.cross(e).length()}}(),midpoint:function(t){return(t||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(t){return THREE.Triangle.normal(this.a,this.b,this.c,t)},plane:function(t){return(t||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(t,e){return THREE.Triangle.barycoordFromPoint(t,this.a,this.b,this.c,e)},containsPoint:function(t){return THREE.Triangle.containsPoint(t,this.a,this.b,this.c)},equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Clock=function(t){this.autoStart=void 0===t||t,this.elapsedTime=this.oldTime=this.startTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0;if(this.autoStart&&!this.running&&this.start(),this.running){var e=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();t=.001*(e-this.oldTime);this.oldTime=e,this.elapsedTime+=t}return t}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(t){t.addEventListener=THREE.EventDispatcher.prototype.addEventListener,t.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,t.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,t.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[t]&&(r[t]=[]),-1===r[t].indexOf(e)&&r[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[t]&&-1!==r[t].indexOf(e)},removeEventListener:function(t,e){if(void 0!==this._listeners){var r=this._listeners[t];if(void 0!==r){var i=r.indexOf(e);-1!==i&&r.splice(i,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners[t.type];if(void 0!==e){t.target=this;for(var r=[],i=e.length,n=0;n<i;n++)r[n]=e[n];for(n=0;n<i;n++)r[n].call(this,t)}}}},function(n){n.Raycaster=function(t,e,r,i){this.ray=new n.Ray(t,e),this.near=r||0,this.far=i||Infinity,this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var o=function(t,e){return t.distance-e.distance},a=function(t,e,r,i){if(t.raycast(e,r),!0===i){i=0;for(var n=(t=t.children).length;i<n;i++)a(t[i],e,r,!0)}};n.Raycaster.prototype={constructor:n.Raycaster,precision:1e-4,linePrecision:1,set:function(t,e){this.ray.set(t,e)},intersectObject:function(t,e){var r=[];return a(t,this,r,e),r.sort(o),r},intersectObjects:function(t,e){for(var r=[],i=0,n=t.length;i<n;i++)a(t[i],this,r,e);return r.sort(o),r}}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.parent=void 0,this.children=[],this.up=THREE.Object3D.DefaultUp.clone();var t=new THREE.Vector3,e=new THREE.Euler,r=new THREE.Quaternion,i=new THREE.Vector3(1,1,1);e.onChange(function(){r.setFromEuler(e,!1)}),r.onChange(function(){e.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:t},rotation:{enumerable:!0,value:e},quaternion:{enumerable:!0,value:r},scale:{enumerable:!0,value:i}}),this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!1,this.visible=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0),THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order},set eulerOrder(t){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order=t},get useQuaternion(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(t){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(t){this.matrix.multiplyMatrices(t,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(){var r=new THREE.Quaternion;return function(t,e){return r.setFromAxisAngle(t,e),this.quaternion.multiply(r),this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var r=new THREE.Vector3;return function(t,e){return r.copy(t).applyQuaternion(this.quaternion),this.position.add(r.multiplyScalar(e)),this}}(),translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(t){if(1<arguments.length){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}if(t===this)return console.error("THREE.Object3D.add:",t,"can't be added as a child of itself."),this;if(t instanceof THREE.Object3D){for(void 0!==t.parent&&t.parent.remove(t),t.parent=this,t.dispatchEvent({type:"added"}),this.children.push(t),e=this;void 0!==e.parent;)e=e.parent;void 0!==e&&e instanceof THREE.Scene&&e.__addObject(t)}else console.error("THREE.Object3D.add:",t,"is not an instance of THREE.Object3D.");return this},remove:function(t){if(1<arguments.length)for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);if(-1!==(e=this.children.indexOf(t))){for(t.parent=void 0,t.dispatchEvent({type:"removed"}),this.children.splice(e,1),e=this;void 0!==e.parent;)e=e.parent;void 0!==e&&e instanceof THREE.Scene&&e.__removeObject(t)}},raycast:function(){},traverse:function(t){t(this);for(var e=0,r=this.children.length;e<r;e++)this.children[e].traverse(t)},traverseVisible:function(t){if(!1!==this.visible){t(this);for(var e=0,r=this.children.length;e<r;e++)this.children[e].traverseVisible(t)}},getObjectById:function(t,e){for(var r=0,i=this.children.length;r<i;r++){var n=this.children[r];if(n.id===t||!0===e&&void 0!==(n=n.getObjectById(t,e)))return n}},getObjectByName:function(t,e){for(var r=0,i=this.children.length;r<i;r++){var n=this.children[r];if(n.name===t||!0===e&&void 0!==(n=n.getObjectByName(t,e)))return n}},getChildByName:function(t,e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t,e)},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){!0===this.matrixAutoUpdate&&this.updateMatrix(),!0!==this.matrixWorldNeedsUpdate&&!0!==t||(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t=!(this.matrixWorldNeedsUpdate=!1));for(var e=0,r=this.children.length;e<r;e++)this.children[e].updateMatrixWorld(t)},clone:function(t,e){if(void 0===t&&(t=new THREE.Object3D),void 0===e&&(e=!0),t.name=this.name,t.up.copy(this.up),t.position.copy(this.position),t.quaternion.copy(this.quaternion),t.scale.copy(this.scale),t.renderDepth=this.renderDepth,t.rotationAutoUpdate=this.rotationAutoUpdate,t.matrix.copy(this.matrix),t.matrixWorld.copy(this.matrixWorld),t.matrixAutoUpdate=this.matrixAutoUpdate,t.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,t.visible=this.visible,t.castShadow=this.castShadow,t.receiveShadow=this.receiveShadow,t.frustumCulled=this.frustumCulled,t.userData=JSON.parse(JSON.stringify(this.userData)),!0===e)for(var r=0;r<this.children.length;r++)t.add(this.children[r].clone());return t}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Projector=function(){function M(){if(U!==e)return j[U++];var t=new THREE.RenderableVertex;return j.push(t),e++,U++,t}function S(){if(V!==o)return i[V++];var t=new THREE.RenderableFace;return i.push(t),o++,V++,t}function C(){if(k!==s)return a[k++];var t=new THREE.RenderableLine;return a.push(t),s++,k++,t}function A(){if(O!==l)return h[O++];var t=new THREE.RenderableSprite;return h.push(t),l++,O++,t}function L(t,e){return t.z!==e.z?e.z-t.z:t.id!==e.id?t.id-e.id:0}function P(t,e){var r=0,i=1,n=t.z+t.w,o=e.z+e.w,a=-t.z+t.w,s=-e.z+e.w;return 0<=n&&0<=o&&0<=a&&0<=s||!(n<0&&o<0||a<0&&s<0)&&(n<0?r=Math.max(r,n/(n-o)):o<0&&(i=Math.min(i,n/(n-o))),a<0?r=Math.max(r,a/(a-s)):s<0&&(i=Math.min(i,a/(a-s))),!(i<r)&&(t.lerp(e,r),e.lerp(t,1-i),!0))}var F,D,n,U,z,V,B,k,N,O,I,r,G=[],W=0,j=[],e=0,i=[],o=0,a=[],s=0,h=[],l=0,X={objects:[],lights:[],elements:[]},Y=new THREE.Vector3,q=new THREE.Vector3,K=new THREE.Vector3,Z=new THREE.Vector3,Q=new THREE.Vector4,E=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),p=new THREE.Box3,d=Array(3),J=new THREE.Matrix4,$=new THREE.Matrix4,tt=new THREE.Matrix4,et=new THREE.Matrix3,rt=new THREE.Frustum,it=new THREE.Vector4,nt=new THREE.Vector4;this.projectVector=function(t,e){return e.matrixWorldInverse.getInverse(e.matrixWorld),$.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),t.applyProjection($)},this.unprojectVector=(r=new THREE.Matrix4,function(t,e){return r.getInverse(e.projectionMatrix),$.multiplyMatrices(e.matrixWorld,r),t.applyProjection($)}),this.pickingRay=function(t,e){t.z=-1;var r=new THREE.Vector3(t.x,t.y,1);return this.unprojectVector(t,e),this.unprojectVector(r,e),r.sub(t).normalize(),new THREE.Raycaster(t,r)};var ot=new function(){var a=[],s=[],h=null,l=null,c=new THREE.Matrix3,i=function(t){var e=t.positionWorld,r=t.positionScreen;e.copy(t.position).applyMatrix4(I),r.copy(e).applyMatrix4($),e=1/r.w,r.x*=e,r.y*=e,r.z*=e,t.visible=-1<=r.x&&r.x<=1&&-1<=r.y&&r.y<=1&&-1<=r.z&&r.z<=1},u=function(t,e,r){return!0===t.visible||!0===e.visible||!0===r.visible||(d[0]=t.positionScreen,d[1]=e.positionScreen,d[2]=r.positionScreen,E.isIntersectionBox(p.setFromPoints(d)))},f=function(t,e,r){return(r.positionScreen.x-t.positionScreen.x)*(e.positionScreen.y-t.positionScreen.y)-(r.positionScreen.y-t.positionScreen.y)*(e.positionScreen.x-t.positionScreen.x)<0};return{setObject:function(t){l=(h=t).material,c.getNormalMatrix(h.matrixWorld),a.length=0,s.length=0},projectVertex:i,checkTriangleVisibility:u,checkBackfaceCulling:f,pushVertex:function(t,e,r){(n=M()).position.set(t,e,r),i(n)},pushNormal:function(t,e,r){a.push(t,e,r)},pushUv:function(t,e){s.push(t,e)},pushLine:function(t,e){var r=j[t],i=j[e];(B=C()).id=h.id,B.v1.copy(r),B.v2.copy(i),B.z=(r.positionScreen.z+i.positionScreen.z)/2,B.material=h.material,X.elements.push(B)},pushTriangle:function(t,e,r){var i=j[t],n=j[e],o=j[r];if(!1!==u(i,n,o)&&(l.side===THREE.DoubleSide||!0===f(i,n,o))){for((z=S()).id=h.id,z.v1.copy(i),z.v2.copy(n),z.v3.copy(o),z.z=(i.positionScreen.z+n.positionScreen.z+o.positionScreen.z)/3,i=0;i<3;i++)n=3*arguments[i],(o=z.vertexNormalsModel[i]).set(a[n],a[n+1],a[n+2]),o.applyMatrix3(c).normalize(),n=2*arguments[i],z.uvs[i].set(s[n],s[n+1]);z.vertexNormalsLength=3,z.material=h.material,X.elements.push(z)}}}};this.projectScene=function(t,e,r,i){for(O=k=V=0,!(X.elements.length=0)===t.autoUpdate&&t.updateMatrixWorld(),void 0===e.parent&&e.updateMatrixWorld(),J.copy(e.matrixWorldInverse.getInverse(e.matrixWorld)),$.multiplyMatrices(e.projectionMatrix,J),rt.setFromMatrix($),D=0,X.objects.length=0,X.lights.length=0,t.traverseVisible(function(t){if(t instanceof THREE.Light)X.lights.push(t);else if((t instanceof THREE.Mesh||t instanceof THREE.Line||t instanceof THREE.Sprite)&&(!1===t.frustumCulled||!0===rt.intersectsObject(t))){if(D===W){var e=new THREE.RenderableObject;G.push(e),W++,D++,F=e}else F=G[D++];F.id=t.id,null!==(F.object=t).renderDepth?F.z=t.renderDepth:(Z.setFromMatrixPosition(t.matrixWorld),Z.applyProjection($),F.z=Z.z),X.objects.push(F)}}),!0===r&&X.objects.sort(L),t=0,r=X.objects.length;t<r;t++){var n=(a=X.objects[t].object).geometry;if(ot.setObject(a),I=a.matrixWorld,U=0,a instanceof THREE.Mesh){if(n instanceof THREE.BufferGeometry){var o=n.attributes,a=n.offsets;if(void 0!==o.position){n=0;for(var s=(l=o.position.array).length;n<s;n+=3)ot.pushVertex(l[n],l[n+1],l[n+2]);if(void 0!==o.normal)for(n=0,s=(c=o.normal.array).length;n<s;n+=3)ot.pushNormal(c[n],c[n+1],c[n+2]);if(void 0!==o.uv)for(n=0,s=(c=o.uv.array).length;n<s;n+=2)ot.pushUv(c[n],c[n+1]);if(void 0!==o.index)if(o=o.index.array,0<a.length)for(t=0;t<a.length;t++)for(l=(s=a[t]).index,n=s.start,s=s.start+s.count;n<s;n+=3)ot.pushTriangle(o[n]+l,o[n+1]+l,o[n+2]+l);else for(n=0,s=o.length;n<s;n+=3)ot.pushTriangle(o[n],o[n+1],o[n+2]);else for(n=0,s=l.length/3;n<s;n+=3)ot.pushTriangle(n,n+1,n+2)}}else if(n instanceof THREE.Geometry){var h=n.vertices;s=n.faces,o=n.faceVertexUvs[0];et.getNormalMatrix(I);for(var l,c=!0===(l=a.material instanceof THREE.MeshFaceMaterial)?a.material:null,u=0,f=h.length;u<f;u++){var E=h[u];ot.pushVertex(E.x,E.y,E.z)}for(h=0,u=s.length;h<u;h++){f=s[h];var p=!0===l?c.materials[f.materialIndex]:a.material;if(void 0!==p){var d=p.side,m=(E=j[f.a],j[f.b]),g=j[f.c];if(!0===p.morphTargets){var T=n.morphTargets,v=a.morphTargetInfluences,y=E.position,R=m.position,x=g.position;Y.set(0,0,0),q.set(0,0,0),K.set(0,0,0);for(var H=0,_=T.length;H<_;H++){var b=v[H];if(0!==b){var w=T[H].vertices;Y.x+=(w[f.a].x-y.x)*b,Y.y+=(w[f.a].y-y.y)*b,Y.z+=(w[f.a].z-y.z)*b,q.x+=(w[f.b].x-R.x)*b,q.y+=(w[f.b].y-R.y)*b,q.z+=(w[f.b].z-R.z)*b,K.x+=(w[f.c].x-x.x)*b,K.y+=(w[f.c].y-x.y)*b,K.z+=(w[f.c].z-x.z)*b}}E.position.add(Y),m.position.add(q),g.position.add(K),ot.projectVertex(E),ot.projectVertex(m),ot.projectVertex(g)}if(!1!==ot.checkTriangleVisibility(E,m,g)){if(T=ot.checkBackfaceCulling(E,m,g),d!==THREE.DoubleSide){if(d===THREE.FrontSide&&!1===T)continue;if(d===THREE.BackSide&&!0===T)continue}for((z=S()).id=a.id,z.v1.copy(E),z.v2.copy(m),z.v3.copy(g),z.normalModel.copy(f.normal),!1!==T||d!==THREE.BackSide&&d!==THREE.DoubleSide||z.normalModel.negate(),z.normalModel.applyMatrix3(et).normalize(),v=f.vertexNormals,y=0,R=Math.min(v.length,3);y<R;y++)(x=z.vertexNormalsModel[y]).copy(v[y]),!1!==T||d!==THREE.BackSide&&d!==THREE.DoubleSide||x.negate(),x.applyMatrix3(et).normalize();if(z.vertexNormalsLength=v.length,void 0!==(d=o[h]))for(T=0;T<3;T++)z.uvs[T].copy(d[T]);z.color=f.color,z.material=p,z.z=(E.positionScreen.z+m.positionScreen.z+g.positionScreen.z)/3,X.elements.push(z)}}}}}else if(a instanceof THREE.Line){if(n instanceof THREE.BufferGeometry){if(void 0!==(o=n.attributes).position){for(n=0,s=(l=o.position.array).length;n<s;n+=3)ot.pushVertex(l[n],l[n+1],l[n+2]);if(void 0!==o.index)for(n=0,s=(o=o.index.array).length;n<s;n+=2)ot.pushLine(o[n],o[n+1]);else for(o=a.type===THREE.LinePieces?2:1,n=0,s=l.length/3-1;n<s;n+=o)ot.pushLine(n,n+1)}}else if(n instanceof THREE.Geometry&&(tt.multiplyMatrices($,I),0!==(h=a.geometry.vertices).length))for((E=M()).positionScreen.copy(h[0]).applyMatrix4(tt),o=a.type===THREE.LinePieces?2:1,u=1,f=h.length;u<f;u++)(E=M()).positionScreen.copy(h[u]).applyMatrix4(tt),0<(u+1)%o||(m=j[U-2],it.copy(E.positionScreen),nt.copy(m.positionScreen),!0===P(it,nt)&&(it.multiplyScalar(1/it.w),nt.multiplyScalar(1/nt.w),(B=C()).id=a.id,B.v1.positionScreen.copy(it),B.v2.positionScreen.copy(nt),B.z=Math.max(it.z,nt.z),B.material=a.material,a.material.vertexColors===THREE.VertexColors&&(B.vertexColors[0].copy(a.geometry.colors[u]),B.vertexColors[1].copy(a.geometry.colors[u-1])),X.elements.push(B)))}else a instanceof THREE.Sprite&&(Q.set(I.elements[12],I.elements[13],I.elements[14],1),Q.applyMatrix4($),n=1/Q.w,Q.z*=n,-1<=Q.z&&Q.z<=1&&((N=A()).id=a.id,N.x=Q.x*n,N.y=Q.y*n,N.z=Q.z,N.object=a,N.rotation=a.rotation,N.scale.x=a.scale.x*Math.abs(N.x-(Q.x+e.projectionMatrix.elements[0])/(Q.w+e.projectionMatrix.elements[12])),N.scale.y=a.scale.y*Math.abs(N.y-(Q.y+e.projectionMatrix.elements[5])/(Q.w+e.projectionMatrix.elements[13])),N.material=a.material,X.elements.push(N)))}return!0===i&&X.elements.sort(L),X}},THREE.Face3=function(t,e,r,i,n,o){this.a=t,this.b=e,this.c=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=i instanceof Array?i:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=void 0!==o?o:0},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var t=new THREE.Face3(this.a,this.b,this.c);t.normal.copy(this.normal),t.color.copy(this.color),t.materialIndex=this.materialIndex;for(var e=0,r=this.vertexNormals.length;e<r;e++)t.vertexNormals[e]=this.vertexNormals[e].clone();for(e=0,r=this.vertexColors.length;e<r;e++)t.vertexColors[e]=this.vertexColors[e].clone();for(e=0,r=this.vertexTangents.length;e<r;e++)t.vertexTangents[e]=this.vertexTangents[e].clone();return t}},THREE.Face4=function(t,e,r,i,n,o,a){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(t,e,r,n,o,a)},THREE.BufferAttribute=function(t,e){this.array=t,this.itemSize=e},THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},set:function(t){return this.array.set(t),this},setX:function(t,e){return this.array[t*this.itemSize]=e,this},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},setXY:function(t,e,r){return t*=this.itemSize,this.array[t]=e,this.array[t+1]=r,this},setXYZ:function(t,e,r,i){return t*=this.itemSize,this.array[t]=e,this.array[t+1]=r,this.array[t+2]=i,this},setXYZW:function(t,e,r,i,n){return t*=this.itemSize,this.array[t]=e,this.array[t+1]=r,this.array[t+2]=i,this.array[t+3]=n,this}},THREE.Int8Attribute=function(t,e){return console.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Uint8Attribute=function(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Uint8ClampedAttribute=function(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Int16Attribute=function(t,e){return console.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Uint16Attribute=function(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Int32Attribute=function(t,e){return console.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Uint32Attribute=function(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Float32Attribute=function(t,e){return console.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Float64Attribute=function(t,e){return console.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.attributes={},this.offsets=this.drawcalls=[],this.boundingSphere=this.boundingBox=null},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(t,e,r){!1==e instanceof THREE.BufferAttribute?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.attributes[t]={array:e,itemSize:r}):this.attributes[t]=e},getAttribute:function(t){return this.attributes[t]},addDrawCall:function(t,e,r){this.drawcalls.push({start:t,count:e,index:void 0!==r?r:0})},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(t.applyToVector3Array(e.array),e.needsUpdate=!0),void 0!==(e=this.attributes.normal)&&((new THREE.Matrix3).getNormalMatrix(t).applyToVector3Array(e.array),e.needsUpdate=!0)},fromGeometry:function(t,e){e=e||{vertexColors:THREE.NoColors};var r=t.vertices,i=t.faces,n=t.faceVertexUvs,o=e.vertexColors,a=0<n[0].length,s=3==i[0].vertexNormals.length,h=new Float32Array(9*i.length);this.addAttribute("position",new THREE.BufferAttribute(h,3));var l=new Float32Array(9*i.length);if(this.addAttribute("normal",new THREE.BufferAttribute(l,3)),o!==THREE.NoColors){var c=new Float32Array(9*i.length);this.addAttribute("color",new THREE.BufferAttribute(c,3))}if(!0===a){var u=new Float32Array(6*i.length);this.addAttribute("uvs",new THREE.BufferAttribute(u,2))}for(var f=0,E=0,p=0;f<i.length;f++,E+=6,p+=9){var d=i[f],m=r[d.a],g=r[d.b],T=r[d.c];h[p]=m.x,h[p+1]=m.y,h[p+2]=m.z,h[p+3]=g.x,h[p+4]=g.y,h[p+5]=g.z,h[p+6]=T.x,h[p+7]=T.y,h[p+8]=T.z,!0===s?(m=d.vertexNormals[0],g=d.vertexNormals[1],T=d.vertexNormals[2],l[p]=m.x,l[p+1]=m.y,l[p+2]=m.z,l[p+3]=g.x,l[p+4]=g.y,l[p+5]=g.z,l[p+6]=T.x,l[p+7]=T.y,l[p+8]=T.z):(m=d.normal,l[p]=m.x,l[p+1]=m.y,l[p+2]=m.z,l[p+3]=m.x,l[p+4]=m.y,l[p+5]=m.z,l[p+6]=m.x,l[p+7]=m.y,l[p+8]=m.z),o===THREE.FaceColors?(d=d.color,c[p]=d.r,c[p+1]=d.g,c[p+2]=d.b,c[p+3]=d.r,c[p+4]=d.g,c[p+5]=d.b,c[p+6]=d.r,c[p+7]=d.g,c[p+8]=d.b):o===THREE.VertexColors&&(m=d.vertexColors[0],g=d.vertexColors[1],d=d.vertexColors[2],c[p]=m.r,c[p+1]=m.g,c[p+2]=m.b,c[p+3]=g.r,c[p+4]=g.g,c[p+5]=g.b,c[p+6]=d.r,c[p+7]=d.g,c[p+8]=d.b),!0===a&&(d=n[0][f][0],m=n[0][f][1],g=n[0][f][2],u[E]=d.x,u[E+1]=d.y,u[E+2]=m.x,u[E+3]=m.y,u[E+4]=g.x,u[E+5]=g.y)}return this.computeBoundingSphere(),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var t=this.attributes.position.array;if(t){var e=this.boundingBox;3<=t.length&&(e.min.x=e.max.x=t[0],e.min.y=e.max.y=t[1],e.min.z=e.max.z=t[2]);for(var r=3,i=t.length;r<i;r+=3){var n=t[r],o=t[r+1],a=t[r+2];n<e.min.x?e.min.x=n:n>e.max.x&&(e.max.x=n),o<e.min.y?e.min.y=o:o>e.max.y&&(e.max.y=o),a<e.min.z?e.min.z=a:a>e.max.z&&(e.max.z=a)}}void 0!==t&&0!==t.length||(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')},computeBoundingSphere:function(){var o=new THREE.Box3,a=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var t=this.attributes.position.array;if(t){o.makeEmpty();for(var e=this.boundingSphere.center,r=0,i=t.length;r<i;r+=3)a.set(t[r],t[r+1],t[r+2]),o.expandByPoint(a);o.center(e);var n=0;for(r=0,i=t.length;r<i;r+=3)a.set(t[r],t[r+1],t[r+2]),n=Math.max(n,e.distanceToSquared(a));this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){if(this.attributes.position){var t,e,r,i;if(t=this.attributes.position.array.length,void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(t)};else for(t=0,e=this.attributes.normal.array.length;t<e;t++)this.attributes.normal.array[t]=0;var n,o,a,s,h,l,c=this.attributes.position.array,u=this.attributes.normal.array,f=new THREE.Vector3,E=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3,m=new THREE.Vector3;if(this.attributes.index){var g=this.attributes.index.array,T=0<this.offsets.length?this.offsets:[{start:0,count:g.length,index:0}];for(r=0,i=T.length;r<i;++r){e=T[r].start,n=T[r].count;var v=T[r].index;for(t=e,e+=n;t<e;t+=3)n=v+g[t],o=v+g[t+1],a=v+g[t+2],s=c[3*n],h=c[3*n+1],l=c[3*n+2],f.set(s,h,l),s=c[3*o],h=c[3*o+1],l=c[3*o+2],E.set(s,h,l),s=c[3*a],h=c[3*a+1],l=c[3*a+2],p.set(s,h,l),d.subVectors(p,E),m.subVectors(f,E),d.cross(m),u[3*n]+=d.x,u[3*n+1]+=d.y,u[3*n+2]+=d.z,u[3*o]+=d.x,u[3*o+1]+=d.y,u[3*o+2]+=d.z,u[3*a]+=d.x,u[3*a+1]+=d.y,u[3*a+2]+=d.z}}else for(t=0,e=c.length;t<e;t+=9)s=c[t],h=c[t+1],l=c[t+2],f.set(s,h,l),s=c[t+3],h=c[t+4],l=c[t+5],E.set(s,h,l),s=c[t+6],h=c[t+7],l=c[t+8],p.set(s,h,l),d.subVectors(p,E),m.subVectors(f,E),d.cross(m),u[t]=d.x,u[t+1]=d.y,u[t+2]=d.z,u[t+3]=d.x,u[t+4]=d.y,u[t+5]=d.z,u[t+6]=d.x,u[t+7]=d.y,u[t+8]=d.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},computeTangents:function(){function t(t,e,r){u=i[3*t],f=i[3*t+1],E=i[3*t+2],p=i[3*e],d=i[3*e+1],m=i[3*e+2],g=i[3*r],T=i[3*r+1],v=i[3*r+2],y=o[2*t],R=o[2*t+1],x=o[2*e],H=o[2*e+1],_=o[2*r],b=o[2*r+1],w=p-u,M=g-u,S=d-f,C=T-f,A=m-E,L=v-E,z=1/((P=x-y)*(U=b-R)-(F=_-y)*(D=H-R)),I.set((U*w-D*M)*z,(U*S-D*C)*z,(U*A-D*L)*z),G.set((P*M-F*w)*z,(P*C-F*S)*z,(P*L-F*A)*z),h[t].add(I),h[e].add(I),h[r].add(I),l[t].add(G),l[e].add(G),l[r].add(G)}function e(t){Q.x=n[3*t],Q.y=n[3*t+1],Q.z=n[3*t+2],J.copy(Q),Y=h[t],K.copy(Y),K.sub(Q.multiplyScalar(Q.dot(Y))).normalize(),Z.crossVectors(J,Y),q=Z.dot(l[t]),X=q<0?-1:1,s[4*t]=K.x,s[4*t+1]=K.y,s[4*t+2]=K.z,s[4*t+3]=X}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var r=this.attributes.index.array,i=this.attributes.position.array,n=this.attributes.normal.array,o=this.attributes.uv.array,a=i.length/3;void 0===this.attributes.tangent&&(this.attributes.tangent={itemSize:4,array:new Float32Array(4*a)});for(var s=this.attributes.tangent.array,h=[],l=[],c=0;c<a;c++)h[c]=new THREE.Vector3,l[c]=new THREE.Vector3;var u,f,E,p,d,m,g,T,v,y,R,x,H,_,b,w,M,S,C,A,L,P,F,D,U,z,V,B,k,N,O,I=new THREE.Vector3,G=new THREE.Vector3,W=this.offsets;c=0;for(B=W.length;c<B;++c){V=W[c].start,k=W[c].count;var j=W[c].index;a=V;for(V+=k;a<V;a+=3)t(k=j+r[a],N=j+r[a+1],O=j+r[a+2])}var X,Y,q,K=new THREE.Vector3,Z=new THREE.Vector3,Q=new THREE.Vector3,J=new THREE.Vector3;c=0;for(B=W.length;c<B;++c)for(V=W[c].start,k=W[c].count,j=W[c].index,a=V,V+=k;a<V;a+=3)k=j+r[a],N=j+r[a+1],O=j+r[a+2],e(k),e(N),e(O)}},computeOffsets:function(t){var e=t;void 0===t&&(e=65535),Date.now(),t=this.attributes.index.array;for(var r=this.attributes.position.array,i=t.length/3,n=new Uint16Array(t.length),o=0,a=0,s=[{start:0,count:0,index:0}],h=s[0],l=0,c=new Int32Array(6),u=new Int32Array(r.length),f=new Int32Array(r.length),E=0;E<r.length;E++)u[E]=-1,f[E]=-1;for(r=0;r<i;r++){for(var p=l=0;p<3;p++)-1==u[E=t[3*r+p]]?(c[2*p]=E,c[2*p+1]=-1,l++):u[E]<h.index?(c[2*p]=E,c[2*p+1]=-1,0):(c[2*p]=E,c[2*p+1]=u[E]);if(a+l>h.index+e)for(h={start:o,count:0,index:a},s.push(h),l=0;l<6;l+=2)-1<(p=c[l+1])&&p<h.index&&(c[l+1]=-1);for(l=0;l<6;l+=2)E=c[l],-1===(p=c[l+1])&&(p=a++),f[u[E]=p]=E,n[o++]=p-h.index,h.count++}return this.reorderBuffers(n,f,a),this.offsets=s},merge:function(){console.log("BufferGeometry.merge(): TODO")},normalizeNormals:function(){for(var t,e,r,i=this.attributes.normal.array,n=0,o=i.length;n<o;n+=3)t=i[n],e=i[n+1],r=i[n+2],t=1/Math.sqrt(t*t+e*e+r*r),i[n]*=t,i[n+1]*=t,i[n+2]*=t},reorderBuffers:function(t,e,r){var i,n={},o=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(i in this.attributes)if("index"!=i)for(var a=this.attributes[i].array,s=0,h=o.length;s<h;s++){if(a instanceof(l=o[s])){n[i]=new l(this.attributes[i].itemSize*r);break}}for(o=0;o<r;o++)for(i in a=e[o],this.attributes)if("index"!=i){s=this.attributes[i].array,h=this.attributes[i].itemSize;for(var l=n[i],c=0;c<h;c++)l[o*h+c]=s[a*h+c]}for(i in this.attributes.index.array=t,this.attributes)"index"!=i&&(this.attributes[i].array=n[i],this.attributes[i].numItems=this.attributes[i].itemSize*r)},clone:function(){var t,e=new THREE.BufferGeometry,r=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(t in this.attributes){for(var i=(o=this.attributes[t]).array,n={itemSize:o.itemSize,array:null},o=0,a=r.length;o<a;o++){var s=r[o];if(i instanceof s){n.array=new s(i);break}}e.attributes[t]=n}for(o=0,a=this.offsets.length;o<a;o++)r=this.offsets[o],e.offsets.push({start:r.start,index:r.index,count:r.count});return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingSphere=this.boundingBox=null,this.hasTangents=!1,this.dynamic=!0,this.groupsNeedUpdate=this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(t){for(var e=(new THREE.Matrix3).getNormalMatrix(t),r=0,i=this.vertices.length;r<i;r++)this.vertices[r].applyMatrix4(t);for(r=0,i=this.faces.length;r<i;r++){(t=this.faces[r]).normal.applyMatrix3(e).normalize();for(var n=0,o=t.vertexNormals.length;n<o;n++)t.vertexNormals[n].applyMatrix3(e).normalize()}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox(),this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},center:function(){this.computeBoundingBox()
;var t=new THREE.Vector3;return t.addVectors(this.boundingBox.min,this.boundingBox.max),t.multiplyScalar(-.5),this.applyMatrix((new THREE.Matrix4).makeTranslation(t.x,t.y,t.z)),this.computeBoundingBox(),t},computeFaceNormals:function(){for(var t=new THREE.Vector3,e=new THREE.Vector3,r=0,i=this.faces.length;r<i;r++){var n=this.faces[r],o=this.vertices[n.a],a=this.vertices[n.b];t.subVectors(this.vertices[n.c],a),e.subVectors(o,a),t.cross(e),t.normalize(),n.normal.copy(t)}},computeVertexNormals:function(t){var e,r,i;for(i=Array(this.vertices.length),e=0,r=this.vertices.length;e<r;e++)i[e]=new THREE.Vector3;if(t){var n,o,a,s=new THREE.Vector3,h=new THREE.Vector3;for(new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,t=0,e=this.faces.length;t<e;t++)r=this.faces[t],n=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c],s.subVectors(a,o),h.subVectors(n,o),s.cross(h),i[r.a].add(s),i[r.b].add(s),i[r.c].add(s)}else for(t=0,e=this.faces.length;t<e;t++)i[(r=this.faces[t]).a].add(r.normal),i[r.b].add(r.normal),i[r.c].add(r.normal);for(e=0,r=this.vertices.length;e<r;e++)i[e].normalize();for(t=0,e=this.faces.length;t<e;t++)(r=this.faces[t]).vertexNormals[0]=i[r.a].clone(),r.vertexNormals[1]=i[r.b].clone(),r.vertexNormals[2]=i[r.c].clone()},computeMorphNormals:function(){var t,e,r,i,n;for(r=0,i=this.faces.length;r<i;r++)for((n=this.faces[r]).__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),t=0,e=n.vertexNormals.length;t<e;t++)n.__originalVertexNormals[t]?n.__originalVertexNormals[t].copy(n.vertexNormals[t]):n.__originalVertexNormals[t]=n.vertexNormals[t].clone();var o=new THREE.Geometry;for(o.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[],n=this.morphNormals[t].faceNormals;var a,s,h=this.morphNormals[t].vertexNormals;for(r=0,i=this.faces.length;r<i;r++)a=new THREE.Vector3,s={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},n.push(a),h.push(s)}for(h=this.morphNormals[t],o.vertices=this.morphTargets[t].vertices,o.computeFaceNormals(),o.computeVertexNormals(),r=0,i=this.faces.length;r<i;r++)n=this.faces[r],a=h.faceNormals[r],s=h.vertexNormals[r],a.copy(n.normal),s.a.copy(n.vertexNormals[0]),s.b.copy(n.vertexNormals[1]),s.c.copy(n.vertexNormals[2])}for(r=0,i=this.faces.length;r<i;r++)(n=this.faces[r]).normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){var t,e,r,i,n,o,a,s,h,l,c,u,f,E,p,d,m,g=[],T=[];r=new THREE.Vector3;var v=new THREE.Vector3,y=new THREE.Vector3,R=new THREE.Vector3,x=new THREE.Vector3;for(t=0,e=this.vertices.length;t<e;t++)g[t]=new THREE.Vector3,T[t]=new THREE.Vector3;for(t=0,e=this.faces.length;t<e;t++)n=this.faces[t],o=this.faceVertexUvs[0][t],i=n.a,m=n.b,n=n.c,a=this.vertices[i],s=this.vertices[m],h=this.vertices[n],l=o[0],c=o[1],u=o[2],o=s.x-a.x,f=h.x-a.x,E=s.y-a.y,p=h.y-a.y,s=s.z-a.z,a=h.z-a.z,h=c.x-l.x,d=u.x-l.x,c=c.y-l.y,u=1/(h*(l=u.y-l.y)-d*c),r.set((l*o-c*f)*u,(l*E-c*p)*u,(l*s-c*a)*u),v.set((h*f-d*o)*u,(h*p-d*E)*u,(h*a-d*s)*u),g[i].add(r),g[m].add(r),g[n].add(r),T[i].add(v),T[m].add(v),T[n].add(v);for(v=["a","b","c","d"],t=0,e=this.faces.length;t<e;t++)for(n=this.faces[t],r=0;r<Math.min(n.vertexNormals.length,3);r++)x.copy(n.vertexNormals[r]),m=g[i=n[v[r]]],y.copy(m),y.sub(x.multiplyScalar(x.dot(m))).normalize(),R.crossVectors(n.vertexNormals[r],m),i=(i=R.dot(T[i]))<0?-1:1,n.vertexTangents[r]=new THREE.Vector4(y.x,y.y,y.z,i);this.hasTangents=!0},computeLineDistances:function(){for(var t=0,e=this.vertices,r=0,i=e.length;r<i;r++)0<r&&(t+=e[r].distanceTo(e[r-1])),this.lineDistances[r]=t},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,r){if(!1==t instanceof THREE.Geometry)console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t);else{var i,n=this.vertices.length,o=this.vertices,a=t.vertices,s=this.faces,h=t.faces,l=this.faceVertexUvs[0];t=t.faceVertexUvs[0],void 0===r&&(r=0),void 0!==e&&(i=(new THREE.Matrix3).getNormalMatrix(e));for(var c=0,u=a.length;c<u;c++){var f=a[c].clone();void 0!==e&&f.applyMatrix4(e),o.push(f)}for(c=0,u=h.length;c<u;c++){var E,p=(a=h[c]).vertexNormals,d=a.vertexColors;for((f=new THREE.Face3(a.a+n,a.b+n,a.c+n)).normal.copy(a.normal),void 0!==i&&f.normal.applyMatrix3(i).normalize(),e=0,o=p.length;e<o;e++)E=p[e].clone(),void 0!==i&&E.applyMatrix3(i).normalize(),f.vertexNormals.push(E);for(f.color.copy(a.color),e=0,o=d.length;e<o;e++)E=d[e],f.vertexColors.push(E.clone());f.materialIndex=a.materialIndex+r,s.push(f)}for(c=0,u=t.length;c<u;c++)if(i=[],void 0!==(r=t[c])){for(e=0,o=r.length;e<o;e++)i.push(new THREE.Vector2(r[e].x,r[e].y));l.push(i)}}},mergeVertices:function(){var t,e,r,i={},n=[],o=[],a=Math.pow(10,4);for(e=0,r=this.vertices.length;e<r;e++)t=this.vertices[e],void 0===i[t=Math.round(t.x*a)+"_"+Math.round(t.y*a)+"_"+Math.round(t.z*a)]?(i[t]=e,n.push(this.vertices[e]),o[e]=n.length-1):o[e]=o[i[t]];for(i=[],e=0,r=this.faces.length;e<r;e++)for((a=this.faces[e]).a=o[a.a],a.b=o[a.b],a.c=o[a.c],a=[a.a,a.b,a.c],t=0;t<3;t++)if(a[t]==a[(t+1)%3]){i.push(e);break}for(e=i.length-1;0<=e;e--)for(a=i[e],this.faces.splice(a,1),o=0,r=this.faceVertexUvs.length;o<r;o++)this.faceVertexUvs[o].splice(a,1);return e=this.vertices.length-n.length,this.vertices=n,e},makeGroups:function(){var c=0;return function(t,e){var r,i,n,o,a,s={},h=this.morphTargets.length,l=this.morphNormals.length;for(this.geometryGroups={},this.geometryGroupsList=[],r=0,i=this.faces.length;r<i;r++)n=this.faces[r],(n=t?n.materialIndex:0)in s||(s[n]={hash:n,counter:0}),(o=s[n].hash+"_"+s[n].counter)in this.geometryGroups||(a={id:c++,faces3:[],materialIndex:n,vertices:0,numMorphTargets:h,numMorphNormals:l},this.geometryGroups[o]=a,this.geometryGroupsList.push(a)),this.geometryGroups[o].vertices+3>e&&(s[n].counter+=1,(o=s[n].hash+"_"+s[n].counter)in this.geometryGroups||(a={id:c++,faces3:[],materialIndex:n,vertices:0,numMorphTargets:h,numMorphNormals:l},this.geometryGroups[o]=a,this.geometryGroupsList.push(a))),this.geometryGroups[o].faces3.push(r),this.geometryGroups[o].vertices+=3}}(),clone:function(){for(var t=new THREE.Geometry,e=this.vertices,r=0,i=e.length;r<i;r++)t.vertices.push(e[r].clone());for(r=0,i=(e=this.faces).length;r<i;r++)t.faces.push(e[r].clone());for(r=0,i=(e=this.faceVertexUvs[0]).length;r<i;r++){for(var n=e[r],o=[],a=0,s=n.length;a<s;a++)o.push(new THREE.Vector2(n[a].x,n[a].y));t.faceVertexUvs[0].push(o)}return t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),THREE.Camera.prototype.clone=function(t){return void 0===t&&(t=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,t),t.matrixWorldInverse.copy(this.matrixWorldInverse),t.projectionMatrix.copy(this.projectionMatrix),t},THREE.CubeCamera=function(t,e,r){THREE.Object3D.call(this);var n=new THREE.PerspectiveCamera(90,1,t,e);n.up.set(0,-1,0),n.lookAt(new THREE.Vector3(1,0,0)),this.add(n);var o=new THREE.PerspectiveCamera(90,1,t,e);o.up.set(0,-1,0),o.lookAt(new THREE.Vector3(-1,0,0)),this.add(o);var a=new THREE.PerspectiveCamera(90,1,t,e);a.up.set(0,0,1),a.lookAt(new THREE.Vector3(0,1,0)),this.add(a);var s=new THREE.PerspectiveCamera(90,1,t,e);s.up.set(0,0,-1),s.lookAt(new THREE.Vector3(0,-1,0)),this.add(s);var h=new THREE.PerspectiveCamera(90,1,t,e);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,1)),this.add(h);var l=new THREE.PerspectiveCamera(90,1,t,e);l.up.set(0,-1,0),l.lookAt(new THREE.Vector3(0,0,-1)),this.add(l),this.renderTarget=new THREE.WebGLRenderTargetCube(r,r,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(t,e){var r=this.renderTarget,i=r.generateMipmaps;r.generateMipmaps=!1,r.activeCubeFace=0,t.render(e,n,r),r.activeCubeFace=1,t.render(e,o,r),r.activeCubeFace=2,t.render(e,a,r),r.activeCubeFace=3,t.render(e,s,r),r.activeCubeFace=4,t.render(e,h,r),r.generateMipmaps=i,r.activeCubeFace=5,t.render(e,l,r)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.OrthographicCamera=function(t,e,r,i,n,o){THREE.Camera.call(this),this.left=t,this.right=e,this.top=r,this.bottom=i,this.near=void 0!==n?n:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var t=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,t),t.left=this.left,t.right=this.right,t.top=this.top,t.bottom=this.bottom,t.near=this.near,t.far=this.far,t},THREE.PerspectiveCamera=function(t,e,r,i){THREE.Camera.call(this),this.fov=void 0!==t?t:50,this.aspect=void 0!==e?e:1,this.near=void 0!==r?r:.1,this.far=void 0!==i?i:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(t,e){void 0===e&&(e=24),this.fov=2*THREE.Math.radToDeg(Math.atan(e/(2*t))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(t,e,r,i,n,o){this.fullWidth=t,this.fullHeight=e,this.x=r,this.y=i,this.width=n,this.height=o,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var t=this.fullWidth/this.fullHeight,e=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,r=t*(i=-e),i=(t=Math.abs(t*e-r),Math.abs(e-i));this.projectionMatrix.makeFrustum(r+this.x*t/this.fullWidth,r+(this.x+this.width)*t/this.fullWidth,e-(this.y+this.height)*i/this.fullHeight,e-this.y*i/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var t=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,t),t.fov=this.fov,t.aspect=this.aspect,t.near=this.near,t.far=this.far,t},THREE.Light=function(t){THREE.Object3D.call(this),this.color=new THREE.Color(t)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.clone=function(t){return void 0===t&&(t=new THREE.Light),THREE.Object3D.prototype.clone.call(this,t),t.color.copy(this.color),t},THREE.AmbientLight=function(t){THREE.Light.call(this,t)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.clone=function(){var t=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,t),t},THREE.AreaLight=function(t,e){THREE.Light.call(this,t),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==e?e:1,this.height=this.width=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(t,e){THREE.Light.call(this,t),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==e?e:1,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraTop=this.shadowCameraRight=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.clone=function(){var t=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,t),t.target=this.target.clone(),t.intensity=this.intensity,t.castShadow=this.castShadow,t.onlyShadow=this.onlyShadow,t.shadowCameraNear=this.shadowCameraNear,t.shadowCameraFar=this.shadowCameraFar,t.shadowCameraLeft=this.shadowCameraLeft,t.shadowCameraRight=this.shadowCameraRight,t.shadowCameraTop=this.shadowCameraTop,t.shadowCameraBottom=this.shadowCameraBottom,t.shadowCameraVisible=this.shadowCameraVisible,t.shadowBias=this.shadowBias,t.shadowDarkness=this.shadowDarkness,t.shadowMapWidth=this.shadowMapWidth,t.shadowMapHeight=this.shadowMapHeight,t.shadowCascade=this.shadowCascade,t.shadowCascadeOffset.copy(this.shadowCascadeOffset),t.shadowCascadeCount=this.shadowCascadeCount,t.shadowCascadeBias=this.shadowCascadeBias.slice(0),t.shadowCascadeWidth=this.shadowCascadeWidth.slice(0),t.shadowCascadeHeight=this.shadowCascadeHeight.slice(0),t.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0),t.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0),t},THREE.HemisphereLight=function(t,e,r){THREE.Light.call(this,t),this.position.set(0,100,0),this.groundColor=new THREE.Color(e),this.intensity=void 0!==r?r:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.clone=function(){var t=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,t),t.groundColor.copy(this.groundColor),t.intensity=this.intensity,t},THREE.PointLight=function(t,e,r){THREE.Light.call(this,t),this.intensity=void 0!==e?e:1,this.distance=void 0!==r?r:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.clone=function(){var t=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,t),t.intensity=this.intensity,t.distance=this.distance,t},THREE.SpotLight=function(t,e,r,i,n){THREE.Light.call(this,t),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==e?e:1,this.distance=void 0!==r?r:0,this.angle=void 0!==i?i:Math.PI/3,this.exponent=void 0!==n?n:10,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.clone=function(){var t=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,t),t.target=this.target.clone(),t.intensity=this.intensity,t.distance=this.distance,t.angle=this.angle,t.exponent=this.exponent,t.castShadow=this.castShadow,t.onlyShadow=this.onlyShadow,t.shadowCameraNear=this.shadowCameraNear,t.shadowCameraFar=this.shadowCameraFar,t.shadowCameraFov=this.shadowCameraFov,t.shadowCameraVisible=this.shadowCameraVisible,t.shadowBias=this.shadowBias,t.shadowDarkness=this.shadowDarkness,t.shadowMapWidth=this.shadowMapWidth,t.shadowMapHeight=this.shadowMapHeight,t},THREE.Cache=function(){this.files={}},THREE.Cache.prototype={constructor:THREE.Cache,add:function(t,e){this.files[t]=e},get:function(t){return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}},THREE.Loader=function(t){this.statusDomElement=(this.showStatus=t)?THREE.Loader.prototype.addStatusElement():null,this.imageLoader=new THREE.ImageLoader,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var t=document.createElement("div");return t.style.position="absolute",t.style.right="0px",t.style.top="0px",t.style.fontSize="0.8em",t.style.textAlign="left",t.style.background="rgba(0,0,0,0.25)",t.style.color="#fff",t.style.width="120px",t.style.padding="0.5em 0.5em 0.5em 0.5em",t.style.zIndex=1e3,t.innerHTML="Loading ...",t},updateProgress:function(t){var e="Loaded ";e=t.total?e+((100*t.loaded/t.total).toFixed(0)+"%"):e+((t.loaded/1024).toFixed(2)+" KB");this.statusDomElement.innerHTML=e},extractUrlBase:function(t){return 1===(t=t.split("/")).length?"./":(t.pop(),t.join("/")+"/")},initMaterials:function(t,e){for(var r=[],i=0;i<t.length;++i)r[i]=this.createMaterial(t[i],e);return r},needsTangents:function(t){for(var e=0,r=t.length;e<r;e++)if(t[e]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(t,c){function u(t){return t=Math.log(t)/Math.LN2,Math.pow(2,Math.round(t))}function e(t,e,r,i,n,o,a){var s,h=c+r,l=THREE.Loader.Handlers.get(h);null!==l?s=l.load(h):(s=new THREE.Texture,(l=f.imageLoader).crossOrigin=f.crossOrigin,l.load(h,function(t){if(!1===THREE.Math.isPowerOfTwo(t.width)||!1===THREE.Math.isPowerOfTwo(t.height)){var e=u(t.width),r=u(t.height),i=document.createElement("canvas");i.width=e,i.height=r,i.getContext("2d").drawImage(t,0,0,e,r),s.image=i}else s.image=t;s.needsUpdate=!0})),s.sourceFile=r,i&&(s.repeat.set(i[0],i[1]),1!==i[0]&&(s.wrapS=THREE.RepeatWrapping),1!==i[1]&&(s.wrapT=THREE.RepeatWrapping)),n&&s.offset.set(n[0],n[1]),o&&(void 0!==(r={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping})[o[0]]&&(s.wrapS=r[o[0]]),void 0!==r[o[1]]&&(s.wrapT=r[o[1]])),a&&(s.anisotropy=a),t[e]=s}function r(t){return(255*t[0]<<16)+(255*t[1]<<8)+255*t[2]}var f=this,i="MeshLambertMaterial",n={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(t.shading){var o=t.shading.toLowerCase();"phong"===o?i="MeshPhongMaterial":"basic"===o&&(i="MeshBasicMaterial")}return void 0!==t.blending&&void 0!==THREE[t.blending]&&(n.blending=THREE[t.blending]),(void 0!==t.transparent||t.opacity<1)&&(n.transparent=t.transparent),void 0!==t.depthTest&&(n.depthTest=t.depthTest),void 0!==t.depthWrite&&(n.depthWrite=t.depthWrite),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.flipSided&&(n.side=THREE.BackSide),void 0!==t.doubleSided&&(n.side=THREE.DoubleSide),void 0!==t.wireframe&&(n.wireframe=t.wireframe),void 0!==t.vertexColors&&("face"===t.vertexColors?n.vertexColors=THREE.FaceColors:t.vertexColors&&(n.vertexColors=THREE.VertexColors)),t.colorDiffuse?n.color=r(t.colorDiffuse):t.DbgColor&&(n.color=t.DbgColor),t.colorSpecular&&(n.specular=r(t.colorSpecular)),t.colorAmbient&&(n.ambient=r(t.colorAmbient)),t.colorEmissive&&(n.emissive=r(t.colorEmissive)),t.transparency&&(n.opacity=t.transparency),t.specularCoef&&(n.shininess=t.specularCoef),t.mapDiffuse&&c&&e(n,"map",t.mapDiffuse,t.mapDiffuseRepeat,t.mapDiffuseOffset,t.mapDiffuseWrap,t.mapDiffuseAnisotropy),t.mapLight&&c&&e(n,"lightMap",t.mapLight,t.mapLightRepeat,t.mapLightOffset,t.mapLightWrap,t.mapLightAnisotropy),t.mapBump&&c&&e(n,"bumpMap",t.mapBump,t.mapBumpRepeat,t.mapBumpOffset,t.mapBumpWrap,t.mapBumpAnisotropy),t.mapNormal&&c&&e(n,"normalMap",t.mapNormal,t.mapNormalRepeat,t.mapNormalOffset,t.mapNormalWrap,t.mapNormalAnisotropy),t.mapSpecular&&c&&e(n,"specularMap",t.mapSpecular,t.mapSpecularRepeat,t.mapSpecularOffset,t.mapSpecularWrap,t.mapSpecularAnisotropy),t.mapAlpha&&c&&e(n,"alphaMap",t.mapAlpha,t.mapAlphaRepeat,t.mapAlphaOffset,t.mapAlphaWrap,t.mapAlphaAnisotropy),t.mapBumpScale&&(n.bumpScale=t.mapBumpScale),t.mapNormal?(i=THREE.ShaderLib.normalmap,(o=THREE.UniformsUtils.clone(i.uniforms)).tNormal.value=n.normalMap,t.mapNormalFactor&&o.uNormalScale.value.set(t.mapNormalFactor,t.mapNormalFactor),n.map&&(o.tDiffuse.value=n.map,o.enableDiffuse.value=!0),n.specularMap&&(o.tSpecular.value=n.specularMap,o.enableSpecular.value=!0),n.lightMap&&(o.tAO.value=n.lightMap,o.enableAO.value=!0),o.diffuse.value.setHex(n.color),o.specular.value.setHex(n.specular),o.ambient.value.setHex(n.ambient),o.shininess.value=n.shininess,void 0!==n.opacity&&(o.opacity.value=n.opacity),i=new THREE.ShaderMaterial({fragmentShader:i.fragmentShader,vertexShader:i.vertexShader,uniforms:o,lights:!0,fog:!0}),n.transparent&&(i.transparent=!0)):i=new THREE[i](n),void 0!==t.DbgName&&(i.name=t.DbgName),i}},THREE.Loader.Handlers={handlers:[],add:function(t,e){this.handlers.push(t,e)},get:function(t){for(var e=0,r=this.handlers.length;e<r;e+=2){var i=this.handlers[e+1];if(this.handlers[e].test(t))return i}return null}},THREE.XHRLoader=function(t){this.cache=new THREE.Cache,this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(t,e,r,i){var n=this,o=n.cache.get(t);void 0!==o?e&&e(o):((o=new XMLHttpRequest).open("GET",t,!0),o.addEventListener("load",function(){n.cache.add(t,this.response),e&&e(this.response),n.manager.itemEnd(t)},!1),void 0!==r&&o.addEventListener("progress",function(t){r(t)},!1),void 0!==i&&o.addEventListener("error",function(t){i(t)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),void 0!==this.responseType&&(o.responseType=this.responseType),o.send(null),n.manager.itemStart(t))},setResponseType:function(t){this.responseType=t},setCrossOrigin:function(t){this.crossOrigin=t}},THREE.ImageLoader=function(t){this.cache=new THREE.Cache,this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(t,e,r,i){var n=this,o=n.cache.get(t);if(void 0===o)return o=document.createElement("img"),void 0!==e&&o.addEventListener("load",function(){n.cache.add(t,this),e(this),n.manager.itemEnd(t)},!1),void 0!==r&&o.addEventListener("progress",function(t){r(t)},!1),void 0!==i&&o.addEventListener("error",function(t){i(t)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),o.src=t,n.manager.itemStart(t),o;e(o)},setCrossOrigin:function(t){this.crossOrigin=t}},THREE.JSONLoader=function(t){THREE.Loader.call(this,t),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(t,e,r){r=r&&"string"==typeof r?r:this.extractUrlBase(t),this.onLoadStart(),this.loadAjaxJSON(this,t,e,r)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,r,i,n,o){var a=new XMLHttpRequest,s=0;a.onreadystatechange=function(){if(a.readyState===a.DONE)if(200===a.status||0===a.status){if(a.responseText){var t=JSON.parse(a.responseText);if(void 0!==t.metadata&&"scene"===t.metadata.type)return void console.error('THREE.JSONLoader: "'+r+'" seems to be a Scene. Use THREE.SceneLoader instead.');t=e.parse(t,n),i(t.geometry,t.materials)}else console.error('THREE.JSONLoader: "'+r+'" seems to be unreachable or the file is empty.');e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load \""+r+'" ('+a.status+")");else a.readyState===a.LOADING?o&&(0===s&&(s=a.getResponseHeader("Content-Length")),o({total:s,loaded:a.responseText.length})):a.readyState===a.HEADERS_RECEIVED&&void 0!==o&&(s=a.getResponseHeader("Content-Length"))},a.open("GET",r,!0),a.withCredentials=this.withCredentials,a.send(null)},THREE.JSONLoader.prototype.parse=function(T,t){var v=new THREE.Geometry,e=void 0!==T.scale?1/T.scale:1;return function(t){var e,r,i,n,o,a,s,h,l,c,u,f,E,p=T.faces;a=T.vertices;var d=T.normals,m=T.colors,g=0;if(void 0!==T.uvs){for(e=0;e<T.uvs.length;e++)T.uvs[e].length&&g++;for(e=0;e<g;e++)v.faceVertexUvs[e]=[]}for(n=0,o=a.length;n<o;)(e=new THREE.Vector3).x=a[n++]*t,e.y=a[n++]*t,e.z=a[n++]*t,v.vertices.push(e);for(n=0,o=p.length;n<o;)if(l=1&(t=p[n++]),i=2&t,e=8&t,s=16&t,c=32&t,a=64&t,t&=128,l){if((l=new THREE.Face3).a=p[n],l.b=p[n+1],l.c=p[n+3],(u=new THREE.Face3).a=p[n+1],u.b=p[n+2],u.c=p[n+3],n+=4,i&&(i=p[n++],l.materialIndex=i,u.materialIndex=i),i=v.faces.length,e)for(e=0;e<g;e++)for(f=T.uvs[e],v.faceVertexUvs[e][i]=[],v.faceVertexUvs[e][i+1]=[],r=0;r<4;r++)E=f[2*(h=p[n++])],h=f[2*h+1],E=new THREE.Vector2(E,h),2!==r&&v.faceVertexUvs[e][i].push(E),0!==r&&v.faceVertexUvs[e][i+1].push(E);if(s&&(s=3*p[n++],l.normal.set(d[s++],d[s++],d[s]),u.normal.copy(l.normal)),c)for(e=0;e<4;e++)s=3*p[n++],c=new THREE.Vector3(d[s++],d[s++],d[s]),2!==e&&l.vertexNormals.push(c),0!==e&&u.vertexNormals.push(c);if(a&&(a=m[a=p[n++]],l.color.setHex(a),u.color.setHex(a)),t)for(e=0;e<4;e++)a=m[a=p[n++]],2!==e&&l.vertexColors.push(new THREE.Color(a)),0!==e&&u.vertexColors.push(new THREE.Color(a));v.faces.push(l),v.faces.push(u)}else{if((l=new THREE.Face3).a=p[n++],l.b=p[n++],l.c=p[n++],i&&(i=p[n++],l.materialIndex=i),i=v.faces.length,e)for(e=0;e<g;e++)for(f=T.uvs[e],v.faceVertexUvs[e][i]=[],r=0;r<3;r++)E=f[2*(h=p[n++])],h=f[2*h+1],E=new THREE.Vector2(E,h),v.faceVertexUvs[e][i].push(E);if(s&&(s=3*p[n++],l.normal.set(d[s++],d[s++],d[s])),c)for(e=0;e<3;e++)s=3*p[n++],c=new THREE.Vector3(d[s++],d[s++],d[s]),l.vertexNormals.push(c);if(a&&(a=p[n++],l.color.setHex(m[a])),t)for(e=0;e<3;e++)a=p[n++],l.vertexColors.push(new THREE.Color(m[a]));v.faces.push(l)}}(e),function(){var t=void 0!==T.influencesPerVertex?T.influencesPerVertex:2;if(T.skinWeights)for(var e=0,r=T.skinWeights.length;e<r;e+=t)v.skinWeights.push(new THREE.Vector4(T.skinWeights[e],1<t?T.skinWeights[e+1]:0,2<t?T.skinWeights[e+2]:0,3<t?T.skinWeights[e+3]:0));if(T.skinIndices)for(e=0,r=T.skinIndices.length;e<r;e+=t)v.skinIndices.push(new THREE.Vector4(T.skinIndices[e],1<t?T.skinIndices[e+1]:0,2<t?T.skinIndices[e+2]:0,3<t?T.skinIndices[e+3]:0));v.bones=T.bones,v.bones&&0<v.bones.length&&(v.skinWeights.length!==v.skinIndices.length||v.skinIndices.length!==v.vertices.length)&&console.warn("When skinning, number of vertices ("+v.vertices.length+"), skinIndices ("+v.skinIndices.length+"), and skinWeights ("+v.skinWeights.length+") should match."),v.animation=T.animation,v.animations=T.animations}(),function(t){var e,r,i,n,o,a;if(void 0!==T.morphTargets)for(e=0,r=T.morphTargets.length;e<r;e++)for(v.morphTargets[e]={},v.morphTargets[e].name=T.morphTargets[e].name,v.morphTargets[e].vertices=[],o=v.morphTargets[e].vertices,i=0,n=(a=T.morphTargets[e].vertices).length;i<n;i+=3){var s=new THREE.Vector3;s.x=a[i]*t,s.y=a[i+1]*t,s.z=a[i+2]*t,o.push(s)}if(void 0!==T.morphColors)for(e=0,r=T.morphColors.length;e<r;e++)for(v.morphColors[e]={},v.morphColors[e].name=T.morphColors[e].name,v.morphColors[e].colors=[],n=v.morphColors[e].colors,t=0,i=(o=T.morphColors[e].colors).length;t<i;t+=3)(a=new THREE.Color(16755200)).setRGB(o[t],o[t+1],o[t+2]),n.push(a)}(e),v.computeFaceNormals(),v.computeBoundingSphere(),void 0===T.materials||0===T.materials.length?{geometry:v}:(e=this.initMaterials(T.materials,t),this.needsTangents(e)&&v.computeTangents(),{geometry:v,materials:e})},THREE.LoadingManager=function(t,e,r){var i=this,n=0,o=0;this.onLoad=t,this.onProgress=e,this.onError=r,this.itemStart=function(){o++},this.itemEnd=function(t){n++,void 0!==i.onProgress&&i.onProgress(t,n,o),n===o&&void 0!==i.onLoad&&i.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(t,e,r,i){var n=this,o=new THREE.XHRLoader;o.setCrossOrigin(this.crossOrigin),o.load(t,function(t){e(n.parse(JSON.parse(t)))},r,i)},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t){var e,r=new THREE.BufferGeometry,i=t.attributes;for(e in i){var n=i[e];r.attributes[e]={itemSize:n.itemSize,array:new self[n.type](n.array)}}return void 0!==(i=t.offsets)&&(r.offsets=JSON.parse(JSON.stringify(i))),void 0!==(t=t.boundingSphere)&&(r.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==t.center?t.center:[0,0,0]),t.radius)),r}},THREE.MaterialLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(t,e,r,i){var n=this,o=new THREE.XHRLoader;o.setCrossOrigin(this.crossOrigin),o.load(t,function(t){e(n.parse(JSON.parse(t)))},r,i)},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t){var e=new THREE[t.type];if(void 0!==t.color&&e.color.setHex(t.color),void 0!==t.ambient&&e.ambient.setHex(t.ambient),void 0!==t.emissive&&e.emissive.setHex(t.emissive),void 0!==t.specular&&e.specular.setHex(t.specular),void 0!==t.shininess&&(e.shininess=t.shininess),void 0!==t.uniforms&&(e.uniforms=t.uniforms),void 0!==t.vertexShader&&(e.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(e.fragmentShader=t.fragmentShader),void 0!==t.vertexColors&&(e.vertexColors=t.vertexColors),void 0!==t.blending&&(e.blending=t.blending),void 0!==t.side&&(e.side=t.side),void 0!==t.opacity&&(e.opacity=t.opacity),void 0!==t.transparent&&(e.transparent=t.transparent),void 0!==t.wireframe&&(e.wireframe=t.wireframe),void 0!==t.materials)for(var r=0,i=t.materials.length;r<i;r++)e.materials.push(this.parse(t.materials[r]));return e}},THREE.ObjectLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(t,e,r,i){var n=this,o=new THREE.XHRLoader(n.manager);o.setCrossOrigin(this.crossOrigin),o.load(t,function(t){e(n.parse(JSON.parse(t)))},r,i)},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t){var e=this.parseGeometries(t.geometries),r=this.parseMaterials(t.materials);return this.parseObject(t.object,e,r)},parseGeometries:function(t){var e={};if(void 0!==t)for(var r=new THREE.JSONLoader,i=new THREE.BufferGeometryLoader,n=0,o=t.length;n<o;n++){var a,s=t[n];switch(s.type){case"PlaneGeometry":a=new THREE.PlaneGeometry(s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"CubeGeometry":a=new THREE.BoxGeometry(s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":a=new THREE.CircleGeometry(s.radius,s.segments);break;case"CylinderGeometry":a=new THREE.CylinderGeometry(s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded);break;case"SphereGeometry":a=new THREE.SphereGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"IcosahedronGeometry":a=new THREE.IcosahedronGeometry(s.radius,s.detail);break;case"TorusGeometry":a=new THREE.TorusGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":a=new THREE.TorusKnotGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.p,s.q,s.heightScale);break;case"BufferGeometry":a=i.parse(s.data);break;case"Geometry":a=r.parse(s.data).geometry}a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),e[s.uuid]=a}return e},parseMaterials:function(t){var e={};if(void 0!==t)for(var r=new THREE.MaterialLoader,i=0,n=t.length;i<n;i++){var o=t[i],a=r.parse(o);a.uuid=o.uuid,void 0!==o.name&&(a.name=o.name),e[o.uuid]=a}return e},parseObject:function(){var a=new THREE.Matrix4;return function(t,e,r){var i;switch(t.type){case"Scene":i=new THREE.Scene;break;case"PerspectiveCamera":i=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":i=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":i=new THREE.AmbientLight(t.color);break;case"DirectionalLight":i=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":i=new THREE.PointLight(t.color,t.intensity,t.distance);break;case"SpotLight":i=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent);break;case"HemisphereLight":i=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":i=e[t.geometry];var n=r[t.material];void 0===i&&console.error("THREE.ObjectLoader: Undefined geometry "+t.geometry),void 0===n&&console.error("THREE.ObjectLoader: Undefined material "+t.material),i=new THREE.Mesh(i,n);break;case"Sprite":void 0===(n=r[t.material])&&console.error("THREE.ObjectLoader: Undefined material "+t.material),i=new THREE.Sprite(n);break;default:i=new THREE.Object3D}if(i.uuid=t.uuid,void 0!==t.name&&(i.name=t.name),void 0!==t.matrix?(a.fromArray(t.matrix),a.decompose(i.position,i.quaternion,i.scale)):(void 0!==t.position&&i.position.fromArray(t.position),void 0!==t.rotation&&i.rotation.fromArray(t.rotation),void 0!==t.scale&&i.scale.fromArray(t.scale)),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.children)for(var o in t.children)i.add(this.parseObject(t.children[o],e,r));return i}}()},
THREE.TextureLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(t,e,r,i){var n=new THREE.ImageLoader(this.manager);n.setCrossOrigin(this.crossOrigin),n.load(t,function(t){(t=new THREE.Texture(t)).needsUpdate=!0,void 0!==e&&e(t)},r,i)},setCrossOrigin:function(t){this.crossOrigin=t}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthWrite=this.depthTest=!0,this.polygonOffset=!1,this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0,this.needsUpdate=this.visible=!0},THREE.Material.prototype={constructor:THREE.Material,setValues:function(t){if(void 0!==t)for(var e in t){var r=t[e];if(void 0===r)console.warn("THREE.Material: '"+e+"' parameter is undefined.");else if(e in this){var i=this[e];i instanceof THREE.Color?i.set(r):i instanceof THREE.Vector3&&r instanceof THREE.Vector3?i.copy(r):this[e]="overdraw"==e?Number(r):r}}},clone:function(t){return void 0===t&&(t=new THREE.Material),t.name=this.name,t.side=this.side,t.opacity=this.opacity,t.transparent=this.transparent,t.blending=this.blending,t.blendSrc=this.blendSrc,t.blendDst=this.blendDst,t.blendEquation=this.blendEquation,t.depthTest=this.depthTest,t.depthWrite=this.depthWrite,t.polygonOffset=this.polygonOffset,t.polygonOffsetFactor=this.polygonOffsetFactor,t.polygonOffsetUnits=this.polygonOffsetUnits,t.alphaTest=this.alphaTest,t.overdraw=this.overdraw,t.visible=this.visible,t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linejoin=this.linecap="round",this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(t)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var t=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.linewidth=this.linewidth,t.linecap=this.linecap,t.linejoin=this.linejoin,t.vertexColors=this.vertexColors,t.fog=this.fog,t},THREE.LineDashedMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.scale=this.linewidth=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(t)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var t=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.linewidth=this.linewidth,t.scale=this.scale,t.dashSize=this.dashSize,t.gapSize=this.gapSize,t.vertexColors=this.vertexColors,t.fog=this.fog,t},THREE.MeshBasicMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphTargets=this.skinning=!1,this.setValues(t)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var t=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.map=this.map,t.lightMap=this.lightMap,t.specularMap=this.specularMap,t.alphaMap=this.alphaMap,t.envMap=this.envMap,t.combine=this.combine,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,t.fog=this.fog,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.wireframeLinecap=this.wireframeLinecap,t.wireframeLinejoin=this.wireframeLinejoin,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t},THREE.MeshLambertMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(t)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var t=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.ambient.copy(this.ambient),t.emissive.copy(this.emissive),t.wrapAround=this.wrapAround,t.wrapRGB.copy(this.wrapRGB),t.map=this.map,t.lightMap=this.lightMap,t.specularMap=this.specularMap,t.alphaMap=this.alphaMap,t.envMap=this.envMap,t.combine=this.combine,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,t.fog=this.fog,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.wireframeLinecap=this.wireframeLinecap,t.wireframeLinejoin=this.wireframeLinejoin,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t.morphNormals=this.morphNormals,t},THREE.MeshPhongMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.wrapAround=this.metal=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.bumpMap=this.lightMap=this.map=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.envMap=this.alphaMap=this.specularMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(t)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var t=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.ambient.copy(this.ambient),t.emissive.copy(this.emissive),t.specular.copy(this.specular),t.shininess=this.shininess,t.metal=this.metal,t.wrapAround=this.wrapAround,t.wrapRGB.copy(this.wrapRGB),t.map=this.map,t.lightMap=this.lightMap,t.bumpMap=this.bumpMap,t.bumpScale=this.bumpScale,t.normalMap=this.normalMap,t.normalScale.copy(this.normalScale),t.specularMap=this.specularMap,t.alphaMap=this.alphaMap,t.envMap=this.envMap,t.combine=this.combine,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,t.fog=this.fog,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.wireframeLinecap=this.wireframeLinecap,t.wireframeLinejoin=this.wireframeLinejoin,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t.morphNormals=this.morphNormals,t},THREE.MeshDepthMaterial=function(t){THREE.Material.call(this),this.wireframe=this.morphTargets=!1,this.wireframeLinewidth=1,this.setValues(t)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var t=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,t),t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t},THREE.MeshNormalMaterial=function(t){THREE.Material.call(this,t),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(t)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var t=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,t),t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t},THREE.MeshFaceMaterial=function(t){this.materials=t instanceof Array?t:[]},THREE.MeshFaceMaterial.prototype.clone=function(){for(var t=new THREE.MeshFaceMaterial,e=0;e<this.materials.length;e++)t.materials.push(this.materials[e].clone());return t},THREE.PointCloudMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(t)},THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype),THREE.PointCloudMaterial.prototype.clone=function(){var t=new THREE.PointCloudMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.map=this.map,t.size=this.size,t.sizeAttenuation=this.sizeAttenuation,t.vertexColors=this.vertexColors,t.fog=this.fog,t},THREE.ParticleBasicMaterial=function(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial."),new THREE.PointCloudMaterial(t)},THREE.ParticleSystemMaterial=function(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial."),new THREE.PointCloudMaterial(t)},THREE.ShaderMaterial=function(t){THREE.Material.call(this),this.defines={},this.uniforms={},this.attributes=null,this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.lights=this.fog=!1,this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.setValues(t)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var t=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,t),t.fragmentShader=this.fragmentShader,t.vertexShader=this.vertexShader,t.uniforms=THREE.UniformsUtils.clone(this.uniforms),t.attributes=this.attributes,t.defines=this.defines,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.fog=this.fog,t.lights=this.lights,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t.morphNormals=this.morphNormals,t},THREE.RawShaderMaterial=function(t){THREE.ShaderMaterial.call(this,t)},THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype),THREE.RawShaderMaterial.prototype.clone=function(){var t=new THREE.RawShaderMaterial;return THREE.ShaderMaterial.prototype.clone.call(this,t),t},THREE.SpriteMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(t)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var t=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.map=this.map,t.rotation=this.rotation,t.fog=this.fog,t},THREE.SpriteCanvasMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(){},this.setValues(t)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.clone=function(){var t=new THREE.SpriteCanvasMaterial;return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.program=this.program,t},THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial,THREE.Texture=function(t,e,r,i,n,o,a,s,h){this.id=THREE.TextureIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.image=void 0!==t?t:THREE.Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:THREE.Texture.DEFAULT_MAPPING,this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i?i:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this._needsUpdate=!1,this.onUpdate=null},THREE.Texture.DEFAULT_IMAGE=void 0,THREE.Texture.DEFAULT_MAPPING=new THREE.UVMapping,THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(t){!0===t&&this.update(),this._needsUpdate=t},clone:function(t){return void 0===t&&(t=new THREE.Texture),t.image=this.image,t.mipmaps=this.mipmaps.slice(0),t.mapping=this.mapping,t.wrapS=this.wrapS,t.wrapT=this.wrapT,t.magFilter=this.magFilter,t.minFilter=this.minFilter,t.anisotropy=this.anisotropy,t.format=this.format,t.type=this.type,t.offset.copy(this.offset),t.repeat.copy(this.repeat),t.generateMipmaps=this.generateMipmaps,t.premultiplyAlpha=this.premultiplyAlpha,t.flipY=this.flipY,t.unpackAlignment=this.unpackAlignment,t},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CubeTexture=function(t,e,r,i,n,o,a,s,h){THREE.Texture.call(this,t,e,r,i,n,o,a,s,h),this.images=t},THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CubeTexture.clone=function(t){return void 0===t&&(t=new THREE.CubeTexture),THREE.Texture.prototype.clone.call(this,t),t.images=this.images,t},THREE.CompressedTexture=function(t,e,r,i,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,i,n,c),this.image={width:e,height:r},this.mipmaps=t,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var t=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,t),t},THREE.DataTexture=function(t,e,r,i,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,i,n,c),this.image={data:t,width:e,height:r}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var t=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,t),t},THREE.PointCloud=function(t,e){THREE.Object3D.call(this),this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.PointCloudMaterial({color:16777215*Math.random()}),this.sortParticles=!1},THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype),THREE.PointCloud.prototype.raycast=function(){var d=new THREE.Matrix4,m=new THREE.Ray;return function(o,a){var s=this,t=s.geometry,e=o.params.PointCloud.threshold;if(d.getInverse(this.matrixWorld),m.copy(o.ray).applyMatrix4(d),null===t.boundingBox||!1!==m.isIntersectionBox(t.boundingBox)){var h=e/((this.scale.x+this.scale.y+this.scale.z)/3),r=new THREE.Vector3;e=function(t,e){var r=m.distanceToPoint(t);if(r<h){var i=m.closestPointToPoint(t);i.applyMatrix4(s.matrixWorld);var n=o.ray.origin.distanceTo(i);a.push({distance:n,distanceToRay:r,point:i.clone(),index:e,face:null,object:s})}};if(t instanceof THREE.BufferGeometry){var i=(n=t.attributes).position.array;if(void 0!==n.index){var n=n.index.array,l=t.offsets;0===l.length&&(l=[{start:0,count:n.length,index:0}]);for(var c=0,u=l.length;c<u;++c){var f=l[c].start,E=l[c].index;for(t=f,f=f+l[c].count;t<f;t++){var p=E+n[t];r.set(i[3*p],i[3*p+1],i[3*p+2]),e(r,p)}}}else for(n=i.length/3,t=0;t<n;t++)r.set(i[3*t],i[3*t+1],i[3*t+2]),e(r,t)}else for(r=this.geometry.vertices,t=0;t<r.length;t++)e(r[t],t)}}}(),THREE.PointCloud.prototype.clone=function(t){return void 0===t&&(t=new THREE.PointCloud(this.geometry,this.material)),t.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,t),t},THREE.ParticleSystem=function(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud."),new THREE.PointCloud(t,e)},THREE.Line=function(t,e,r){THREE.Object3D.call(this),this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==r?r:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.raycast=function(){var c=new THREE.Matrix4,u=new THREE.Ray,f=new THREE.Sphere;return function(t,e){var r=(r=t.linePrecision)*r;if(null===(i=this.geometry).boundingSphere&&i.computeBoundingSphere(),f.copy(i.boundingSphere),f.applyMatrix4(this.matrixWorld),!1!==t.ray.isIntersectionSphere(f)&&(c.getInverse(this.matrixWorld),u.copy(t.ray).applyMatrix4(c),i instanceof THREE.Geometry))for(var i,n=(i=i.vertices).length,o=new THREE.Vector3,a=new THREE.Vector3,s=this.type===THREE.LineStrip?1:2,h=0;h<n-1;h+=s)if(!(u.distanceSqToSegment(i[h],i[h+1],a,o)>r)){var l=u.origin.distanceTo(a);l<t.near||l>t.far||e.push({distance:l,point:o.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this})}}}(),THREE.Line.prototype.clone=function(t){return void 0===t&&(t=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,t),t},THREE.Mesh=function(t,e){THREE.Object3D.call(this),this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var t=0,e=this.geometry.morphTargets.length;t<e;t++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[t].name]=t}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(t){return void 0!==this.morphTargetDictionary[t]?this.morphTargetDictionary[t]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+t+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.raycast=function(){var y=new THREE.Matrix4,R=new THREE.Ray,x=new THREE.Sphere,H=new THREE.Vector3,_=new THREE.Vector3,b=new THREE.Vector3;return function(t,e){if(null===(E=this.geometry).boundingSphere&&E.computeBoundingSphere(),x.copy(E.boundingSphere),x.applyMatrix4(this.matrixWorld),!1!==t.ray.isIntersectionSphere(x)&&(y.getInverse(this.matrixWorld),R.copy(t.ray).applyMatrix4(y),null===E.boundingBox||!1!==R.isIntersectionBox(E.boundingBox)))if(E instanceof THREE.BufferGeometry){var r=this.material;if(void 0!==r){var i,n,o=E.attributes,a=t.precision;if(void 0!==o.index){var s=o.index.array,h=o.position.array,l=E.offsets;0===l.length&&(l=[{start:0,count:s.length,index:0}]);for(var c=0,u=l.length;c<u;++c){o=l[c].start;for(var f=l[c].index,E=o,p=o+l[c].count;E<p;E+=3){o=f+s[E],i=f+s[E+1],n=f+s[E+2],H.set(h[3*o],h[3*o+1],h[3*o+2]),_.set(h[3*i],h[3*i+1],h[3*i+2]),b.set(h[3*n],h[3*n+1],h[3*n+2]);var d=r.side===THREE.BackSide?R.intersectTriangle(b,_,H,!0):R.intersectTriangle(H,_,b,r.side!==THREE.DoubleSide);if(null!==d){d.applyMatrix4(this.matrixWorld);var m=t.ray.origin.distanceTo(d);m<a||m<t.near||m>t.far||e.push({distance:m,point:d,indices:[o,i,n],face:null,faceIndex:null,object:this})}}}}else for(s=E=0,p=(h=o.position.array).length;E<p;E+=3,s+=9)i=(o=E)+1,n=E+2,H.set(h[s],h[s+1],h[s+2]),_.set(h[s+3],h[s+4],h[s+5]),b.set(h[s+6],h[s+7],h[s+8]),null!==(d=r.side===THREE.BackSide?R.intersectTriangle(b,_,H,!0):R.intersectTriangle(H,_,b,r.side!==THREE.DoubleSide))&&(d.applyMatrix4(this.matrixWorld),(m=t.ray.origin.distanceTo(d))<a||m<t.near||m>t.far||e.push({distance:m,point:d,indices:[o,i,n],face:null,faceIndex:null,object:this}))}}else if(E instanceof THREE.Geometry)for(h=!0===(s=this.material instanceof THREE.MeshFaceMaterial)?this.material.materials:null,a=t.precision,l=E.vertices,c=0,u=E.faces.length;c<u;c++)if(f=E.faces[c],void 0!==(r=!0===s?h[f.materialIndex]:this.material)){if(o=l[f.a],i=l[f.b],n=l[f.c],!0===r.morphTargets){d=E.morphTargets,m=this.morphTargetInfluences,H.set(0,0,0),_.set(0,0,0),b.set(0,0,0);p=0;for(var g=d.length;p<g;p++){var T=m[p];if(0!==T){var v=d[p].vertices;H.x+=(v[f.a].x-o.x)*T,H.y+=(v[f.a].y-o.y)*T,H.z+=(v[f.a].z-o.z)*T,_.x+=(v[f.b].x-i.x)*T,_.y+=(v[f.b].y-i.y)*T,_.z+=(v[f.b].z-i.z)*T,b.x+=(v[f.c].x-n.x)*T,b.y+=(v[f.c].y-n.y)*T,b.z+=(v[f.c].z-n.z)*T}}H.add(o),_.add(i),b.add(n),o=H,i=_,n=b}null!==(d=r.side===THREE.BackSide?R.intersectTriangle(n,i,o,!0):R.intersectTriangle(o,i,n,r.side!==THREE.DoubleSide))&&(d.applyMatrix4(this.matrixWorld),(m=t.ray.origin.distanceTo(d))<a||m<t.near||m>t.far||e.push({distance:m,point:d,face:f,faceIndex:c,object:this}))}}}(),THREE.Mesh.prototype.clone=function(t,e){return void 0===t&&(t=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,t,e),t},THREE.Bone=function(t){THREE.Object3D.call(this),this.skin=t,this.accumulatedSclWeight=this.accumulatedPosWeight=this.accumulatedRotWeight=0},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.updateMatrixWorld=function(t){THREE.Object3D.prototype.updateMatrixWorld.call(this,t),this.accumulatedSclWeight=this.accumulatedPosWeight=this.accumulatedRotWeight=0},THREE.Skeleton=function(t,e,r){if(this.useVertexTexture=void 0===r||r,this.identityMatrix=new THREE.Matrix4,t=t||[],this.bones=t.slice(0),this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=t=256<this.bones.length?64:64<this.bones.length?32:16<this.bones.length?16:8,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*this.bones.length),void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else for(console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[],e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new THREE.Matrix4)},THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var r=new THREE.Matrix4;this.bones[t]&&r.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(r)}},THREE.Skeleton.prototype.pose=function(){for(var t,e=0,r=this.bones.length;e<r;e++)(t=this.bones[e])&&t.matrixWorld.getInverse(this.boneInverses[e]);for(e=0,r=this.bones.length;e<r;e++)(t=this.bones[e])&&(t.parent?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},THREE.Skeleton.prototype.update=function(){for(var t=new THREE.Matrix4,e=0,r=this.bones.length;e<r;e++)t.multiplyMatrices(this.bones[e]?this.bones[e].matrixWorld:this.identityMatrix,this.boneInverses[e]),t.flattenToArrayOffset(this.boneMatrices,16*e);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)},THREE.SkinnedMesh=function(t,e,r){if(THREE.Mesh.call(this,t,e),this.bindMode="attached",this.bindMatrix=new THREE.Matrix4,this.bindMatrixInverse=new THREE.Matrix4,t=[],this.geometry&&void 0!==this.geometry.bones){for(var i,n,o,a,s=0,h=this.geometry.bones.length;s<h;++s)n=(i=this.geometry.bones[s]).pos,o=i.rotq,a=i.scl,e=new THREE.Bone(this),t.push(e),e.name=i.name,e.position.set(n[0],n[1],n[2]),e.quaternion.set(o[0],o[1],o[2],o[3]),void 0!==a?e.scale.set(a[0],a[1],a[2]):e.scale.set(1,1,1);for(s=0,h=this.geometry.bones.length;s<h;++s)-1!==(i=this.geometry.bones[s]).parent?t[i.parent].add(t[s]):this.add(t[s])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new THREE.Skeleton(t,void 0,r))},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.bind=function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var t=0;t<this.geometry.skinIndices.length;t++){var e=this.geometry.skinWeights[t],r=1/e.lengthManhattan();Infinity!==r?e.multiplyScalar(r):e.set(1)}},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unreckognized bindMode: "+this.bindMode)},THREE.SkinnedMesh.prototype.clone=function(t){return void 0===t&&(t=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,t),t},THREE.MorphAnimMesh=function(t,e){THREE.Mesh.call(this,t,e),this.duration=1e3,this.mirroredLoop=!1,this.currentKeyframe=this.lastKeyframe=this.time=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(t,e){this.startKeyframe=t,this.endKeyframe=e,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var t=this.geometry;t.animations||(t.animations={});for(var e,r=t.animations,i=/([a-z]+)_?(\d+)/,n=0,o=t.morphTargets.length;n<o;n++){var a=t.morphTargets[n].name.match(i);if(a&&1<a.length){r[a=a[1]]||(r[a]={start:Infinity,end:-Infinity});var s=r[a];n<s.start&&(s.start=n),n>s.end&&(s.end=n),e||(e=a)}}t.firstAnimation=e},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(t,e,r){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[t]={start:e,end:r}},THREE.MorphAnimMesh.prototype.playAnimation=function(t,e){var r=this.geometry.animations[t];r?(this.setFrameRange(r.start,r.end),this.duration=(r.end-r.start)/e*1e3,this.time=0):console.warn("animation["+t+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(t){var e=this.duration/this.length;this.time+=this.direction*t,this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time%=this.duration,this.time<0&&(this.time+=this.duration)),(t=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/e),0,this.length-1))!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[t]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=t),e=this.time%e/e,this.directionBackwards&&(e=1-e),this.morphTargetInfluences[this.currentKeyframe]=e,this.morphTargetInfluences[this.lastKeyframe]=1-e},THREE.MorphAnimMesh.prototype.interpolateTargets=function(t,e,r){for(var i=this.morphTargetInfluences,n=0,o=i.length;n<o;n++)i[n]=0;-1<t&&(i[t]=1-r),-1<e&&(i[e]=r)},THREE.MorphAnimMesh.prototype.clone=function(t){return void 0===t&&(t=new THREE.MorphAnimMesh(this.geometry,this.material)),t.duration=this.duration,t.mirroredLoop=this.mirroredLoop,t.time=this.time,t.lastKeyframe=this.lastKeyframe,t.currentKeyframe=this.currentKeyframe,t.direction=this.direction,t.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,t),t},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(t,e){void 0===e&&(e=0),e=Math.abs(e);for(var r=0;r<this.objects.length&&!(e<this.objects[r].distance);r++);this.objects.splice(r,0,{distance:e,object:t}),this.add(t)},THREE.LOD.prototype.getObjectForDistance=function(t){for(var e=1,r=this.objects.length;e<r&&!(t<this.objects[e].distance);e++);return this.objects[e-1].object},THREE.LOD.prototype.raycast=function(){var i=new THREE.Vector3;return function(t,e){i.setFromMatrixPosition(this.matrixWorld);var r=t.ray.origin.distanceTo(i);this.getObjectForDistance(r).raycast(t,e)}}(),THREE.LOD.prototype.update=function(){var i=new THREE.Vector3,n=new THREE.Vector3;return function(t){if(1<this.objects.length){i.setFromMatrixPosition(t.matrixWorld),n.setFromMatrixPosition(this.matrixWorld),t=i.distanceTo(n),this.objects[0].object.visible=!0;for(var e=1,r=this.objects.length;e<r&&t>=this.objects[e].distance;e++)this.objects[e-1].object.visible=!1,this.objects[e].object.visible=!0;for(;e<r;e++)this.objects[e].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(t){void 0===t&&(t=new THREE.LOD),THREE.Object3D.prototype.clone.call(this,t);for(var e=0,r=this.objects.length;e<r;e++){var i=this.objects[e].object.clone();i.visible=0===e,t.addLevel(i,this.objects[e].distance)}return t},THREE.Sprite=function(){var t=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0]),e=new THREE.BufferGeometry;return e.addAttribute("position",new THREE.BufferAttribute(t,3)),function(t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.SpriteMaterial}}(),THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.raycast=function(){var i=new THREE.Vector3;return function(t,e){i.setFromMatrixPosition(this.matrixWorld);var r=t.ray.distanceToPoint(i);r>this.scale.x||e.push({distance:r,point:this.position,face:null,object:this})}}(),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(t){return void 0===t&&(t=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,t),t},THREE.Particle=THREE.Sprite,THREE.Scene=function(){THREE.Object3D.call(this),this.overrideMaterial=this.fog=null,this.autoUpdate=!0,this.matrixAutoUpdate=!1,this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(t){if(t instanceof THREE.Light)-1===this.__lights.indexOf(t)&&this.__lights.push(t),t.target&&void 0===t.target.parent&&this.add(t.target);else if(!(t instanceof THREE.Camera||t instanceof THREE.Bone)){this.__objectsAdded.push(t);var e=this.__objectsRemoved.indexOf(t);-1!==e&&this.__objectsRemoved.splice(e,1)}for(this.dispatchEvent({type:"objectAdded",object:t}),t.dispatchEvent({type:"addedToScene",scene:this}),e=0;e<t.children.length;e++)this.__addObject(t.children[e])},THREE.Scene.prototype.__removeObject=function(t){if(t instanceof THREE.Light){var e=this.__lights.indexOf(t);if(-1!==e&&this.__lights.splice(e,1),t.shadowCascadeArray)for(e=0;e<t.shadowCascadeArray.length;e++)this.__removeObject(t.shadowCascadeArray[e])}else t instanceof THREE.Camera||(this.__objectsRemoved.push(t),-1!==(e=this.__objectsAdded.indexOf(t))&&this.__objectsAdded.splice(e,1));for(this.dispatchEvent({type:"objectRemoved",object:t}),t.dispatchEvent({type:"removedFromScene",scene:this}),e=0;e<t.children.length;e++)this.__removeObject(t.children[e])},THREE.Scene.prototype.clone=function(t){return void 0===t&&(t=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,t),null!==this.fog&&(t.fog=this.fog.clone()),null!==this.overrideMaterial&&(t.overrideMaterial=this.overrideMaterial.clone()),t.autoUpdate=this.autoUpdate,t.matrixAutoUpdate=this.matrixAutoUpdate,t},THREE.Fog=function(t,e,r){this.name="",this.color=new THREE.Color(t),this.near=void 0!==e?e:1,this.far=void 0!==r?r:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(t,e){this.name="",
this.color=new THREE.Color(t),this.density=void 0!==e?e:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(t){function g(t,e,r,i){b(e),w(r),M(i),S(t.getStyle()),K.stroke(),mt.expandByScalar(2*e)}function T(t){C(t.getStyle()),K.fill()}function v(t){y(t.target)}function y(t){if(!(t instanceof THREE.CompressedTexture)){var e=t.wrapS===THREE.RepeatWrapping,r=t.wrapT===THREE.RepeatWrapping,i=t.image,n=document.createElement("canvas");n.width=i.width,n.height=i.height;var o=n.getContext("2d");o.setTransform(1,0,0,-1,0,i.height),o.drawImage(i,0,0),Et[t.id]=K.createPattern(n,!0===e&&!0===r?"repeat":!0===e&&!1===r?"repeat-x":!1===e&&!0===r?"repeat-y":"no-repeat")}}function R(t,e,r,i,n,o,a,s,h,l,c,u,f){if(!(f instanceof THREE.DataTexture))if(!1===f.hasEventListener("update",v)&&(void 0!==f.image&&0<f.image.width&&y(f),f.addEventListener("update",v)),void 0!==(E=Et[f.id])){C(E);var E=f.offset.x/f.repeat.x,p=f.offset.y/f.repeat.y,d=f.image.width*f.repeat.x;r-=t,i-=e,n-=t,o-=e,0!==(f=(h=(h+E)*d-(a=(a+E)*d))*(u=(u+p)*(f=f.image.height*f.repeat.y)-(s=(s+p)*f))-(c=(c+E)*d-a)*(l=(l+p)*f-s))&&(t=t-(f=(u*r-l*n)*(E=1/f))*a-(r=(h*n-c*r)*E)*s,e=e-(l=(u*i-l*o)*E)*a-(i=(h*o-c*i)*E)*s,K.save(),K.transform(f,l,r,i,t,e),K.fill(),K.restore())}else C("rgba(0,0,0,1)"),K.fill()}function x(t,e,r){var i=e.x-t.x,n=e.y-t.y,o=i*i+n*n;0!==o&&(i*=r/=Math.sqrt(o),n*=r,e.x+=i,e.y+=n,t.x-=i,t.y-=n)}function H(t){o!==t&&(o=K.globalAlpha=t)}function _(t){a!==t&&(t===THREE.NormalBlending?K.globalCompositeOperation="source-over":t===THREE.AdditiveBlending?K.globalCompositeOperation="lighter":t===THREE.SubtractiveBlending&&(K.globalCompositeOperation="darker"),a=t)}function b(t){l!==t&&(l=K.lineWidth=t)}function w(t){c!==t&&(c=K.lineCap=t)}function M(t){u!==t&&(u=K.lineJoin=t)}function S(t){s!==t&&(s=K.strokeStyle=t)}function C(t){h!==t&&(h=K.fillStyle=t)}function A(t){e.length!==t.length&&(K.setLineDash(t),e=t)}console.log("THREE.CanvasRenderer",THREE.REVISION);var L=THREE.Math.smoothstep;t=t||{};var P,F,D,U,z,V,B,k=this,N=new THREE.Projector,i=void 0!==t.canvas?t.canvas:document.createElement("canvas"),O=i.width,I=i.height,G=Math.floor(O/2),W=Math.floor(I/2),j=0,X=0,Y=O,q=I,K=i.getContext("2d",{alpha:!0===t.alpha}),r=new THREE.Color(0),n=0,o=1,a=0,s=null,h=null,l=null,c=null,u=null,e=[];new THREE.RenderableVertex,new THREE.RenderableVertex;var Z,Q,J,$,tt,et,rt=new THREE.Color;new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color;var it,nt,ot,at,st,ht,lt,ct=new THREE.Color,ut=new THREE.Color,ft=new THREE.Color,Et={},pt=new THREE.Box2,dt=new THREE.Box2,mt=new THREE.Box2,gt=new THREE.Color,Tt=new THREE.Color,vt=new THREE.Color,yt=new THREE.Vector3,Rt=new THREE.Vector3,xt=new THREE.Vector3,Ht=new THREE.Matrix3;void 0===K.setLineDash&&(K.setLineDash=function(){}),this.domElement=i,this.devicePixelRatio=void 0!==t.devicePixelRatio?t.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.sortElements=this.sortObjects=this.autoClear=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(t,e,r){O=t*this.devicePixelRatio,I=e*this.devicePixelRatio,i.width=O,i.height=I,G=Math.floor(O/2),W=Math.floor(I/2),!1!==r&&(i.style.width=t+"px",i.style.height=e+"px"),pt.min.set(-G,-W),pt.max.set(G,W),dt.min.set(-G,-W),dt.max.set(G,W),o=1,a=0,u=c=l=h=s=null,this.setViewport(0,0,t,e)},this.setViewport=function(t,e,r,i){j=t*this.devicePixelRatio,X=e*this.devicePixelRatio,Y=r*this.devicePixelRatio,q=i*this.devicePixelRatio},this.setScissor=function(){},this.enableScissorTest=function(){},this.setClearColor=function(t,e){r.set(t),n=void 0!==e?e:1,dt.min.set(-G,-W),dt.max.set(G,W)},this.setClearColorHex=function(t,e){console.warn("THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(t,e)},this.getClearColor=function(){return r},this.getClearAlpha=function(){return n},this.getMaxAnisotropy=function(){return 0},this.clear=function(){!1===dt.empty()&&(dt.intersect(pt),dt.expandByScalar(2),dt.min.x+=G,dt.min.y=-dt.min.y+W,dt.max.x+=G,dt.max.y=-dt.max.y+W,n<1&&K.clearRect(0|dt.min.x,0|dt.min.y,dt.max.x-dt.min.x|0,dt.max.y-dt.min.y|0),0<n&&(_(THREE.NormalBlending),H(1),C("rgba("+Math.floor(255*r.r)+","+Math.floor(255*r.g)+","+Math.floor(255*r.b)+","+n+")"),K.fillRect(0|dt.min.x,0|dt.min.y,dt.max.x-dt.min.x|0,dt.max.y-dt.min.y|0)),dt.makeEmpty())},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.render=function(t,e){if(!1==e instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{!0===this.autoClear&&this.clear(),k.info.render.vertices=0,k.info.render.faces=0,K.setTransform(Y/O,0,0,-q/I,j,I-X),K.translate(G,W),P=N.projectScene(t,e,this.sortObjects,this.sortElements),F=P.elements,D=P.lights,U=e,Ht.getNormalMatrix(e.matrixWorldInverse),gt.setRGB(0,0,0),Tt.setRGB(0,0,0),vt.setRGB(0,0,0);for(var r=0,i=D.length;r<i;r++){var n=(o=D[r]).color;o instanceof THREE.AmbientLight?gt.add(n):o instanceof THREE.DirectionalLight?Tt.add(n):o instanceof THREE.PointLight&&vt.add(n)}for(r=0,i=F.length;r<i;r++){if(void 0!==(l=(h=F[r]).material)&&0!==l.opacity){if(mt.makeEmpty(),h instanceof THREE.RenderableSprite){(z=h).x*=G,z.y*=W;var o=z,a=h;H((n=l).opacity),_(n.blending);var s=a.scale.x*G,h=(a=a.scale.y*W,.5*Math.sqrt(s*s+a*a));if(mt.min.set(o.x-h,o.y-h),mt.max.set(o.x+h,o.y+h),n instanceof THREE.SpriteMaterial){if(null!==(u=n.map)&&void 0!==u.image){!1===u.hasEventListener("update",v)&&(0<u.image.width&&y(u),u.addEventListener("update",v)),C(void 0!==(h=Et[u.id])?h:"rgba( 0, 0, 0, 1 )");h=(f=u.image).width*u.offset.x;var l=f.height*u.offset.y,c=f.width*u.repeat.x,u=f.height*u.repeat.y,f=s/c,E=a/u;K.save(),K.translate(o.x,o.y),0!==n.rotation&&K.rotate(n.rotation),K.translate(-s/2,-a/2),K.scale(f,E),K.translate(-h,-l),K.fillRect(h,l,c,u)}else C(n.color.getStyle()),K.save(),K.translate(o.x,o.y),0!==n.rotation&&K.rotate(n.rotation),K.scale(s,-a),K.fillRect(-.5,-.5,1,1);K.restore()}else n instanceof THREE.SpriteCanvasMaterial&&(S(n.color.getStyle()),C(n.color.getStyle()),K.save(),K.translate(o.x,o.y),0!==n.rotation&&K.rotate(n.rotation),K.scale(s,a),n.program(K),K.restore())}else if(h instanceof THREE.RenderableLine){if(z=h.v1,V=h.v2,z.positionScreen.x*=G,z.positionScreen.y*=W,V.positionScreen.x*=G,V.positionScreen.y*=W,mt.setFromPoints([z.positionScreen,V.positionScreen]),!0===pt.isIntersectionBox(mt))if(o=z,n=V,s=h,H((a=l).opacity),_(a.blending),K.beginPath(),K.moveTo(o.positionScreen.x,o.positionScreen.y),K.lineTo(n.positionScreen.x,n.positionScreen.y),a instanceof THREE.LineBasicMaterial){if(b(a.linewidth),w(a.linecap),M(a.linejoin),a.vertexColors!==THREE.VertexColors)S(a.color.getStyle());else if((h=s.vertexColors[0].getStyle())===(s=s.vertexColors[1].getStyle()))S(h);else{try{var p=K.createLinearGradient(o.positionScreen.x,o.positionScreen.y,n.positionScreen.x,n.positionScreen.y);p.addColorStop(0,h),p.addColorStop(1,s)}catch(m){p=h}S(p)}K.stroke(),mt.expandByScalar(2*a.linewidth)}else a instanceof THREE.LineDashedMaterial&&(b(a.linewidth),w(a.linecap),M(a.linejoin),S(a.color.getStyle()),A([a.dashSize,a.gapSize]),K.stroke(),mt.expandByScalar(2*a.linewidth),A([]))}else if(h instanceof THREE.RenderableFace){if(z=h.v1,V=h.v2,B=h.v3,z.positionScreen.z<-1||1<z.positionScreen.z)continue;if(V.positionScreen.z<-1||1<V.positionScreen.z)continue;if(B.positionScreen.z<-1||1<B.positionScreen.z)continue;if(z.positionScreen.x*=G,z.positionScreen.y*=W,V.positionScreen.x*=G,V.positionScreen.y*=W,B.positionScreen.x*=G,B.positionScreen.y*=W,0<l.overdraw&&(x(z.positionScreen,V.positionScreen,l.overdraw),x(V.positionScreen,B.positionScreen,l.overdraw),x(B.positionScreen,z.positionScreen,l.overdraw)),mt.setFromPoints([z.positionScreen,V.positionScreen,B.positionScreen]),!0===pt.isIntersectionBox(mt)){n=z,s=V,a=B,o=l,k.info.render.vertices+=3,k.info.render.faces++,H(o.opacity),_(o.blending),Z=n.positionScreen.x,Q=n.positionScreen.y,J=s.positionScreen.x,$=s.positionScreen.y,tt=a.positionScreen.x,et=a.positionScreen.y;l=Z,c=Q,u=J,f=$,E=tt;var d=et;if(K.beginPath(),K.moveTo(l,c),K.lineTo(u,f),K.lineTo(E,d),K.closePath(),(o instanceof THREE.MeshLambertMaterial||o instanceof THREE.MeshPhongMaterial)&&null===o.map){for(ct.copy(o.color),ut.copy(o.emissive),o.vertexColors===THREE.FaceColors&&ct.multiply(h.color),rt.copy(gt),Rt.copy(n.positionWorld).add(s.positionWorld).add(a.positionWorld).divideScalar(3),n=Rt,s=h.normalModel,a=rt,h=0,l=D.length;h<l;h++)c=D[h],ft.copy(c.color),c instanceof THREE.DirectionalLight?(u=yt.setFromMatrixPosition(c.matrixWorld).normalize(),(f=s.dot(u))<=0||(f*=c.intensity,a.add(ft.multiplyScalar(f)))):c instanceof THREE.PointLight&&(u=yt.setFromMatrixPosition(c.matrixWorld),(f=s.dot(yt.subVectors(u,n).normalize()))<=0||0!=(f*=0==c.distance?1:1-Math.min(n.distanceTo(u)/c.distance,1))&&(f*=c.intensity,a.add(ft.multiplyScalar(f))));rt.multiply(ct).add(ut),!0===o.wireframe?g(rt,o.wireframeLinewidth,o.wireframeLinecap,o.wireframeLinejoin):T(rt)}else o instanceof THREE.MeshBasicMaterial||o instanceof THREE.MeshLambertMaterial||o instanceof THREE.MeshPhongMaterial?null!==o.map?o.map.mapping instanceof THREE.UVMapping&&(it=h.uvs,R(Z,Q,J,$,tt,et,it[0].x,it[0].y,it[1].x,it[1].y,it[2].x,it[2].y,o.map)):null!==o.envMap?o.envMap.mapping instanceof THREE.SphericalReflectionMapping?(xt.copy(h.vertexNormalsModel[0]).applyMatrix3(Ht),nt=.5*xt.x+.5,ot=.5*xt.y+.5,xt.copy(h.vertexNormalsModel[1]).applyMatrix3(Ht),at=.5*xt.x+.5,st=.5*xt.y+.5,xt.copy(h.vertexNormalsModel[2]).applyMatrix3(Ht),ht=.5*xt.x+.5,lt=.5*xt.y+.5,R(Z,Q,J,$,tt,et,nt,ot,at,st,ht,lt,o.envMap)):o.envMap.mapping instanceof THREE.SphericalRefractionMapping&&(xt.copy(h.vertexNormalsModel[0]).applyMatrix3(Ht),nt=-.5*xt.x+.5,ot=-.5*xt.y+.5,xt.copy(h.vertexNormalsModel[1]).applyMatrix3(Ht),at=-.5*xt.x+.5,st=-.5*xt.y+.5,xt.copy(h.vertexNormalsModel[2]).applyMatrix3(Ht),ht=-.5*xt.x+.5,lt=-.5*xt.y+.5,R(Z,Q,J,$,tt,et,nt,ot,at,st,ht,lt,o.envMap)):(rt.copy(o.color),o.vertexColors===THREE.FaceColors&&rt.multiply(h.color),!0===o.wireframe?g(rt,o.wireframeLinewidth,o.wireframeLinecap,o.wireframeLinejoin):T(rt)):(o instanceof THREE.MeshDepthMaterial?rt.r=rt.g=rt.b=1-L(n.positionScreen.z*n.positionScreen.w,U.near,U.far):o instanceof THREE.MeshNormalMaterial?(xt.copy(h.normalModel).applyMatrix3(Ht),rt.setRGB(xt.x,xt.y,xt.z).multiplyScalar(.5).addScalar(.5)):rt.setRGB(1,1,1),!0===o.wireframe?g(rt,o.wireframeLinewidth,o.wireframeLinecap,o.wireframeLinejoin):T(rt))}}dt.union(mt)}}K.setTransform(1,0,0,1,0,0)}}},THREE.ShaderChunk={},THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n\tif ( gl_FragColor.a < ALPHATEST ) discard;\n\n#endif\n",THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\tvec3 dirVector = normalize( lDirection.xyz );\n\n\tfloat dotProduct = dot( transformedNormal, dirVector );\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t#endif\n\n\t#endif\n\n\t#ifdef WRAP_AROUND\n\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n\t\t#endif\n\n\t#endif\n\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n\t#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\tfloat lDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n\t\t\tlVector = normalize( lVector );\n\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n\t\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\n\t\t\t#endif\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n\t\t#endif\n\n\t}\n\n#endif\n\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n\n#endif",THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif",THREE.ShaderChunk.default_vertex="vec4 mvPosition;\n\n#ifdef USE_SKINNING\n\n\tmvPosition = modelViewMatrix * skinned;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n\n\tmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n\n\tmvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.map_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif",THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\t#ifdef USE_MORPHNORMALS\n\n\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n\t#else\n\n\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n\tuniform float logDepthBufFC;\n\n#endif",THREE.ShaderChunk.lightmap_pars_vertex="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\n#endif",THREE.ShaderChunk.lights_phong_fragment="vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef DOUBLE_SIDED\n\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tvec3 pointDiffuse = vec3( 0.0 );\n\tvec3 pointSpecular = vec3( 0.0 );\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\n\t\t\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\tpointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\n\t\t\t\t// specular\n\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tvec3 spotDiffuse = vec3( 0.0 );\n\tvec3 spotSpecular = vec3( 0.0 );\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\t\t\t// diffuse\n\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n\t\t\t#else\n\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t\t#endif\n\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\n\t\t\t\t\t// specular\n\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tvec3 dirDiffuse = vec3( 0.0 );\n\tvec3 dirSpecular = vec3( 0.0 );\n\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\tvec3 dirVector = normalize( lDirection.xyz );\n\n\t\t\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, dirVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\tdirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n\t\t// specular\n\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n\t\t/*\n\t\t// fresnel term from skin shader\n\t\tconst float F0 = 0.128;\n\n\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\n\t\tfloat exponential = pow( base, 5.0 );\n\n\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\n\t\t*/\n\n\t\t/*\n\t\t// fresnel term from fresnel shader\n\t\tconst float mFresnelBias = 0.08;\n\t\tconst float mFresnelScale = 0.3;\n\t\tconst float mFresnelPower = 5.0;\n\n\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n\t\t*/\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t// \t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tvec3 hemiDiffuse = vec3( 0.0 );\n\tvec3 hemiSpecular = vec3( 0.0 );\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\n\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\themiDiffuse += diffuse * hemiColor;\n\n\t\t// specular (sky light)\n\n\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\tfloat hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n\t\t// specular (ground light)\n\n\t\tvec3 lVectorGround = -lVector;\n\n\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\tfloat hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n\t}\n\n#endif\n\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n\n#if MAX_DIR_LIGHTS > 0\n\n\ttotalDiffuse += dirDiffuse;\n\ttotalSpecular += dirSpecular;\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\ttotalDiffuse += hemiDiffuse;\n\ttotalSpecular += hemiSpecular;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\ttotalDiffuse += pointDiffuse;\n\ttotalSpecular += pointSpecular;\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\ttotalDiffuse += spotDiffuse;\n\ttotalSpecular += spotSpecular;\n\n#endif\n\n#ifdef METAL\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\n#else\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\n#endif",THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n\n#endif",THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n\tvec3 morphedNormal = vec3( 0.0 );\n\n\tmorphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tmorphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tmorphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tmorphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n\tmorphedNormal += normal;\n\n#endif",THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\tuniform samplerCube envMap;\n\tuniform float flipEnvMap;\n\tuniform int combine;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n\t\tuniform bool useRefract;\n\t\tuniform float refractionRatio;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\n\t#endif\n\n#endif",THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif",THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\t\t\t// Per-Pixel Tangent Space Normal Mapping\n\t\t\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n",THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n",THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\tuniform sampler2D lightMap;\n\n#endif",THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n\t}\n\n#endif",THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif",THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\t#ifdef GAMMA_INPUT\n\n\t\ttexelColor.xyz *= texelColor.xyz;\n\n\t#endif\n\n\tgl_FragColor = gl_FragColor * texelColor;\n\n#endif",THREE.ShaderChunk.lightmap_vertex="#ifdef USE_LIGHTMAP\n\n\tvUv2 = uv2;\n\n#endif",THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n\tgl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n\n#endif",THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n",THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n\t#ifdef GAMMA_INPUT\n\n\t\tvColor = color * color;\n\n\t#else\n\n\t\tvColor = color;\n\n\t#endif\n\n#endif",THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n\t#ifdef USE_MORPHTARGETS\n\n\tvec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n\t#else\n\n\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n#endif\n",THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n\tvarying vec3 vReflect;\n\n\tuniform float refractionRatio;\n\tuniform bool useRefract;\n\n#endif\n",THREE.ShaderChunk.linear_to_gamma_fragment="#ifdef GAMMA_OUTPUT\n\n\tgl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n\n#endif",THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif",THREE.ShaderChunk.lights_lambert_pars_vertex="uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n",THREE.ShaderChunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n",
THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n\tvec3 reflectVec;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\t// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\n\t\tvec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\n\t\tif ( useRefract ) {\n\n\t\t\treflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t} else { \n\n\t\t\treflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t}\n\n\t#else\n\n\t\treflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\t\tvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#else\n\n\t\tvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#endif\n\n\t#ifdef GAMMA_INPUT\n\n\t\tcubeColor.xyz *= cubeColor.xyz;\n\n\t#endif\n\n\tif ( combine == 1 ) {\n\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n\n\t} else if ( combine == 2 ) {\n\n\t\tgl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n\n\t} else {\n\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n\n\t}\n\n#endif",THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif",THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n\tgl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n\t#endif\n\n#endif",THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif",THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif",THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t#else\n\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t#endif\n\n\t#ifdef FOG_EXP2\n\n\t\tconst float LOG2 = 1.442695;\n\t\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\n\t#endif\n\t\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n#endif",THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t\t\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n\t\t\t//\thttp://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n\t\t\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif",THREE.ShaderChunk.defaultnormal_vertex="vec3 objectNormal;\n\n#ifdef USE_SKINNING\n\n\tobjectNormal = skinnedNormal.xyz;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\n\n\tobjectNormal = morphedNormal;\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\n\n\tobjectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n\tobjectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;",THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif",THREE.ShaderChunk.map_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif",THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n\tgl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n\n#endif",THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif",THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n\tgl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n\n#endif",THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n\tvec3 morphed = vec3( 0.0 );\n\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n\tmorphed += position;\n\n#endif",THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n\tvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n\tworldNormal = normalize( worldNormal );\n\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\tif ( useRefract ) {\n\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t} else {\n\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t}\n\n#endif",THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n\t#ifdef SHADOWMAP_DEBUG\n\n\t\tvec3 frustumColors[3];\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n\t#endif\n\n\t#ifdef SHADOWMAP_CASCADE\n\n\t\tint inFrustumCount = 0;\n\n\t#endif\n\n\tfloat fDepth;\n\tvec3 shadowColor = vec3( 1.0 );\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\t\t\t// don't shadow pixels outside of light frustum\n\t\t\t\t// use just first frustum (for cascades)\n\t\t\t\t// don't shadow pixels behind far plane of light frustum\n\n\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\tinFrustumCount += int( inFrustum );\n\t\t\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n\t\t#else\n\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\t#endif\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t/*\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n\t\t\t\t\t\t// must enroll loop manually\n\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\t\t\tshadow += 1.0;\n\n\t\t\t\t}\n\n\t\t\t\tshadow /= 9.0;\n\n\t\t*/\n\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\n\n\t\t\t\tmat3 shadowKernel;\n\t\t\t\tmat3 depthKernel;\n\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\n\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n\t\t\t\tvec4 shadowValues;\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#else\n\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\tif ( fDepth < shadowCoord.z )\n\n\t\t// spot with multiple shadows is darker\n\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n\t\t// spot with multiple shadows has the same color as single shadow spot\n\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n\t\t\t#endif\n\n\t\t}\n\n\n\t\t#ifdef SHADOWMAP_DEBUG\n\n\t\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\t\tif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\n\t\t\t#else\n\n\t\t\t\tif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t}\n\n\t#ifdef GAMMA_OUTPUT\n\n\t\tshadowColor *= shadowColor;\n\n\t#endif\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n\n#endif\n",THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n\t#ifdef USE_SKINNING\n\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\n\t#endif\n\n\t#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n\t#endif\n\n\t#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n#endif",THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n\n\t}\n\n#endif",THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n\tuniform float logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\t#extension GL_EXT_frag_depth : enable\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n#endif",THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n\tgl_FragColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n",THREE.UniformsUtils={merge:function(t){var e,r,i,n={};for(e=0;e<t.length;e++)for(r in i=this.clone(t[e]))n[r]=i[r];return n},clone:function(t){var e,r,i,n={};for(e in t)for(r in n[e]={},t[e])i=t[e][r],n[e][r]=i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture?i.clone():i instanceof Array?i.slice():i;return n}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\t#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"\t#ifdef DOUBLE_SIDED\n\t\tif ( gl_FrontFacing )\n\t\t\tgl_FragColor.xyz *= vLightFront;\n\t\telse\n\t\t\tgl_FragColor.xyz *= vLightBack;\n\t#else\n\t\tgl_FragColor.xyz *= vLightFront;\n\t#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\tvNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;\nuniform float mFar;\nuniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\n\tgl_FragColor = vec4( vec3( color ), opacity );\n}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",
value:.98},reflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float reflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n\tuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );\n\tvec3 specularTex = vec3( 1.0 );\n\tvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\n\tnormalTex.xy *= uNormalScale;\n\tnormalTex = normalize( normalTex );\n\tif( enableDiffuse ) {\n\t\t#ifdef GAMMA_INPUT\n\t\t\tvec4 texelColor = texture2D( tDiffuse, vUv );\n\t\t\ttexelColor.xyz *= texelColor.xyz;\n\t\t\tgl_FragColor = gl_FragColor * texelColor;\n\t\t#else\n\t\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n\t\t#endif\n\t}\n\tif( enableAO ) {\n\t\t#ifdef GAMMA_INPUT\n\t\t\tvec4 aoColor = texture2D( tAO, vUv );\n\t\t\taoColor.xyz *= aoColor.xyz;\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n\t\t#else\n\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n\t\t#endif\n\t}",THREE.ShaderChunk.alphatest_fragment,"\tif( enableSpecular )\n\t\tspecularTex = texture2D( tSpecular, vUv ).xyz;\n\tmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\n\tvec3 finalNormal = tsb * normalTex;\n\t#ifdef FLIP_SIDED\n\t\tfinalNormal = -finalNormal;\n\t#endif\n\tvec3 normal = normalize( finalNormal );\n\tvec3 viewPosition = normalize( vViewPosition );\n\t#if MAX_POINT_LIGHTS > 0\n\t\tvec3 pointDiffuse = vec3( 0.0 );\n\t\tvec3 pointSpecular = vec3( 0.0 );\n\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\t\tvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\n\t\t\tfloat pointDistance = 1.0;\n\t\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\t\tpointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\n\t\t\tpointVector = normalize( pointVector );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\n\t\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\n\t\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n\t\t\t#endif\n\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\n\t\t\tvec3 pointHalfVector = normalize( pointVector + viewPosition );\n\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( pointVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n\t\t}\n\t#endif\n\t#if MAX_SPOT_LIGHTS > 0\n\t\tvec3 spotDiffuse = vec3( 0.0 );\n\t\tvec3 spotSpecular = vec3( 0.0 );\n\t\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\t\tvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\n\t\t\tfloat spotDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\n\t\t\tspotVector = normalize( spotVector );\n\t\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\t\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\t\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\t\t\t\t#ifdef WRAP_AROUND\n\t\t\t\t\tfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\n\t\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\n\t\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\t\t\t\t#else\n\t\t\t\t\tfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n\t\t\t\t#endif\n\t\t\t\tspotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\n\t\t\t\tvec3 spotHalfVector = normalize( spotVector + viewPosition );\n\t\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\t\tfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\t\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( spotVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n\t\t\t}\n\t\t}\n\t#endif\n\t#if MAX_DIR_LIGHTS > 0\n\t\tvec3 dirDiffuse = vec3( 0.0 );\n\t\tvec3 dirSpecular = vec3( 0.0 );\n\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\n\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\t\tvec3 dirVector = normalize( lDirection.xyz );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\n\t\t\t\tfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\n\t\t\t\tvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n\t\t\t#endif\n\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\n\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\t\t}\n\t#endif\n\t#if MAX_HEMI_LIGHTS > 0\n\t\tvec3 hemiDiffuse = vec3( 0.0 );\n\t\tvec3 hemiSpecular = vec3( 0.0 );\n\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\t\tvec3 lVector = normalize( lDirection.xyz );\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\t\t\themiDiffuse += diffuse * hemiColor;\n\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\t\tfloat hemiSpecularWeightSky = specularTex.r * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\t\t\tvec3 lVectorGround = -lVector;\n\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\t\tfloat hemiSpecularWeightGround = specularTex.r * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\t\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\t\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\t\t}\n\t#endif\n\tvec3 totalDiffuse = vec3( 0.0 );\n\tvec3 totalSpecular = vec3( 0.0 );\n\t#if MAX_DIR_LIGHTS > 0\n\t\ttotalDiffuse += dirDiffuse;\n\t\ttotalSpecular += dirSpecular;\n\t#endif\n\t#if MAX_HEMI_LIGHTS > 0\n\t\ttotalDiffuse += hemiDiffuse;\n\t\ttotalSpecular += hemiSpecular;\n\t#endif\n\t#if MAX_POINT_LIGHTS > 0\n\t\ttotalDiffuse += pointDiffuse;\n\t\ttotalSpecular += pointSpecular;\n\t#endif\n\t#if MAX_SPOT_LIGHTS > 0\n\t\ttotalDiffuse += spotDiffuse;\n\t\ttotalSpecular += spotSpecular;\n\t#endif\n\t#ifdef METAL\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\t#else\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\t#endif\n\tif ( enableReflection ) {\n\t\tvec3 vReflect;\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tif ( useRefract ) {\n\t\t\tvReflect = refract( cameraToVertex, normal, refractionRatio );\n\t\t} else {\n\t\t\tvReflect = reflect( cameraToVertex, normal );\n\t\t}\n\t\tvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n\t\t#ifdef GAMMA_INPUT\n\t\t\tcubeColor.xyz *= cubeColor.xyz;\n\t\t#endif\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\n\t}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\n\tuniform sampler2D tDisplacement;\n\tuniform float uDisplacementScale;\n\tuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"\t#ifdef USE_SKINNING\n\t\tvNormal = normalize( normalMatrix * skinnedNormal.xyz );\n\t\tvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\n\t\tvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n\t#else\n\t\tvNormal = normalize( normalMatrix * normal );\n\t\tvTangent = normalize( normalMatrix * tangent.xyz );\n\t#endif\n\tvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\n\tvUv = uv * uRepeat + uOffset;\n\tvec3 displacedPosition;\n\t#ifdef VERTEX_TEXTURES\n\t\tif ( enableDisplacement ) {\n\t\t\tvec3 dv = texture2D( tDisplacement, uv ).xyz;\n\t\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;\n\t\t\tdisplacedPosition = position + normalize( normal ) * df;\n\t\t} else {\n\t\t\t#ifdef USE_SKINNING\n\t\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\t\t\t\tvec4 skinned = vec4( 0.0 );\n\t\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;\n\t\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;\n\t\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\t\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;\n\t\t\t\tskinned  = bindMatrixInverse * skinned;\n\t\t\t\tdisplacedPosition = skinned.xyz;\n\t\t\t#else\n\t\t\t\tdisplacedPosition = position;\n\t\t\t#endif\n\t\t}\n\t#else\n\t\t#ifdef USE_SKINNING\n\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\t\t\tvec4 skinned = vec4( 0.0 );\n\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;\n\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;\n\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;\n\t\t\tskinned  = bindMatrixInverse * skinned;\n\t\t\tdisplacedPosition = skinned.xyz;\n\t\t#else\n\t\t\tdisplacedPosition = position;\n\t\t#endif\n\t#endif\n\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"\tvWorldPosition = worldPosition.xyz;\n\tvViewPosition = -mvPosition.xyz;\n\t#ifdef USE_SHADOWMAP\n\t\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\t\t}\n\t#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\tvWorldPosition = worldPosition.xyz;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n\tres -= res.xxyz * bit_mask;\n\treturn res;\n}\nvoid main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n\t#else\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n\t#endif\n}"].join("\n")}},THREE.WebGLRenderer=function(t){function s(t,e){var r=t.vertices.length,i=e.material;if(i.attributes)for(var n in void 0===t.__webglCustomAttributesList&&(t.__webglCustomAttributesList=[]),i.attributes){var o=i.attributes[n];if(!o.__webglInitialized||o.createUniqueBuffers){o.__webglInitialized=!0;var a=1;"v2"===o.type?a=2:"v3"===o.type?a=3:"v4"===o.type?a=4:"c"===o.type&&(a=3),o.size=a,o.array=new Float32Array(r*a),o.buffer=fr.createBuffer(),o.buffer.belongsToAttribute=n,o.needsUpdate=!0}t.__webglCustomAttributesList.push(o)}}function tr(t,e){var r,i=e.geometry,n=3*(r=t.faces3).length,o=1*r.length,a=3*r.length,s=ir(r=er(e,t)),h=rr(r),l=!!r.vertexColors&&r.vertexColors;if(t.__vertexArray=new Float32Array(3*n),h&&(t.__normalArray=new Float32Array(3*n)),i.hasTangents&&(t.__tangentArray=new Float32Array(4*n)),l&&(t.__colorArray=new Float32Array(3*n)),s&&(0<i.faceVertexUvs.length&&(t.__uvArray=new Float32Array(2*n)),1<i.faceVertexUvs.length&&(t.__uv2Array=new Float32Array(2*n))),e.geometry.skinWeights.length&&e.geometry.skinIndices.length&&(t.__skinIndexArray=new Float32Array(4*n),t.__skinWeightArray=new Float32Array(4*n)),i=null!==U&&21845<o?Uint32Array:Uint16Array,t.__typeArray=i,t.__faceArray=new i(3*o),t.__lineArray=new i(2*a),t.numMorphTargets)for(t.__morphTargetsArrays=[],i=0,s=t.numMorphTargets;i<s;i++)t.__morphTargetsArrays.push(new Float32Array(3*n));if(t.numMorphNormals)for(t.__morphNormalsArrays=[],i=0,s=t.numMorphNormals;i<s;i++)t.__morphNormalsArrays.push(new Float32Array(3*n));if(t.__webglFaceCount=3*o,t.__webglLineCount=2*a,r.attributes)for(var c in void 0===t.__webglCustomAttributesList&&(t.__webglCustomAttributesList=[]),r.attributes){var u;o=r.attributes[c],a={};for(u in o)a[u]=o[u];a.__webglInitialized&&!a.createUniqueBuffers||(a.__webglInitialized=!0,i=1,"v2"===a.type?i=2:"v3"===a.type?i=3:"v4"===a.type?i=4:"c"===a.type&&(i=3),a.size=i,a.array=new Float32Array(n*i),a.buffer=fr.createBuffer(),a.buffer.belongsToAttribute=c,o.needsUpdate=!0,a.__original=o),t.__webglCustomAttributesList.push(a)}t.__inittedArrays=!0}function er(t,e){return t.material instanceof THREE.MeshFaceMaterial?t.material.materials[e.materialIndex]:t.material}function rr(t){return!(t instanceof THREE.MeshBasicMaterial&&!t.envMap||t instanceof THREE.MeshDepthMaterial)&&(t&&void 0!==t.shading&&t.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading)}function ir(t){return!!(t.map||t.lightMap||t.bumpMap||t.normalMap||t.specularMap||t.alphaMap||t instanceof THREE.ShaderMaterial)}function nr(t){for(var e in t.attributes){var r="index"===e?fr.ELEMENT_ARRAY_BUFFER:fr.ARRAY_BUFFER,i=t.attributes[e];i.buffer=fr.createBuffer(),fr.bindBuffer(r,i.buffer),fr.bufferData(r,i.array,fr.STATIC_DRAW)}}function f(t,e,r,i){for(var n in e){var o=e[n],a=r[n];if(0<=o)if(a){var s=a.itemSize;fr.bindBuffer(fr.ARRAY_BUFFER,a.buffer),p(o),fr.vertexAttribPointer(o,s,fr.FLOAT,!1,0,i*s*4)}else t.defaultAttributeValues&&(2===t.defaultAttributeValues[n].length?fr.vertexAttrib2fv(o,t.defaultAttributeValues[n]):3===t.defaultAttributeValues[n].length&&fr.vertexAttrib3fv(o,t.defaultAttributeValues[n]))}d()}function E(){for(var t=0,e=dt.length;t<e;t++)dt[t]=0}function p(t){dt[t]=1,0===mt[t]&&(fr.enableVertexAttribArray(t),mt[t]=1)}function d(){for(var t=0,e=mt.length;t<e;t++)mt[t]!==dt[t]&&(fr.disableVertexAttribArray(t),mt[t]=0)}function u(t,e){return t.z!==e.z?e.z-t.z:t.id-e.id}function m(t,e){return t.z!==e.z?t.z-e.z:t.id-e.id}function or(t,e){return e[0]-t[0]}function ar(t,e,r){if(!1!==e.visible){var i=t.__webglObjects[e.id];if(i&&(!1===e.frustumCulled||!0===pr.intersectsObject(e))){var n,o,a,s=e.geometry;if(s instanceof THREE.BufferGeometry){var h,l,c=fr.DYNAMIC_DRAW,u=s.attributes;for(h in u)(l=u[h]).needsUpdate&&("index"===h?(fr.bindBuffer(fr.ELEMENT_ARRAY_BUFFER,l.buffer),fr.bufferData(fr.ELEMENT_ARRAY_BUFFER,l.array,c)):(fr.bindBuffer(fr.ARRAY_BUFFER,l.buffer),fr.bufferData(fr.ARRAY_BUFFER,l.array,c)),l.needsUpdate=!1)}else if(e instanceof THREE.Mesh){(s.buffersNeedUpdate||s.groupsNeedUpdate)&&(s instanceof THREE.BufferGeometry?nr(s):e instanceof THREE.Mesh&&sr(t,e,s));for(var f=0,E=s.geometryGroupsList.length;f<E;f++)if(a=er(e,n=s.geometryGroupsList[f]),(s.buffersNeedUpdate||s.groupsNeedUpdate)&&tr(n,e),o=a.attributes&&hr(a),s.verticesNeedUpdate||s.morphTargetsNeedUpdate||s.elementsNeedUpdate||s.uvsNeedUpdate||s.normalsNeedUpdate||s.colorsNeedUpdate||s.tangentsNeedUpdate||o){var p=n,d=e,m=fr.DYNAMIC_DRAW,g=!s.dynamic,T=a;if(p.__inittedArrays){var v=rr(T),y=!!T.vertexColors&&T.vertexColors,R=ir(T),x=v===THREE.SmoothShading,H=void 0,_=void 0,b=void 0,w=void 0,M=void 0,S=void 0,C=void 0,A=void 0,L=void 0,P=void 0,F=void 0,D=void 0,U=void 0,z=void 0,V=void 0,B=void 0,k=void 0,N=void 0,O=void 0,I=void 0,G=void 0,W=void 0,j=void 0,X=void 0,Y=void 0,q=void 0,K=void 0,Z=void 0,Q=void 0,J=void 0,$=void 0,tt=void 0,et=void 0,rt=void 0,it=void 0,nt=void 0,ot=void 0,at=void 0,st=void 0,ht=0,lt=0,ct=0,ut=0,ft=0,Et=0,pt=0,dt=0,mt=0,gt=0,Tt=0,vt=0,yt=void 0,Rt=p.__vertexArray,xt=p.__uvArray,Ht=p.__uv2Array,_t=p.__normalArray,bt=p.__tangentArray,wt=p.__colorArray,Mt=p.__skinIndexArray,St=p.__skinWeightArray,Ct=p.__morphTargetsArrays,At=p.__morphNormalsArrays,Lt=p.__webglCustomAttributesList,Pt=void 0,Ft=p.__faceArray,Dt=p.__lineArray,Ut=d.geometry,zt=Ut.elementsNeedUpdate,Vt=Ut.uvsNeedUpdate,Bt=Ut.normalsNeedUpdate,kt=Ut.tangentsNeedUpdate,Nt=Ut.colorsNeedUpdate,Ot=Ut.morphTargetsNeedUpdate,It=Ut.vertices,Gt=p.faces3,Wt=Ut.faces,jt=Ut.faceVertexUvs[0],Xt=Ut.faceVertexUvs[1],Yt=Ut.skinIndices,qt=Ut.skinWeights,Kt=Ut.morphTargets,Zt=Ut.morphNormals;if(Ut.verticesNeedUpdate){for(H=0,_=Gt.length;H<_;H++)F=It[(b=Wt[Gt[H]]).a],D=It[b.b],U=It[b.c],Rt[lt]=F.x,Rt[lt+1]=F.y,Rt[lt+2]=F.z,Rt[lt+3]=D.x,Rt[lt+4]=D.y,Rt[lt+5]=D.z,Rt[lt+6]=U.x,Rt[lt+7]=U.y,Rt[lt+8]=U.z,lt+=9;fr.bindBuffer(fr.ARRAY_BUFFER,p.__webglVertexBuffer),fr.bufferData(fr.ARRAY_BUFFER,Rt,m)}if(Ot)for(rt=0,it=Kt.length;rt<it;rt++){for(H=Tt=0,_=Gt.length;H<_;H++)b=Wt[at=Gt[H]],F=Kt[rt].vertices[b.a],D=Kt[rt].vertices[b.b],U=Kt[rt].vertices[b.c],(nt=Ct[rt])[Tt]=F.x,nt[Tt+1]=F.y,nt[Tt+2]=F.z,nt[Tt+3]=D.x,nt[Tt+4]=D.y,nt[Tt+5]=D.z,nt[Tt+6]=U.x,nt[Tt+7]=U.y,nt[Tt+8]=U.z,T.morphNormals&&(x?(k=(st=Zt[rt].vertexNormals[at]).a,N=st.b,O=st.c):O=N=k=Zt[rt].faceNormals[at],(ot=At[rt])[Tt]=k.x,ot[Tt+1]=k.y,ot[Tt+2]=k.z,ot[Tt+3]=N.x,ot[Tt+4]=N.y,ot[Tt+5]=N.z,ot[Tt+6]=O.x,ot[Tt+7]=O.y,ot[Tt+8]=O.z),Tt+=9;fr.bindBuffer(fr.ARRAY_BUFFER,p.__webglMorphTargetsBuffers[rt]),fr.bufferData(fr.ARRAY_BUFFER,Ct[rt],m),T.morphNormals&&(fr.bindBuffer(fr.ARRAY_BUFFER,p.__webglMorphNormalsBuffers[rt]),fr.bufferData(fr.ARRAY_BUFFER,At[rt],m))}if(qt.length){for(H=0,_=Gt.length;H<_;H++)j=qt[(b=Wt[Gt[H]]).a],X=qt[b.b],Y=qt[b.c],St[gt]=j.x,St[gt+1]=j.y,St[gt+2]=j.z,St[gt+3]=j.w,St[gt+4]=X.x,St[gt+5]=X.y,St[gt+6]=X.z,St[gt+7]=X.w,St[gt+8]=Y.x,St[gt+9]=Y.y,St[gt+10]=Y.z,St[gt+11]=Y.w,q=Yt[b.a],K=Yt[b.b],Z=Yt[b.c],Mt[gt]=q.x,Mt[gt+1]=q.y,Mt[gt+2]=q.z,Mt[gt+3]=q.w,Mt[gt+4]=K.x,Mt[gt+5]=K.y,Mt[gt+6]=K.z,Mt[gt+7]=K.w,Mt[gt+8]=Z.x,Mt[gt+9]=Z.y,Mt[gt+10]=Z.z,Mt[gt+11]=Z.w,gt+=12;0<gt&&(fr.bindBuffer(fr.ARRAY_BUFFER,p.__webglSkinIndicesBuffer),fr.bufferData(fr.ARRAY_BUFFER,Mt,m),fr.bindBuffer(fr.ARRAY_BUFFER,p.__webglSkinWeightsBuffer),fr.bufferData(fr.ARRAY_BUFFER,St,m))}if(Nt&&y){for(H=0,_=Gt.length;H<_;H++)S=(b=Wt[Gt[H]]).vertexColors,C=b.color,3===S.length&&y===THREE.VertexColors?(I=S[0],G=S[1],W=S[2]):W=G=I=C,wt[mt]=I.r,wt[mt+1]=I.g,wt[mt+2]=I.b,wt[mt+3]=G.r,wt[mt+4]=G.g,wt[mt+5]=G.b,wt[mt+6]=W.r,wt[mt+7]=W.g,wt[mt+8]=W.b,mt+=9;0<mt&&(fr.bindBuffer(fr.ARRAY_BUFFER,p.__webglColorBuffer),fr.bufferData(fr.ARRAY_BUFFER,wt,m))}if(kt&&Ut.hasTangents){for(H=0,_=Gt.length;H<_;H++)z=(A=(b=Wt[Gt[H]]).vertexTangents)[0],V=A[1],B=A[2],bt[pt]=z.x,bt[pt+1]=z.y,bt[pt+2]=z.z,bt[pt+3]=z.w,bt[pt+4]=V.x,bt[pt+5]=V.y,bt[pt+6]=V.z,bt[pt+7]=V.w,bt[pt+8]=B.x,bt[pt+9]=B.y,bt[pt+10]=B.z,bt[pt+11]=B.w,pt+=12;fr.bindBuffer(fr.ARRAY_BUFFER,p.__webglTangentBuffer),fr.bufferData(fr.ARRAY_BUFFER,bt,m)}if(Bt&&v){for(H=0,_=Gt.length;H<_;H++)if(w=(b=Wt[Gt[H]]).vertexNormals,M=b.normal,3===w.length&&x)for(Q=0;Q<3;Q++)$=w[Q],_t[Et]=$.x,_t[Et+1]=$.y,_t[Et+2]=$.z,Et+=3;else for(Q=0;Q<3;Q++)_t[Et]=M.x,_t[Et+1]=M.y,_t[Et+2]=M.z,Et+=3;fr.bindBuffer(fr.ARRAY_BUFFER,p.__webglNormalBuffer),fr.bufferData(fr.ARRAY_BUFFER,_t,m)}if(Vt&&jt&&R){for(H=0,_=Gt.length;H<_;H++)if(void 0!==(L=jt[Gt[H]]))for(Q=0;Q<3;Q++)tt=L[Q],xt[ct]=tt.x,xt[ct+1]=tt.y,ct+=2;0<ct&&(fr.bindBuffer(fr.ARRAY_BUFFER,p.__webglUVBuffer),fr.bufferData(fr.ARRAY_BUFFER,xt,m))}if(Vt&&Xt&&R){for(H=0,_=Gt.length;H<_;H++)if(void 0!==(P=Xt[Gt[H]]))for(Q=0;Q<3;Q++)et=P[Q],Ht[ut]=et.x,Ht[ut+1]=et.y,ut+=2;0<ut&&(fr.bindBuffer(fr.ARRAY_BUFFER,p.__webglUV2Buffer),fr.bufferData(fr.ARRAY_BUFFER,Ht,m))}if(zt){for(H=0,_=Gt.length;H<_;H++)Ft[ft]=ht,Ft[ft+1]=ht+1,Ft[ft+2]=ht+2,ft+=3,Dt[dt]=ht,Dt[dt+1]=ht+1,Dt[dt+2]=ht,Dt[dt+3]=ht+2,Dt[dt+4]=ht+1,Dt[dt+5]=ht+2,dt+=6,ht+=3;fr.bindBuffer(fr.ELEMENT_ARRAY_BUFFER,p.__webglFaceBuffer),fr.bufferData(fr.ELEMENT_ARRAY_BUFFER,Ft,m),fr.bindBuffer(fr.ELEMENT_ARRAY_BUFFER,p.__webglLineBuffer),fr.bufferData(fr.ELEMENT_ARRAY_BUFFER,Dt,m)}if(Lt)for(Q=0,J=Lt.length;Q<J;Q++)if((Pt=Lt[Q]).__original.needsUpdate){if(vt=0,1===Pt.size){if(void 0===Pt.boundTo||"vertices"===Pt.boundTo)for(H=0,_=Gt.length;H<_;H++)b=Wt[Gt[H]],Pt.array[vt]=Pt.value[b.a],Pt.array[vt+1]=Pt.value[b.b],Pt.array[vt+2]=Pt.value[b.c],vt+=3;else if("faces"===Pt.boundTo)for(H=0,_=Gt.length;H<_;H++)yt=Pt.value[Gt[H]],Pt.array[vt]=yt,Pt.array[vt+1]=yt,Pt.array[vt+2]=yt,vt+=3}else if(2===Pt.size){if(void 0===Pt.boundTo||"vertices"===Pt.boundTo)for(H=0,_=Gt.length;H<_;H++)b=Wt[Gt[H]],F=Pt.value[b.a],D=Pt.value[b.b],U=Pt.value[b.c],Pt.array[vt]=F.x,Pt.array[vt+1]=F.y,Pt.array[vt+2]=D.x,Pt.array[vt+3]=D.y,Pt.array[vt+4]=U.x,Pt.array[vt+5]=U.y,vt+=6;else if("faces"===Pt.boundTo)for(H=0,_=Gt.length;H<_;H++)U=D=F=yt=Pt.value[Gt[H]],Pt.array[vt]=F.x,Pt.array[vt+1]=F.y,Pt.array[vt+2]=D.x,Pt.array[vt+3]=D.y,Pt.array[vt+4]=U.x,Pt.array[vt+5]=U.y,vt+=6}else if(3===Pt.size){var Qt;if(Qt="c"===Pt.type?["r","g","b"]:["x","y","z"],void 0===Pt.boundTo||"vertices"===Pt.boundTo)for(H=0,_=Gt.length;H<_;H++)b=Wt[Gt[H]],F=Pt.value[b.a],D=Pt.value[b.b],U=Pt.value[b.c],Pt.array[vt]=F[Qt[0]],Pt.array[vt+1]=F[Qt[1]],Pt.array[vt+2]=F[Qt[2]],Pt.array[vt+3]=D[Qt[0]],Pt.array[vt+4]=D[Qt[1]],Pt.array[vt+5]=D[Qt[2]],Pt.array[vt+6]=U[Qt[0]],Pt.array[vt+7]=U[Qt[1]],Pt.array[vt+8]=U[Qt[2]],vt+=9;else if("faces"===Pt.boundTo)for(H=0,_=Gt.length;H<_;H++)U=D=F=yt=Pt.value[Gt[H]],Pt.array[vt]=F[Qt[0]],Pt.array[vt+1]=F[Qt[1]],Pt.array[vt+2]=F[Qt[2]],Pt.array[vt+3]=D[Qt[0]],Pt.array[vt+4]=D[Qt[1]],Pt.array[vt+5]=D[Qt[2]],Pt.array[vt+6]=U[Qt[0]],Pt.array[vt+7]=U[Qt[1]],Pt.array[vt+8]=U[Qt[2]],vt+=9;else if("faceVertices"===Pt.boundTo)for(H=0,_=Gt.length;H<_;H++)F=(yt=Pt.value[Gt[H]])[0],D=yt[1],U=yt[2],Pt.array[vt]=F[Qt[0]],Pt.array[vt+1]=F[Qt[1]],Pt.array[vt+2]=F[Qt[2]],Pt.array[vt+3]=D[Qt[0]],Pt.array[vt+4]=D[Qt[1]],Pt.array[vt+5]=D[Qt[2]],Pt.array[vt+6]=U[Qt[0]],Pt.array[vt+7]=U[Qt[1]],Pt.array[vt+8]=U[Qt[2]],vt+=9}else if(4===Pt.size)if(void 0===Pt.boundTo||"vertices"===Pt.boundTo)for(H=0,_=Gt.length;H<_;H++)b=Wt[Gt[H]],F=Pt.value[b.a],D=Pt.value[b.b],U=Pt.value[b.c],Pt.array[vt]=F.x,Pt.array[vt+1]=F.y,Pt.array[vt+2]=F.z,Pt.array[vt+3]=F.w,Pt.array[vt+4]=D.x,Pt.array[vt+5]=D.y,Pt.array[vt+6]=D.z,Pt.array[vt+7]=D.w,Pt.array[vt+8]=U.x,Pt.array[vt+9]=U.y,Pt.array[vt+10]=U.z,Pt.array[vt+11]=U.w,vt+=12;else if("faces"===Pt.boundTo)for(H=0,_=Gt.length;H<_;H++)U=D=F=yt=Pt.value[Gt[H]],Pt.array[vt]=F.x,Pt.array[vt+1]=F.y,Pt.array[vt+2]=F.z,Pt.array[vt+3]=F.w,Pt.array[vt+4]=D.x,Pt.array[vt+5]=D.y,Pt.array[vt+6]=D.z,Pt.array[vt+7]=D.w,Pt.array[vt+8]=U.x,Pt.array[vt+9]=U.y,Pt.array[vt+10]=U.z,Pt.array[vt+11]=U.w,vt+=12;else if("faceVertices"===Pt.boundTo)for(H=0,_=Gt.length;H<_;H++)F=(yt=Pt.value[Gt[H]])[0],D=yt[1],U=yt[2],Pt.array[vt]=F.x,Pt.array[vt+1]=F.y,Pt.array[vt+2]=F.z,Pt.array[vt+3]=F.w,Pt.array[vt+4]=D.x,Pt.array[vt+5]=D.y,Pt.array[vt+6]=D.z,Pt.array[vt+7]=D.w,Pt.array[vt+8]=U.x,Pt.array[vt+9]=U.y,Pt.array[vt+10]=U.z,Pt.array[vt+11]=U.w,vt+=12;fr.bindBuffer(fr.ARRAY_BUFFER,Pt.buffer),fr.bufferData(fr.ARRAY_BUFFER,Pt.array,m)}g&&(delete p.__inittedArrays,delete p.__colorArray,delete p.__normalArray,delete p.__tangentArray,delete p.__uvArray,delete p.__uv2Array,delete p.__faceArray,delete p.__vertexArray,delete p.__lineArray,delete p.__skinIndexArray,delete p.__skinWeightArray)}}s.verticesNeedUpdate=!1,s.morphTargetsNeedUpdate=!1,s.elementsNeedUpdate=!1,s.uvsNeedUpdate=!1,s.normalsNeedUpdate=!1,s.colorsNeedUpdate=!1,s.tangentsNeedUpdate=!1,s.buffersNeedUpdate=!1,a.attributes&&lr(a)}else if(e instanceof THREE.Line){if(o=(a=er(e,s)).attributes&&hr(a),s.verticesNeedUpdate||s.colorsNeedUpdate||s.lineDistancesNeedUpdate||o){var Jt,$t,te,ee,re,ie,ne,oe,ae,se,he,le,ce=fr.DYNAMIC_DRAW,ue=s.vertices,fe=s.colors,Ee=s.lineDistances,pe=ue.length,de=fe.length,me=Ee.length,ge=s.__vertexArray,Te=s.__colorArray,ve=s.__lineDistanceArray,ye=s.colorsNeedUpdate,Re=s.lineDistancesNeedUpdate,xe=s.__webglCustomAttributesList;if(s.verticesNeedUpdate){for(Jt=0;Jt<pe;Jt++)ee=ue[Jt],ge[re=3*Jt]=ee.x,ge[re+1]=ee.y,ge[re+2]=ee.z;fr.bindBuffer(fr.ARRAY_BUFFER,s.__webglVertexBuffer),fr.bufferData(fr.ARRAY_BUFFER,ge,ce)}if(ye){for($t=0;$t<de;$t++)ie=fe[$t],Te[re=3*$t]=ie.r,Te[re+1]=ie.g,Te[re+2]=ie.b;fr.bindBuffer(fr.ARRAY_BUFFER,s.__webglColorBuffer),fr.bufferData(fr.ARRAY_BUFFER,Te,ce)}if(Re){for(te=0;te<me;te++)ve[te]=Ee[te];fr.bindBuffer(fr.ARRAY_BUFFER,s.__webglLineDistanceBuffer),fr.bufferData(fr.ARRAY_BUFFER,ve,ce)}if(xe)for(ne=0,oe=xe.length;ne<oe;ne++)if((le=xe[ne]).needsUpdate&&(void 0===le.boundTo||"vertices"===le.boundTo)){if(re=0,se=le.value.length,1===le.size)for(ae=0;ae<se;ae++)le.array[ae]=le.value[ae];else if(2===le.size)for(ae=0;ae<se;ae++)he=le.value[ae],le.array[re]=he.x,le.array[re+1]=he.y,re+=2;else if(3===le.size)if("c"===le.type)for(ae=0;ae<se;ae++)he=le.value[ae],le.array[re]=he.r,le.array[re+1]=he.g,le.array[re+2]=he.b,re+=3;else for(ae=0;ae<se;ae++)he=le.value[ae],le.array[re]=he.x,le.array[re+1]=he.y,le.array[re+2]=he.z,re+=3;else if(4===le.size)for(ae=0;ae<se;ae++)he=le.value[ae],le.array[re]=he.x,le.array[re+1]=he.y,le.array[re+2]=he.z,le.array[re+3]=he.w,re+=4;fr.bindBuffer(fr.ARRAY_BUFFER,le.buffer),fr.bufferData(fr.ARRAY_BUFFER,le.array,ce)}}s.verticesNeedUpdate=!1,s.colorsNeedUpdate=!1,s.lineDistancesNeedUpdate=!1,a.attributes&&lr(a)}else if(e instanceof THREE.PointCloud){if(o=(a=er(e,s)).attributes&&hr(a),s.verticesNeedUpdate||s.colorsNeedUpdate||e.sortParticles||o){var He,_e,be,we,Me,Se,Ce,Ae,Le,Pe,Fe,De,Ue=fr.DYNAMIC_DRAW,ze=s.vertices,Ve=ze.length,Be=s.colors,ke=Be.length,Ne=s.__vertexArray,Oe=s.__colorArray,Ie=s.__sortArray,Ge=s.verticesNeedUpdate,We=s.colorsNeedUpdate,je=s.__webglCustomAttributesList;if(e.sortParticles){for(mr.copy(dr),mr.multiply(e.matrixWorld),He=0;He<Ve;He++)be=ze[He],gr.copy(be),gr.applyProjection(mr),Ie[He]=[gr.z,He];for(Ie.sort(or),He=0;He<Ve;He++)be=ze[Ie[He][1]],Ne[we=3*He]=be.x,Ne[we+1]=be.y,Ne[we+2]=be.z;for(_e=0;_e<ke;_e++)we=3*_e,Se=Be[Ie[_e][1]],Oe[we]=Se.r,Oe[we+1]=Se.g,Oe[we+2]=Se.b;if(je)for(Ce=0,Ae=je.length;Ce<Ae;Ce++)if(void 0===(De=je[Ce]).boundTo||"vertices"===De.boundTo)if(we=0,Pe=De.value.length,1===De.size)for(Le=0;Le<Pe;Le++)Me=Ie[Le][1],De.array[Le]=De.value[Me];else if(2===De.size)for(Le=0;Le<Pe;Le++)Me=Ie[Le][1],Fe=De.value[Me],De.array[we]=Fe.x,De.array[we+1]=Fe.y,we+=2;else if(3===De.size)if("c"===De.type)for(Le=0;Le<Pe;Le++)Me=Ie[Le][1],Fe=De.value[Me],De.array[we]=Fe.r,De.array[we+1]=Fe.g,De.array[we+2]=Fe.b,we+=3;else for(Le=0;Le<Pe;Le++)Me=Ie[Le][1],Fe=De.value[Me],De.array[we]=Fe.x,De.array[we+1]=Fe.y,De.array[we+2]=Fe.z,we+=3;else if(4===De.size)for(Le=0;Le<Pe;Le++)Me=Ie[Le][1],Fe=De.value[Me],De.array[we]=Fe.x,De.array[we+1]=Fe.y,De.array[we+2]=Fe.z,De.array[we+3]=Fe.w,we+=4}else{if(Ge)for(He=0;He<Ve;He++)be=ze[He],Ne[we=3*He]=be.x,Ne[we+1]=be.y,Ne[we+2]=be.z;if(We)for(_e=0;_e<ke;_e++)Se=Be[_e],Oe[we=3*_e]=Se.r,Oe[we+1]=Se.g,Oe[we+2]=Se.b;if(je)for(Ce=0,Ae=je.length;Ce<Ae;Ce++)if((De=je[Ce]).needsUpdate&&(void 0===De.boundTo||"vertices"===De.boundTo))if(Pe=De.value.length,we=0,1===De.size)for(Le=0;Le<Pe;Le++)De.array[Le]=De.value[Le];else if(2===De.size)for(Le=0;Le<Pe;Le++)Fe=De.value[Le],De.array[we]=Fe.x,De.array[we+1]=Fe.y,we+=2;else if(3===De.size)if("c"===De.type)for(Le=0;Le<Pe;Le++)Fe=De.value[Le],De.array[we]=Fe.r,De.array[we+1]=Fe.g,De.array[we+2]=Fe.b,we+=3;else for(Le=0;Le<Pe;Le++)Fe=De.value[Le],De.array[we]=Fe.x,De.array[we+1]=Fe.y,De.array[we+2]=Fe.z,we+=3;else if(4===De.size)for(Le=0;Le<Pe;Le++)Fe=De.value[Le],De.array[we]=Fe.x,De.array[we+1]=Fe.y,De.array[we+2]=Fe.z,De.array[we+3]=Fe.w,we+=4}if((Ge||e.sortParticles)&&(fr.bindBuffer(fr.ARRAY_BUFFER,s.__webglVertexBuffer),fr.bufferData(fr.ARRAY_BUFFER,Ne,Ue)),(We||e.sortParticles)&&(fr.bindBuffer(fr.ARRAY_BUFFER,s.__webglColorBuffer),fr.bufferData(fr.ARRAY_BUFFER,Oe,Ue)),je
)for(Ce=0,Ae=je.length;Ce<Ae;Ce++)((De=je[Ce]).needsUpdate||e.sortParticles)&&(fr.bindBuffer(fr.ARRAY_BUFFER,De.buffer),fr.bufferData(fr.ARRAY_BUFFER,De.array,Ue))}s.verticesNeedUpdate=!1,s.colorsNeedUpdate=!1,a.attributes&&lr(a)}for(var Xe=0,Ye=i.length;Xe<Ye;Xe++){var qe=i[Xe],Ke=qe,Ze=Ke.object,Qe=Ke.buffer,Je=Ze.geometry,$e=Ze.material;$e instanceof THREE.MeshFaceMaterial?($e=$e.materials[Je instanceof THREE.BufferGeometry?0:Qe.materialIndex]).transparent?(Ke.material=$e,ur.push(Ke)):(Ke.material=$e,cr.push(Ke)):$e&&($e.transparent?(Ke.material=$e,ur.push(Ke)):(Ke.material=$e,cr.push(Ke))),(qe.render=!0)===Er.sortObjects&&(null!==e.renderDepth?qe.z=e.renderDepth:(gr.setFromMatrixPosition(e.matrixWorld),gr.applyProjection(dr),qe.z=gr.z))}}for(Xe=0,Ye=e.children.length;Xe<Ye;Xe++)ar(t,e.children[Xe],r)}}function g(t,e,r){if(0!==t.length)for(var i=0,n=t.length;i<n;i++)J=Z=null,Q=B=N=k=nt=it=O=-1,Tt=!0,t[i].render(e,r,Et,pt),J=Z=null,Q=B=N=k=nt=it=O=-1,Tt=!0}function T(t,e,r,i,n,o){for(var a,s,h,l=t.length-1;-1!==l;l--){if(s=(a=t[l]).object,h=a.buffer,x(s,e),o)a=o;else{if(!(a=a.material))continue;n&&Er.setBlending(a.blending,a.blendEquation,a.blendSrc,a.blendDst),Er.setDepthTest(a.depthTest),Er.setDepthWrite(a.depthWrite),_(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)}Er.setMaterialFaces(a),h instanceof THREE.BufferGeometry?Er.renderBufferDirect(e,r,i,a,h,s):Er.renderBuffer(e,r,i,a,h,s)}}function v(t,e,r,i,n,o,a){for(var s,h,l=0,c=t.length;l<c;l++)if((h=(s=t[l]).object).visible){if(a)s=a;else{if(!(s=s[e]))continue;o&&Er.setBlending(s.blending,s.blendEquation,s.blendSrc,s.blendDst),Er.setDepthTest(s.depthTest),Er.setDepthWrite(s.depthWrite),_(s.polygonOffset,s.polygonOffsetFactor,s.polygonOffsetUnits)}Er.renderImmediateObject(r,i,n,s,h)}}function y(t){var e=t.object.material;e.transparent?(t.transparent=e,t.opaque=null):(t.opaque=e,t.transparent=null)}function sr(t,e,r){var i,n=!1;i=e.material,(void 0===r.geometryGroups||r.groupsNeedUpdate)&&(delete t.__webglObjects[e.id],r.makeGroups(i instanceof THREE.MeshFaceMaterial,U?4294967296:65535),r.groupsNeedUpdate=!1);for(var o=0,a=r.geometryGroupsList.length;o<a;o++){if((i=r.geometryGroupsList[o]).__webglVertexBuffer)n=!1;else{(n=i).__webglVertexBuffer=fr.createBuffer(),n.__webglNormalBuffer=fr.createBuffer(),n.__webglTangentBuffer=fr.createBuffer(),n.__webglColorBuffer=fr.createBuffer(),n.__webglUVBuffer=fr.createBuffer(),n.__webglUV2Buffer=fr.createBuffer(),n.__webglSkinIndicesBuffer=fr.createBuffer(),n.__webglSkinWeightsBuffer=fr.createBuffer(),n.__webglFaceBuffer=fr.createBuffer(),n.__webglLineBuffer=fr.createBuffer();var s=void 0,h=void 0;if(n.numMorphTargets)for(n.__webglMorphTargetsBuffers=[],s=0,h=n.numMorphTargets;s<h;s++)n.__webglMorphTargetsBuffers.push(fr.createBuffer());if(n.numMorphNormals)for(n.__webglMorphNormalsBuffers=[],s=0,h=n.numMorphNormals;s<h;s++)n.__webglMorphNormalsBuffers.push(fr.createBuffer());Er.info.memory.geometries++,tr(i,e),r.verticesNeedUpdate=!0,r.morphTargetsNeedUpdate=!0,r.elementsNeedUpdate=!0,r.uvsNeedUpdate=!0,r.normalsNeedUpdate=!0,r.tangentsNeedUpdate=!0,n=r.colorsNeedUpdate=!0}(n||void 0===e.__webglActive)&&l(t.__webglObjects,i,e)}e.__webglActive=!0}function l(t,e,r){var i=r.id;t[i]=t[i]||[],t[i].push({id:i,buffer:e,object:r,material:null,z:0})}function hr(t){for(var e in t.attributes)if(t.attributes[e].needsUpdate)return!0;return!1}function lr(t){for(var e in t.attributes)t.attributes[e].needsUpdate=!1}function h(t,e){if(t instanceof THREE.Mesh||t instanceof THREE.PointCloud||t instanceof THREE.Line)delete e.__webglObjects[t.id];else if(t instanceof THREE.ImmediateRenderObject||t.immediateRenderCallback)for(var r=e.__webglObjectsImmediate,i=r.length-1;0<=i;i--)r[i].object===t&&r.splice(i,1);delete t.__webglActive}function R(t,e,r,i,n){$=0,i.needsUpdate&&(i.program&&Vt(i),Er.initMaterial(i,e,r,n),i.needsUpdate=!1),i.morphTargets&&!n.__webglMorphTargetInfluences&&(n.__webglMorphTargetInfluences=new Float32Array(Er.maxMorphTargets));var o=!1,a=!1,s=!1,h=i.program,l=h.uniforms,c=i.__webglShader.uniforms;if(h.id!==Z&&(fr.useProgram(h.program),Z=h.id,s=a=o=!0),i.id!==Q&&(-1===Q&&(s=!0),Q=i.id,a=!0),(o||t!==J)&&(fr.uniformMatrix4fv(l.projectionMatrix,!1,t.projectionMatrix.elements),K&&fr.uniform1f(l.logDepthBufFC,2/(Math.log(t.far+1)/Math.LN2)),t!==J&&(J=t),(i instanceof THREE.ShaderMaterial||i instanceof THREE.MeshPhongMaterial||i.envMap)&&null!==l.cameraPosition&&(gr.setFromMatrixPosition(t.matrixWorld),fr.uniform3f(l.cameraPosition,gr.x,gr.y,gr.z)),(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.ShaderMaterial||i.skinning)&&null!==l.viewMatrix&&fr.uniformMatrix4fv(l.viewMatrix,!1,t.matrixWorldInverse.elements)),i.skinning&&(n.bindMatrix&&null!==l.bindMatrix&&fr.uniformMatrix4fv(l.bindMatrix,!1,n.bindMatrix.elements),n.bindMatrixInverse&&null!==l.bindMatrixInverse&&fr.uniformMatrix4fv(l.bindMatrixInverse,!1,n.bindMatrixInverse.elements),bt&&n.skeleton&&n.skeleton.useVertexTexture?(null!==l.boneTexture&&(o=G(),fr.uniform1i(l.boneTexture,o),Er.setTexture(n.skeleton.boneTexture,o)),null!==l.boneTextureWidth&&fr.uniform1i(l.boneTextureWidth,n.skeleton.boneTextureWidth),null!==l.boneTextureHeight&&fr.uniform1i(l.boneTextureHeight,n.skeleton.boneTextureHeight)):n.skeleton&&n.skeleton.boneMatrices&&null!==l.boneGlobalMatrices&&fr.uniformMatrix4fv(l.boneGlobalMatrices,!1,n.skeleton.boneMatrices)),a){if(r&&i.fog&&(c.fogColor.value=r.color,r instanceof THREE.Fog?(c.fogNear.value=r.near,c.fogFar.value=r.far):r instanceof THREE.FogExp2&&(c.fogDensity.value=r.density)),i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i.lights){if(Tt){s=!0;var u,f,E,p,d=o=0,m=0,g=vt,T=g.directional.colors,v=g.directional.positions,y=g.point.colors,R=g.point.positions,x=g.point.distances,H=g.spot.colors,_=g.spot.positions,b=g.spot.distances,w=g.spot.directions,M=g.spot.anglesCos,S=g.spot.exponents,C=g.hemi.skyColors,A=g.hemi.groundColors,L=g.hemi.positions,P=0,F=0,D=0,U=0,z=0,V=0,B=0,k=0,N=u=0;for(r=p=N=0,a=e.length;r<a;r++)(u=e[r]).onlyShadow||(f=u.color,E=u.intensity,p=u.distance,u instanceof THREE.AmbientLight?u.visible&&(Er.gammaInput?(o+=f.r*f.r,d+=f.g*f.g,m+=f.b*f.b):(o+=f.r,d+=f.g,m+=f.b)):u instanceof THREE.DirectionalLight?(z+=1,u.visible&&(gt.setFromMatrixPosition(u.matrixWorld),gr.setFromMatrixPosition(u.target.matrixWorld),gt.sub(gr),gt.normalize(),v[u=3*P]=gt.x,v[u+1]=gt.y,v[u+2]=gt.z,Er.gammaInput?W(T,u,f,E*E):j(T,u,f,E),P+=1)):u instanceof THREE.PointLight?(V+=1,u.visible&&(N=3*F,Er.gammaInput?W(y,N,f,E*E):j(y,N,f,E),gr.setFromMatrixPosition(u.matrixWorld),R[N]=gr.x,R[N+1]=gr.y,R[N+2]=gr.z,x[F]=p,F+=1)):u instanceof THREE.SpotLight?(B+=1,u.visible&&(N=3*D,Er.gammaInput?W(H,N,f,E*E):j(H,N,f,E),gr.setFromMatrixPosition(u.matrixWorld),_[N]=gr.x,_[N+1]=gr.y,_[N+2]=gr.z,b[D]=p,gt.copy(gr),gr.setFromMatrixPosition(u.target.matrixWorld),gt.sub(gr),gt.normalize(),w[N]=gt.x,w[N+1]=gt.y,w[N+2]=gt.z,M[D]=Math.cos(u.angle),S[D]=u.exponent,D+=1)):u instanceof THREE.HemisphereLight&&(k+=1,u.visible&&(gt.setFromMatrixPosition(u.matrixWorld),gt.normalize(),L[p=3*U]=gt.x,L[p+1]=gt.y,L[p+2]=gt.z,f=u.color,u=u.groundColor,Er.gammaInput?(W(C,p,f,E*=E),W(A,p,u,E)):(j(C,p,f,E),j(A,p,u,E)),U+=1)));for(r=3*P,a=Math.max(T.length,3*z);r<a;r++)T[r]=0;for(r=3*F,a=Math.max(y.length,3*V);r<a;r++)y[r]=0;for(r=3*D,a=Math.max(H.length,3*B);r<a;r++)H[r]=0;for(r=3*U,a=Math.max(C.length,3*k);r<a;r++)C[r]=0;for(r=3*U,a=Math.max(A.length,3*k);r<a;r++)A[r]=0;g.directional.length=P,g.point.length=F,g.spot.length=D,g.hemi.length=U,g.ambient[0]=o,g.ambient[1]=d,g.ambient[2]=m,Tt=!1}s?(s=vt,c.ambientLightColor.value=s.ambient,c.directionalLightColor.value=s.directional.colors,c.directionalLightDirection.value=s.directional.positions,c.pointLightColor.value=s.point.colors,c.pointLightPosition.value=s.point.positions,c.pointLightDistance.value=s.point.distances,c.spotLightColor.value=s.spot.colors,c.spotLightPosition.value=s.spot.positions,c.spotLightDistance.value=s.spot.distances,c.spotLightDirection.value=s.spot.directions,c.spotLightAngleCos.value=s.spot.anglesCos,c.spotLightExponent.value=s.spot.exponents,c.hemisphereLightSkyColor.value=s.hemi.skyColors,c.hemisphereLightGroundColor.value=s.hemi.groundColors,c.hemisphereLightDirection.value=s.hemi.positions,I(c,!0)):I(c,!1)}var O;if(i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshPhongMaterial)c.opacity.value=i.opacity,Er.gammaInput?c.diffuse.value.copyGammaToLinear(i.color):c.diffuse.value=i.color,c.map.value=i.map,c.lightMap.value=i.lightMap,c.specularMap.value=i.specularMap,c.alphaMap.value=i.alphaMap,i.bumpMap&&(c.bumpMap.value=i.bumpMap,c.bumpScale.value=i.bumpScale),i.normalMap&&(c.normalMap.value=i.normalMap,c.normalScale.value.copy(i.normalScale)),i.map?O=i.map:i.specularMap?O=i.specularMap:i.normalMap?O=i.normalMap:i.bumpMap?O=i.bumpMap:i.alphaMap&&(O=i.alphaMap),void 0!==O&&(s=O.offset,O=O.repeat,c.offsetRepeat.value.set(s.x,s.y,O.x,O.y)),c.envMap.value=i.envMap,c.flipEnvMap.value=i.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,c.reflectivity.value=i.reflectivity,c.refractionRatio.value=i.refractionRatio,c.combine.value=i.combine,c.useRefract.value=i.envMap&&i.envMap.mapping instanceof THREE.CubeRefractionMapping;if(i instanceof THREE.LineBasicMaterial?(c.diffuse.value=i.color,c.opacity.value=i.opacity):i instanceof THREE.LineDashedMaterial?(c.diffuse.value=i.color,c.opacity.value=i.opacity,c.dashSize.value=i.dashSize,c.totalSize.value=i.dashSize+i.gapSize,c.scale.value=i.scale):i instanceof THREE.PointCloudMaterial?(c.psColor.value=i.color,c.opacity.value=i.opacity,c.size.value=i.size,c.scale.value=q.height/2,c.map.value=i.map):i instanceof THREE.MeshPhongMaterial?(c.shininess.value=i.shininess,Er.gammaInput?(c.ambient.value.copyGammaToLinear(i.ambient),c.emissive.value.copyGammaToLinear(i.emissive),c.specular.value.copyGammaToLinear(i.specular)):(c.ambient.value=i.ambient,c.emissive.value=i.emissive,c.specular.value=i.specular),i.wrapAround&&c.wrapRGB.value.copy(i.wrapRGB)):i instanceof THREE.MeshLambertMaterial?(Er.gammaInput?(c.ambient.value.copyGammaToLinear(i.ambient),c.emissive.value.copyGammaToLinear(i.emissive)):(c.ambient.value=i.ambient,c.emissive.value=i.emissive),i.wrapAround&&c.wrapRGB.value.copy(i.wrapRGB)):i instanceof THREE.MeshDepthMaterial?(c.mNear.value=t.near,c.mFar.value=t.far,c.opacity.value=i.opacity):i instanceof THREE.MeshNormalMaterial&&(c.opacity.value=i.opacity),n.receiveShadow&&!i._shadowPass&&c.shadowMatrix)for(O=t=0,s=e.length;O<s;O++)(r=e[O]).castShadow&&(r instanceof THREE.SpotLight||r instanceof THREE.DirectionalLight&&!r.shadowCascade)&&(c.shadowMap.value[t]=r.shadowMap,c.shadowMapSize.value[t]=r.shadowMapSize,c.shadowMatrix.value[t]=r.shadowMatrix,c.shadowDarkness.value[t]=r.shadowDarkness,c.shadowBias.value[t]=r.shadowBias,t++);for(e=i.uniformsList,i=0,c=e.length;i<c;i++)if(!1!==(t=e[i][0]).needsUpdate)switch(r=t.type,s=t.value,O=e[i][1],r){case"1i":fr.uniform1i(O,s);break;case"1f":fr.uniform1f(O,s);break;case"2f":fr.uniform2f(O,s[0],s[1]);break;case"3f":fr.uniform3f(O,s[0],s[1],s[2]);break;case"4f":fr.uniform4f(O,s[0],s[1],s[2],s[3]);break;case"1iv":fr.uniform1iv(O,s);break;case"3iv":fr.uniform3iv(O,s);break;case"1fv":fr.uniform1fv(O,s);break;case"2fv":fr.uniform2fv(O,s);break;case"3fv":fr.uniform3fv(O,s);break;case"4fv":fr.uniform4fv(O,s);break;case"Matrix3fv":fr.uniformMatrix3fv(O,!1,s);break;case"Matrix4fv":fr.uniformMatrix4fv(O,!1,s);break;case"i":fr.uniform1i(O,s);break;case"f":fr.uniform1f(O,s);break;case"v2":fr.uniform2f(O,s.x,s.y);break;case"v3":fr.uniform3f(O,s.x,s.y,s.z);break;case"v4":fr.uniform4f(O,s.x,s.y,s.z,s.w);break;case"c":fr.uniform3f(O,s.r,s.g,s.b);break;case"iv1":fr.uniform1iv(O,s);break;case"iv":fr.uniform3iv(O,s);break;case"fv1":fr.uniform1fv(O,s);break;case"fv":fr.uniform3fv(O,s);break;case"v2v":for(void 0===t._array&&(t._array=new Float32Array(2*s.length)),r=0,a=s.length;r<a;r++)o=2*r,t._array[o]=s[r].x,t._array[o+1]=s[r].y;fr.uniform2fv(O,t._array);break;case"v3v":for(void 0===t._array&&(t._array=new Float32Array(3*s.length)),r=0,a=s.length;r<a;r++)o=3*r,t._array[o]=s[r].x,t._array[o+1]=s[r].y,t._array[o+2]=s[r].z;fr.uniform3fv(O,t._array);break;case"v4v":for(void 0===t._array&&(t._array=new Float32Array(4*s.length)),r=0,a=s.length;r<a;r++)o=4*r,t._array[o]=s[r].x,t._array[o+1]=s[r].y,t._array[o+2]=s[r].z,t._array[o+3]=s[r].w;fr.uniform4fv(O,t._array);break;case"m3":fr.uniformMatrix3fv(O,!1,s.elements);break;case"m3v":for(void 0===t._array&&(t._array=new Float32Array(9*s.length)),r=0,a=s.length;r<a;r++)s[r].flattenToArrayOffset(t._array,9*r);fr.uniformMatrix3fv(O,!1,t._array);break;case"m4":fr.uniformMatrix4fv(O,!1,s.elements);break;case"m4v":for(void 0===t._array&&(t._array=new Float32Array(16*s.length)),r=0,a=s.length;r<a;r++)s[r].flattenToArrayOffset(t._array,16*r);fr.uniformMatrix4fv(O,!1,t._array);break;case"t":if(o=s,s=G(),fr.uniform1i(O,s),!o)continue;if(o instanceof THREE.CubeTexture||o.image instanceof Array&&6===o.image.length){if(O=s,6===(t=o).image.length)if(t.needsUpdate){for(t.image.__webglTextureCube||(t.addEventListener("dispose",Ft),t.image.__webglTextureCube=fr.createTexture(),Er.info.memory.textures++),fr.activeTexture(fr.TEXTURE0+O),fr.bindTexture(fr.TEXTURE_CUBE_MAP,t.image.__webglTextureCube),fr.pixelStorei(fr.UNPACK_FLIP_Y_WEBGL,t.flipY),O=t instanceof THREE.CompressedTexture,s=[],r=0;r<6;r++)Er.autoScaleCubemaps&&!O?(a=s,o=r,d=t.image[r],g=xt,d.width<=g&&d.height<=g||(T=Math.max(d.width,d.height),m=Math.floor(d.width*g/T),g=Math.floor(d.height*g/T),(T=document.createElement("canvas")).width=m,T.height=g,T.getContext("2d").drawImage(d,0,0,d.width,d.height,0,0,m,g),d=T),a[o]=d):s[r]=t.image[r];for(r=s[0],a=THREE.Math.isPowerOfTwo(r.width)&&THREE.Math.isPowerOfTwo(r.height),o=Y(t.format),d=Y(t.type),X(fr.TEXTURE_CUBE_MAP,t,a),r=0;r<6;r++)if(O)for(T=0,v=(g=s[r].mipmaps).length;T<v;T++)m=g[T],t.format!==THREE.RGBAFormat?fr.compressedTexImage2D(fr.TEXTURE_CUBE_MAP_POSITIVE_X+r,T,o,m.width,m.height,0,m.data):fr.texImage2D(fr.TEXTURE_CUBE_MAP_POSITIVE_X+r,T,o,m.width,m.height,0,o,d,m.data);else fr.texImage2D(fr.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,o,o,d,s[r]);t.generateMipmaps&&a&&fr.generateMipmap(fr.TEXTURE_CUBE_MAP),t.needsUpdate=!1,t.onUpdate&&t.onUpdate()}else fr.activeTexture(fr.TEXTURE0+O),fr.bindTexture(fr.TEXTURE_CUBE_MAP,t.image.__webglTextureCube)}else o instanceof THREE.WebGLRenderTargetCube?(t=o,fr.activeTexture(fr.TEXTURE0+s),fr.bindTexture(fr.TEXTURE_CUBE_MAP,t.__webglTexture)):Er.setTexture(o,s);break;case"tv":for(void 0===t._array&&(t._array=[]),r=0,a=t.value.length;r<a;r++)t._array[r]=G();for(fr.uniform1iv(O,t._array),r=0,a=t.value.length;r<a;r++)o=t.value[r],s=t._array[r],o&&Er.setTexture(o,s);break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+r)}}return fr.uniformMatrix4fv(l.modelViewMatrix,!1,n._modelViewMatrix.elements),l.normalMatrix&&fr.uniformMatrix3fv(l.normalMatrix,!1,n._normalMatrix.elements),null!==l.modelMatrix&&fr.uniformMatrix4fv(l.modelMatrix,!1,n.matrixWorld.elements),h}function I(t,e){t.ambientLightColor.needsUpdate=e,t.directionalLightColor.needsUpdate=e,t.directionalLightDirection.needsUpdate=e,t.pointLightColor.needsUpdate=e,t.pointLightPosition.needsUpdate=e,t.pointLightDistance.needsUpdate=e,t.spotLightColor.needsUpdate=e,t.spotLightPosition.needsUpdate=e,t.spotLightDistance.needsUpdate=e,t.spotLightDirection.needsUpdate=e,t.spotLightAngleCos.needsUpdate=e,t.spotLightExponent.needsUpdate=e,t.hemisphereLightSkyColor.needsUpdate=e,t.hemisphereLightGroundColor.needsUpdate=e,t.hemisphereLightDirection.needsUpdate=e}function G(){var t=$;return yt<=t&&console.warn("WebGLRenderer: trying to use "+t+" texture units while this GPU supports only "+yt),$+=1,t}function x(t,e){t._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,t.matrixWorld),t._normalMatrix.getNormalMatrix(t._modelViewMatrix)}function W(t,e,r,i){t[e]=r.r*r.r*i,t[e+1]=r.g*r.g*i,t[e+2]=r.b*r.b*i}function j(t,e,r,i){t[e]=r.r*i,t[e+1]=r.g*i,t[e+2]=r.b*i}function H(t){t!==ht&&(fr.lineWidth(t),ht=t)}function _(t,e,r){ot!==t&&(t?fr.enable(fr.POLYGON_OFFSET_FILL):fr.disable(fr.POLYGON_OFFSET_FILL),ot=t),!t||at===e&&st===r||(fr.polygonOffset(e,r),at=e,st=r)}function X(t,e,r){r?(fr.texParameteri(t,fr.TEXTURE_WRAP_S,Y(e.wrapS)),fr.texParameteri(t,fr.TEXTURE_WRAP_T,Y(e.wrapT)),fr.texParameteri(t,fr.TEXTURE_MAG_FILTER,Y(e.magFilter)),fr.texParameteri(t,fr.TEXTURE_MIN_FILTER,Y(e.minFilter))):(fr.texParameteri(t,fr.TEXTURE_WRAP_S,fr.CLAMP_TO_EDGE),fr.texParameteri(t,fr.TEXTURE_WRAP_T,fr.CLAMP_TO_EDGE),fr.texParameteri(t,fr.TEXTURE_MAG_FILTER,i(e.magFilter)),fr.texParameteri(t,fr.TEXTURE_MIN_FILTER,i(e.minFilter))),F&&e.type!==THREE.FloatType&&(1<e.anisotropy||e.__oldAnisotropy)&&(fr.texParameterf(t,F.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e.anisotropy,Ht)),e.__oldAnisotropy=e.anisotropy)}function c(t,e){fr.bindRenderbuffer(fr.RENDERBUFFER,t),e.depthBuffer&&!e.stencilBuffer?(fr.renderbufferStorage(fr.RENDERBUFFER,fr.DEPTH_COMPONENT16,e.width,e.height),fr.framebufferRenderbuffer(fr.FRAMEBUFFER,fr.DEPTH_ATTACHMENT,fr.RENDERBUFFER,t)):e.depthBuffer&&e.stencilBuffer?(fr.renderbufferStorage(fr.RENDERBUFFER,fr.DEPTH_STENCIL,e.width,e.height),fr.framebufferRenderbuffer(fr.FRAMEBUFFER,fr.DEPTH_STENCIL_ATTACHMENT,fr.RENDERBUFFER,t)):fr.renderbufferStorage(fr.RENDERBUFFER,fr.RGBA4,e.width,e.height)}function b(t){t instanceof THREE.WebGLRenderTargetCube?(fr.bindTexture(fr.TEXTURE_CUBE_MAP,t.__webglTexture),fr.generateMipmap(fr.TEXTURE_CUBE_MAP),fr.bindTexture(fr.TEXTURE_CUBE_MAP,null)):(fr.bindTexture(fr.TEXTURE_2D,t.__webglTexture),fr.generateMipmap(fr.TEXTURE_2D),fr.bindTexture(fr.TEXTURE_2D,null))}function i(t){return t===THREE.NearestFilter||t===THREE.NearestMipMapNearestFilter||t===THREE.NearestMipMapLinearFilter?fr.NEAREST:fr.LINEAR}function Y(t){if(t===THREE.RepeatWrapping)return fr.REPEAT;if(t===THREE.ClampToEdgeWrapping)return fr.CLAMP_TO_EDGE;if(t===THREE.MirroredRepeatWrapping)return fr.MIRRORED_REPEAT;if(t===THREE.NearestFilter)return fr.NEAREST;if(t===THREE.NearestMipMapNearestFilter)return fr.NEAREST_MIPMAP_NEAREST;if(t===THREE.NearestMipMapLinearFilter)return fr.NEAREST_MIPMAP_LINEAR;if(t===THREE.LinearFilter)return fr.LINEAR;if(t===THREE.LinearMipMapNearestFilter)return fr.LINEAR_MIPMAP_NEAREST;if(t===THREE.LinearMipMapLinearFilter)return fr.LINEAR_MIPMAP_LINEAR;if(t===THREE.UnsignedByteType)return fr.UNSIGNED_BYTE;if(t===THREE.UnsignedShort4444Type)return fr.UNSIGNED_SHORT_4_4_4_4;if(t===THREE.UnsignedShort5551Type)return fr.UNSIGNED_SHORT_5_5_5_1;if(t===THREE.UnsignedShort565Type)return fr.UNSIGNED_SHORT_5_6_5;if(t===THREE.ByteType)return fr.BYTE;if(t===THREE.ShortType)return fr.SHORT;if(t===THREE.UnsignedShortType)return fr.UNSIGNED_SHORT;if(t===THREE.IntType)return fr.INT;if(t===THREE.UnsignedIntType)return fr.UNSIGNED_INT;if(t===THREE.FloatType)return fr.FLOAT;if(t===THREE.AlphaFormat)return fr.ALPHA;if(t===THREE.RGBFormat)return fr.RGB;if(t===THREE.RGBAFormat)return fr.RGBA;if(t===THREE.LuminanceFormat)return fr.LUMINANCE;if(t===THREE.LuminanceAlphaFormat)return fr.LUMINANCE_ALPHA;if(t===THREE.AddEquation)return fr.FUNC_ADD;if(t===THREE.SubtractEquation)return fr.FUNC_SUBTRACT;if(t===THREE.ReverseSubtractEquation)return fr.FUNC_REVERSE_SUBTRACT;if(t===THREE.ZeroFactor)return fr.ZERO;if(t===THREE.OneFactor)return fr.ONE;if(t===THREE.SrcColorFactor)return fr.SRC_COLOR;if(t===THREE.OneMinusSrcColorFactor)return fr.ONE_MINUS_SRC_COLOR;if(t===THREE.SrcAlphaFactor)return fr.SRC_ALPHA;if(t===THREE.OneMinusSrcAlphaFactor)return fr.ONE_MINUS_SRC_ALPHA;if(t===THREE.DstAlphaFactor)return fr.DST_ALPHA;if(t===THREE.OneMinusDstAlphaFactor)return fr.ONE_MINUS_DST_ALPHA;if(t===THREE.DstColorFactor)return fr.DST_COLOR;if(t===THREE.OneMinusDstColorFactor)return fr.ONE_MINUS_DST_COLOR;if(t===THREE.SrcAlphaSaturateFactor)return fr.SRC_ALPHA_SATURATE;if(void 0!==D){if(t===THREE.RGB_S3TC_DXT1_Format)return D.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===THREE.RGBA_S3TC_DXT1_Format)return D.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===THREE.RGBA_S3TC_DXT3_Format)return D.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===THREE.RGBA_S3TC_DXT5_Format)return D.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var q=void 0!==(t=t||{}).canvas?t.canvas:document.createElement("canvas"),e=void 0!==t.context?t.context:null,w=void 0!==t.precision?t.precision:"highp",r=void 0!==t.alpha&&t.alpha,n=void 0===t.depth||t.depth,o=void 0===t.stencil||t.stencil,a=void 0!==t.antialias&&t.antialias,M=void 0===t.premultipliedAlpha||t.premultipliedAlpha,S=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,K=void 0!==t.logarithmicDepthBuffer&&t.logarithmicDepthBuffer,C=new THREE.Color(0),A=0,cr=[],ur=[];this.domElement=q,this.context=null,this.devicePixelRatio=void 0!==t.devicePixelRatio?t.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.shadowMapEnabled=this.gammaOutput=this.gammaInput=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapCascade=this.shadowMapDebug=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var fr,L,P,F,D,U,Er=this,z=[],Z=null,V=null,Q=-1,B=null,J=null,$=0,k=-1,N=-1,O=-1,tt=-1,et=-1,rt=-1,it=-1,nt=-1,ot=null,at=null,st=null,ht=null,lt=0,ct=0,ut=q.width,ft=q.height,Et=0,pt=0,dt=new Uint8Array(16),mt=new Uint8Array(16),pr=new THREE.Frustum,dr=new THREE.Matrix4,mr=new THREE.Matrix4,gr=new THREE.Vector3,gt=new THREE.Vector3,Tt=!0,vt={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};!function(){try{var t={alpha:r,depth:n,stencil:o,antialias:a,premultipliedAlpha:M,preserveDrawingBuffer:S};if(null===(fr=e||q.getContext("webgl",t)||q.getContext("experimental-webgl",t)))throw"Error creating WebGL context."}catch(s){console.error(s)}L=fr.getExtension("OES_texture_float"),fr.getExtension("OES_texture_float_linear"),P=fr.getExtension("OES_standard_derivatives"),F=fr.getExtension("EXT_texture_filter_anisotropic")||fr.getExtension("MOZ_EXT_texture_filter_anisotropic")||fr.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),D=fr.getExtension("WEBGL_compressed_texture_s3tc")||fr.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||fr.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),U=fr.getExtension("OES_element_index_uint"),null===L&&console.log("THREE.WebGLRenderer: Float textures not supported."),null===P&&console.log("THREE.WebGLRenderer: Standard derivatives not supported."),null===F&&console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),null===D&&console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),null===U&&console.log("THREE.WebGLRenderer: elementindex as unsigned integer not supported."),void 0===fr.getShaderPrecisionFormat&&(fr.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),K&&fr.getExtension("EXT_frag_depth")}(),fr.clearColor(0,0,0,1),fr.clearDepth(1),fr.clearStencil(0),fr.enable(fr.DEPTH_TEST),fr.depthFunc(fr.LEQUAL),fr.frontFace(fr.CCW),fr.cullFace(fr.BACK),fr.enable(fr.CULL_FACE),fr.enable(fr.BLEND),fr.blendEquation(fr.FUNC_ADD),fr.blendFunc(fr.SRC_ALPHA,fr.ONE_MINUS_SRC_ALPHA),fr.viewport(lt,ct,ut,ft),fr.clearColor(C.r,C.g,C.b,A);var yt=(this.context=fr).getParameter(fr.MAX_TEXTURE_IMAGE_UNITS),Rt=fr.getParameter(fr.MAX_VERTEX_TEXTURE_IMAGE_UNITS);fr.getParameter(fr.MAX_TEXTURE_SIZE);var xt=fr.getParameter(fr.MAX_CUBE_MAP_TEXTURE_SIZE),Ht=F?fr.getParameter(F.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,_t=0<Rt,bt=_t&&L;D&&fr.getParameter(fr.COMPRESSED_TEXTURE_FORMATS);var wt=fr.getShaderPrecisionFormat(fr.VERTEX_SHADER,fr.HIGH_FLOAT),Mt=fr.getShaderPrecisionFormat(fr.VERTEX_SHADER,fr.MEDIUM_FLOAT);fr.getShaderPrecisionFormat(fr.VERTEX_SHADER,fr.LOW_FLOAT);var St=fr.getShaderPrecisionFormat(fr.FRAGMENT_SHADER,fr.HIGH_FLOAT),Ct=fr.getShaderPrecisionFormat(fr.FRAGMENT_SHADER,fr.MEDIUM_FLOAT);fr.getShaderPrecisionFormat(fr.FRAGMENT_SHADER,fr.LOW_FLOAT);var At=0<wt.precision&&0<St.precision,Lt=0<Mt.precision&&0<Ct.precision;"highp"!==w||At||(Lt?(w="mediump",console.warn("THREE.WebGLRenderer: highp not supported, using mediump.")):(w="lowp",console.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp."))),"mediump"!==w||Lt||(w="lowp",console.warn("THREE.WebGLRenderer: mediump not supported, using lowp.")),this.getContext=function(){return fr},this.supportsVertexTextures=function(){return _t},this.supportsFloatTextures=function(){return L},this.supportsStandardDerivatives=function(){return P},this.supportsCompressedTextureS3TC=function(){return D},this.getMaxAnisotropy=function(){return Ht},this.getPrecision=function(){return w},this.setSize=function(t,e,r){q.width=t*this.devicePixelRatio,q.height=e*this.devicePixelRatio,!1!==r&&(q.style.width=t+"px",q.style.height=e+"px"),this.setViewport(0,0,t,e)},this.setViewport=function(t,e,r,i){lt=t*this.devicePixelRatio,ct=e*this.devicePixelRatio,ut=r*this.devicePixelRatio,ft=i*this.devicePixelRatio,fr.viewport(lt,ct,ut,ft)},this.setScissor=function(t,e,r,i){fr.scissor(t*this.devicePixelRatio,e*this.devicePixelRatio,r*this.devicePixelRatio,i*this.devicePixelRatio)},this.enableScissorTest=function(t){t?fr.enable(fr.SCISSOR_TEST):fr.disable(fr.SCISSOR_TEST)},this.setClearColor=function(t,e){C.set(t),A=void 0!==e?e:1,fr.clearColor(C.r,C.g,C.b,A)},this.setClearColorHex=function(t,e){console.warn("THREE.WebGLRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(t,e)},this.getClearColor=function(){return C},this.getClearAlpha=function(){return A},this.clear=function(t,e,r){var i=0;(void 0===t||t)&&(i|=fr.COLOR_BUFFER_BIT),(void 0===e||e)&&(i|=fr.DEPTH_BUFFER_BIT),(void 0===r||r)&&(i|=fr.STENCIL_BUFFER_BIT),fr.clear(i)},this.clearColor=function(){fr.clear(fr.COLOR_BUFFER_BIT)},this.clearDepth=function(){fr.clear(fr.DEPTH_BUFFER_BIT)},this.clearStencil=function(){fr.clear(fr.STENCIL_BUFFER_BIT)},this.clearTarget=function(t,e,r,i){this.setRenderTarget(t),this.clear(e,r,i)},this.addPostPlugin=function(t){t.init(this),this.renderPluginsPost.push(t)},this.addPrePlugin=function(t){t.init(this),this.renderPluginsPre.push(t)},this.updateShadowMap=function(t,e){Q=B=nt=it=O=-1,Tt=!(Z=null),N=k=-1,Bt(t),this.shadowMapPlugin.update(t,e)};var Pt=function(t){if((t=t.target).removeEventListener("dispose",Pt),t.__webglInit=void 0,t instanceof THREE.BufferGeometry){for(var e in t=t.attributes)void 0!==t[e].buffer&&fr.deleteBuffer(t[e].buffer);Er.info.memory.geometries--}else if(void 0!==t.geometryGroups){e=0;for(var r=t.geometryGroupsList.length;e<r;e++){var i=t.geometryGroupsList[e];if(void 0!==i.numMorphTargets)for(var n=0,o=i.numMorphTargets;n<o;n++)fr.deleteBuffer(i.__webglMorphTargetsBuffers[n]);if(void 0!==i.numMorphNormals)for(n=0,o=i.numMorphNormals;n<o;n++)fr.deleteBuffer(i.__webglMorphNormalsBuffers[n]);zt(i)}}else zt(t)},Ft=function(t){(t=t.target).removeEventListener("dispose",Ft),t.image&&t.image.__webglTextureCube?fr.deleteTexture(t.image.__webglTextureCube):t.__webglInit&&(t.__webglInit=!1,fr.deleteTexture(t.__webglTexture)),Er.info.memory.textures--},Dt=function(t){if((t=t.target).removeEventListener("dispose",Dt),t&&t.__webglTexture)if(fr.deleteTexture(t.__webglTexture),t instanceof THREE.WebGLRenderTargetCube)for(var e=0;e<6;e++)fr.deleteFramebuffer(t.__webglFramebuffer[e]),fr.deleteRenderbuffer(t.__webglRenderbuffer[e]);else fr.deleteFramebuffer(t.__webglFramebuffer),fr.deleteRenderbuffer(t.__webglRenderbuffer);Er.info.memory.textures--},Ut=function(t){(t=t.target).removeEventListener("dispose",Ut),Vt(t)},zt=function(t){if(void 0!==t.__webglVertexBuffer&&fr.deleteBuffer(t.__webglVertexBuffer),void 0!==t.__webglNormalBuffer&&fr.deleteBuffer(t.__webglNormalBuffer),void 0!==t.__webglTangentBuffer&&fr.deleteBuffer(t.__webglTangentBuffer),void 0!==t.__webglColorBuffer&&fr.deleteBuffer(t.__webglColorBuffer),void 0!==t.__webglUVBuffer&&fr.deleteBuffer(t.__webglUVBuffer),void 0!==t.__webglUV2Buffer&&fr.deleteBuffer(t.__webglUV2Buffer),void 0!==t.__webglSkinIndicesBuffer&&fr.deleteBuffer(t.__webglSkinIndicesBuffer),void 0!==t.__webglSkinWeightsBuffer&&fr.deleteBuffer(t.__webglSkinWeightsBuffer),void 0!==t.__webglFaceBuffer&&fr.deleteBuffer(t.__webglFaceBuffer),void 0!==t.__webglLineBuffer&&fr.deleteBuffer(t.__webglLineBuffer),void 0!==t.__webglLineDistanceBuffer&&fr.deleteBuffer(t.__webglLineDistanceBuffer),void 0!==t.__webglCustomAttributesList)for(var e in t.__webglCustomAttributesList)fr.deleteBuffer(t.__webglCustomAttributesList[e].buffer);Er.info.memory.geometries--},Vt=function(t){var e=t.program.program;if(void 0!==e){t.program=void 0;var r,i,n=!1;for(t=0,r=z.length;t<r;t++)if((i=z[t]).program===e){i.usedTimes--,0===i.usedTimes&&(n=!0);break}if(!0===n){for(n=[],t=0,r=z.length;t<r;t++)(i=z[t]).program!==e&&n.push(i);z=n,fr.deleteProgram(e),Er.info.memory.programs--}}};this.renderBufferImmediate=function(t,e,r){if(E(),t.hasPositions&&!t.__webglVertexBuffer&&(t.__webglVertexBuffer=fr.createBuffer()),t.hasNormals&&!t.__webglNormalBuffer&&(t.__webglNormalBuffer=fr.createBuffer()),t.hasUvs&&!t.__webglUvBuffer&&(t.__webglUvBuffer=fr.createBuffer()),t.hasColors&&!t.__webglColorBuffer&&(t.__webglColorBuffer=fr.createBuffer()),t.hasPositions&&(fr.bindBuffer(fr.ARRAY_BUFFER,t.__webglVertexBuffer),fr.bufferData(fr.ARRAY_BUFFER,t.positionArray,fr.DYNAMIC_DRAW),p(e.attributes.position),fr.vertexAttribPointer(e.attributes.position,3,fr.FLOAT,!1,0,0)),t.hasNormals){if(fr.bindBuffer(fr.ARRAY_BUFFER,t.__webglNormalBuffer),r.shading===THREE.FlatShading){var i,n,o,a,s,h,l,c,u=3*t.count;for(c=0;c<u;c+=9)i=(l=t.normalArray)[c],n=l[c+1],o=l[c+2],a=l[c+3],s=l[c+4],h=l[c+5],i=(i+a+l[c+6])/3,n=(n+s+l[c+7])/3,o=(o+h+l[c+8])/3,l[c]=i,l[c+1]=n,l[c+2]=o,l[c+3]=i,l[c+4]=n,l[c+5]=o,l[c+6]=i,l[c+7]=n,l[c+8]=o}fr.bufferData(fr.ARRAY_BUFFER,t.normalArray,fr.DYNAMIC_DRAW),p(e.attributes.normal),fr.vertexAttribPointer(e.attributes.normal,3,fr.FLOAT,!1,0,0)}t.hasUvs&&r.map&&(fr.bindBuffer(fr.ARRAY_BUFFER,t.__webglUvBuffer),fr.bufferData(fr.ARRAY_BUFFER,t.uvArray,fr.DYNAMIC_DRAW),p(e.attributes.uv),fr.vertexAttribPointer(e.attributes.uv,2,fr.FLOAT,!1,0,0)),t.hasColors&&r.vertexColors!==THREE.NoColors&&(fr.bindBuffer(fr.ARRAY_BUFFER,t.__webglColorBuffer),fr.bufferData(fr.ARRAY_BUFFER,t.colorArray,fr.DYNAMIC_DRAW),p(e.attributes.color),fr.vertexAttribPointer(e.attributes.color,3,fr.FLOAT,!1,0,0)),d(),fr.drawArrays(fr.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,r,i,n,o){if(!1!==i.visible){var a=R(t,e,r,i,o);if(t=a.attributes,e=n.attributes,r=!1,(a=16777215*n.id+2*a.id+(i.wireframe?1:0))!==B&&(B=a,r=!0),r&&E(),o instanceof THREE.Mesh)if(a=e.index){var s,h;if(a.array instanceof Uint32Array?(s=fr.UNSIGNED_INT,h=4):(s=fr.UNSIGNED_SHORT,h=2),0===(n=n.offsets).length)r&&(f(i,t,e,0),fr.bindBuffer(fr.ELEMENT_ARRAY_BUFFER,a.buffer)),fr.drawElements(fr.TRIANGLES,a.array.length,s,0),Er.info.render.calls++,Er.info.render.vertices+=a.array.length,Er.info.render.faces+=a.array.length/3;else{r=!0;for(var l=0,c=n.length;l<c;l++){var u=n[l].index;r&&(f(i,t,e,u),fr.bindBuffer(fr.ELEMENT_ARRAY_BUFFER,a.buffer)),fr.drawElements(fr.TRIANGLES,n[l].count,s,n[l].start*h),Er.info.render.calls++,Er.info.render.vertices+=n[l].count,Er.info.render.faces+=n[l].count/3}}}else r&&f(i,t,e,0),i=n.attributes.position,fr.drawArrays(fr.TRIANGLES,0,i.array.length/3),Er.info.render.calls++,Er.info.render.vertices+=i.array.length/3,Er.info.render.faces+=i.array.length/9;else if(o instanceof THREE.PointCloud)r&&f(i,t,e,0),i=e.position,fr.drawArrays(fr.POINTS,0,i.array.length/3),Er.info.render.calls++,Er.info.render.points+=i.array.length/3;else if(o instanceof THREE.Line)if(o=o.type===THREE.LineStrip?fr.LINE_STRIP:fr.LINES,H(i.linewidth),a=e.index)if(a.array instanceof Uint32Array?(s=fr.UNSIGNED_INT,h=4):(s=fr.UNSIGNED_SHORT,h=2),0===(n=n.offsets).length)r&&(f(i,t,e,0),fr.bindBuffer(fr.ELEMENT_ARRAY_BUFFER,a.buffer)),fr.drawElements(o,a.array.length,s,0),Er.info.render.calls++,Er.info.render.vertices+=a.array.length;else for(1<n.length&&(r=!0),l=0,c=n.length;l<c;l++)u=n[l].index,r&&(f(i,t,e,u),fr.bindBuffer(fr.ELEMENT_ARRAY_BUFFER,a.buffer)),fr.drawElements(o,n[l].count,s,n[l].start*h),Er.info.render.calls++,
Er.info.render.vertices+=n[l].count;else r&&f(i,t,e,0),i=e.position,fr.drawArrays(o,0,i.array.length/3),Er.info.render.calls++,Er.info.render.points+=i.array.length/3}},this.renderBuffer=function(t,e,r,i,n,o){if(!1!==i.visible){var a,s;if(e=(r=R(t,e,r,i,o)).attributes,t=!1,(r=16777215*n.id+2*r.id+(i.wireframe?1:0))!==B&&(B=r,t=!0),t&&E(),!i.morphTargets&&0<=e.position)t&&(fr.bindBuffer(fr.ARRAY_BUFFER,n.__webglVertexBuffer),p(e.position),fr.vertexAttribPointer(e.position,3,fr.FLOAT,!1,0,0));else if(o.morphTargetBase){if(r=i.program.attributes,-1!==o.morphTargetBase&&0<=r.position?(fr.bindBuffer(fr.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[o.morphTargetBase]),p(r.position),fr.vertexAttribPointer(r.position,3,fr.FLOAT,!1,0,0)):0<=r.position&&(fr.bindBuffer(fr.ARRAY_BUFFER,n.__webglVertexBuffer),p(r.position),fr.vertexAttribPointer(r.position,3,fr.FLOAT,!1,0,0)),o.morphTargetForcedOrder.length){var h=0;for(s=o.morphTargetForcedOrder,a=o.morphTargetInfluences;h<i.numSupportedMorphTargets&&h<s.length;)0<=r["morphTarget"+h]&&(fr.bindBuffer(fr.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[s[h]]),p(r["morphTarget"+h]),fr.vertexAttribPointer(r["morphTarget"+h],3,fr.FLOAT,!1,0,0)),0<=r["morphNormal"+h]&&i.morphNormals&&(fr.bindBuffer(fr.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[s[h]]),p(r["morphNormal"+h]),fr.vertexAttribPointer(r["morphNormal"+h],3,fr.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[h]=a[s[h]],h++}else{s=[];var l,c=(a=o.morphTargetInfluences).length;for(l=0;l<c;l++)0<(h=a[l])&&s.push([h,l]);for(s.length>i.numSupportedMorphTargets?(s.sort(or),s.length=i.numSupportedMorphTargets):s.length>i.numSupportedMorphNormals?s.sort(or):0===s.length&&s.push([0,0]),h=0;h<i.numSupportedMorphTargets;)s[h]?(l=s[h][1],0<=r["morphTarget"+h]&&(fr.bindBuffer(fr.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[l]),p(r["morphTarget"+h]),fr.vertexAttribPointer(r["morphTarget"+h],3,fr.FLOAT,!1,0,0)),0<=r["morphNormal"+h]&&i.morphNormals&&(fr.bindBuffer(fr.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[l]),p(r["morphNormal"+h]),fr.vertexAttribPointer(r["morphNormal"+h],3,fr.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[h]=a[l]):o.__webglMorphTargetInfluences[h]=0,h++}null!==i.program.uniforms.morphTargetInfluences&&fr.uniform1fv(i.program.uniforms.morphTargetInfluences,o.__webglMorphTargetInfluences)}if(t){if(n.__webglCustomAttributesList)for(a=0,s=n.__webglCustomAttributesList.length;a<s;a++)0<=e[(r=n.__webglCustomAttributesList[a]).buffer.belongsToAttribute]&&(fr.bindBuffer(fr.ARRAY_BUFFER,r.buffer),p(e[r.buffer.belongsToAttribute]),fr.vertexAttribPointer(e[r.buffer.belongsToAttribute],r.size,fr.FLOAT,!1,0,0));0<=e.color&&(0<o.geometry.colors.length||0<o.geometry.faces.length?(fr.bindBuffer(fr.ARRAY_BUFFER,n.__webglColorBuffer),p(e.color),fr.vertexAttribPointer(e.color,3,fr.FLOAT,!1,0,0)):i.defaultAttributeValues&&fr.vertexAttrib3fv(e.color,i.defaultAttributeValues.color)),0<=e.normal&&(fr.bindBuffer(fr.ARRAY_BUFFER,n.__webglNormalBuffer),p(e.normal),fr.vertexAttribPointer(e.normal,3,fr.FLOAT,!1,0,0)),0<=e.tangent&&(fr.bindBuffer(fr.ARRAY_BUFFER,n.__webglTangentBuffer),p(e.tangent),fr.vertexAttribPointer(e.tangent,4,fr.FLOAT,!1,0,0)),0<=e.uv&&(o.geometry.faceVertexUvs[0]?(fr.bindBuffer(fr.ARRAY_BUFFER,n.__webglUVBuffer),p(e.uv),fr.vertexAttribPointer(e.uv,2,fr.FLOAT,!1,0,0)):i.defaultAttributeValues&&fr.vertexAttrib2fv(e.uv,i.defaultAttributeValues.uv)),0<=e.uv2&&(o.geometry.faceVertexUvs[1]?(fr.bindBuffer(fr.ARRAY_BUFFER,n.__webglUV2Buffer),p(e.uv2),fr.vertexAttribPointer(e.uv2,2,fr.FLOAT,!1,0,0)):i.defaultAttributeValues&&fr.vertexAttrib2fv(e.uv2,i.defaultAttributeValues.uv2)),i.skinning&&0<=e.skinIndex&&0<=e.skinWeight&&(fr.bindBuffer(fr.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),p(e.skinIndex),fr.vertexAttribPointer(e.skinIndex,4,fr.FLOAT,!1,0,0),fr.bindBuffer(fr.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),p(e.skinWeight),fr.vertexAttribPointer(e.skinWeight,4,fr.FLOAT,!1,0,0)),0<=e.lineDistance&&(fr.bindBuffer(fr.ARRAY_BUFFER,n.__webglLineDistanceBuffer),p(e.lineDistance),fr.vertexAttribPointer(e.lineDistance,1,fr.FLOAT,!1,0,0))}d(),o instanceof THREE.Mesh?(o=n.__typeArray===Uint32Array?fr.UNSIGNED_INT:fr.UNSIGNED_SHORT,i.wireframe?(H(i.wireframeLinewidth),t&&fr.bindBuffer(fr.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),fr.drawElements(fr.LINES,n.__webglLineCount,o,0)):(t&&fr.bindBuffer(fr.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),fr.drawElements(fr.TRIANGLES,n.__webglFaceCount,o,0)),Er.info.render.calls++,Er.info.render.vertices+=n.__webglFaceCount,Er.info.render.faces+=n.__webglFaceCount/3):o instanceof THREE.Line?(o=o.type===THREE.LineStrip?fr.LINE_STRIP:fr.LINES,H(i.linewidth),fr.drawArrays(o,0,n.__webglLineCount),Er.info.render.calls++):o instanceof THREE.PointCloud&&(fr.drawArrays(fr.POINTS,0,n.__webglParticleCount),Er.info.render.calls++,Er.info.render.points+=n.__webglParticleCount)}},this.render=function(t,e,r,i){function n(t){t instanceof THREE.SkinnedMesh&&t.skeleton.update();for(var e=0,r=t.children.length;e<r;e++)n(t.children[e])}if(!1==e instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var o,a,s,h,l=t.__lights,c=t.fog;for(Q=-1,(Tt=!(J=null))===t.autoUpdate&&t.updateMatrixWorld(),void 0===e.parent&&e.updateMatrixWorld(),n(t),e.matrixWorldInverse.getInverse(e.matrixWorld),dr.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),pr.setFromMatrix(dr),Bt(t),cr.length=0,ur.length=0,ar(t,t,e),!0===Er.sortObjects&&(cr.sort(u),ur.sort(m)),g(this.renderPluginsPre,t,e),Er.info.render.calls=0,Er.info.render.vertices=0,Er.info.render.faces=0,Er.info.render.points=0,this.setRenderTarget(r),(this.autoClear||i)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),i=0,o=(h=t.__webglObjectsImmediate).length;i<o;i++)(s=(a=h[i]).object).visible&&(x(s,e),y(a));t.overrideMaterial?(i=t.overrideMaterial,this.setBlending(i.blending,i.blendEquation,i.blendSrc,i.blendDst),this.setDepthTest(i.depthTest),this.setDepthWrite(i.depthWrite),_(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits),T(cr,e,l,c,!0,i),T(ur,e,l,c,!0,i),v(t.__webglObjectsImmediate,"",e,l,c,!1,i)):(i=null,this.setBlending(THREE.NoBlending),T(cr,e,l,c,!1,i),v(t.__webglObjectsImmediate,"opaque",e,l,c,!1,i),T(ur,e,l,c,!0,i),v(t.__webglObjectsImmediate,"transparent",e,l,c,!0,i)),g(this.renderPluginsPost,t,e),r&&r.generateMipmaps&&r.minFilter!==THREE.NearestFilter&&r.minFilter!==THREE.LinearFilter&&b(r),this.setDepthTest(!0),this.setDepthWrite(!0)}},this.renderImmediateObject=function(t,e,r,i,n){var o=R(t,e,r,i,n);B=-1,Er.setMaterialFaces(i),n.immediateRenderCallback?n.immediateRenderCallback(o,fr,pr):n.render(function(t){Er.renderBufferImmediate(t,o,i)})};var Bt=function(t){for(t.__webglObjects||(t.__webglObjects={},t.__webglObjectsImmediate=[]);t.__objectsAdded.length;){var e=t.__objectsAdded[0],r=t,i=void 0,n=void 0;if(void 0===e.__webglInit&&(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3),void 0!==(i=e.geometry)&&void 0===i.__webglInit)if(i.__webglInit=!0,i.addEventListener("dispose",Pt),i instanceof THREE.BufferGeometry)nr(i);else if(e instanceof THREE.Mesh)void 0!==e.__webglActive&&h(e,r),sr(r,e,i);else if(e instanceof THREE.Line){if(!i.__webglVertexBuffer){(n=i).__webglVertexBuffer=fr.createBuffer(),n.__webglColorBuffer=fr.createBuffer(),n.__webglLineDistanceBuffer=fr.createBuffer(),Er.info.memory.geometries++;var o=e,a=(n=i).vertices.length;n.__vertexArray=new Float32Array(3*a),n.__colorArray=new Float32Array(3*a),n.__lineDistanceArray=new Float32Array(1*a),n.__webglLineCount=a,s(n,o),i.verticesNeedUpdate=!0,i.colorsNeedUpdate=!0,i.lineDistancesNeedUpdate=!0}}else e instanceof THREE.PointCloud&&!i.__webglVertexBuffer&&((n=i).__webglVertexBuffer=fr.createBuffer(),n.__webglColorBuffer=fr.createBuffer(),Er.info.memory.geometries++,o=e,a=(n=i).vertices.length,n.__vertexArray=new Float32Array(3*a),n.__colorArray=new Float32Array(3*a),n.__sortArray=[],n.__webglParticleCount=a,s(n,o),i.verticesNeedUpdate=!0,i.colorsNeedUpdate=!0);if(void 0===e.__webglActive){if(e instanceof THREE.Mesh){if((i=e.geometry)instanceof THREE.BufferGeometry)l(r.__webglObjects,i,e);else if(i instanceof THREE.Geometry)for(o=0,a=i.geometryGroupsList.length;o<a;o++)n=i.geometryGroupsList[o],l(r.__webglObjects,n,e)}else e instanceof THREE.Line||e instanceof THREE.PointCloud?(i=e.geometry,l(r.__webglObjects,i,e)):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&r.__webglObjectsImmediate.push({id:null,object:e,opaque:null,transparent:null,z:0});e.__webglActive=!0}t.__objectsAdded.splice(0,1)}for(;t.__objectsRemoved.length;)h(t.__objectsRemoved[0],t),t.__objectsRemoved.splice(0,1)};this.initMaterial=function(t,e,r,i){var n,o,a,s,h,l,c,u,f;t.addEventListener("dispose",Ut),t instanceof THREE.MeshDepthMaterial?u="depth":t instanceof THREE.MeshNormalMaterial?u="normal":t instanceof THREE.MeshBasicMaterial?u="basic":t instanceof THREE.MeshLambertMaterial?u="lambert":t instanceof THREE.MeshPhongMaterial?u="phong":t instanceof THREE.LineBasicMaterial?u="basic":t instanceof THREE.LineDashedMaterial?u="dashed":t instanceof THREE.PointCloudMaterial&&(u="particle_basic"),u?(n=THREE.ShaderLib[u],t.__webglShader={uniforms:THREE.UniformsUtils.clone(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader}):t.__webglShader={uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader},c=s=a=o=n=0;for(var E=e.length;c<E;c++){var p=e[c];p.onlyShadow||!1===p.visible||(p instanceof THREE.DirectionalLight&&n++,p instanceof THREE.PointLight&&o++,p instanceof THREE.SpotLight&&a++,p instanceof THREE.HemisphereLight&&s++)}for(E=c=0,p=e.length;E<p;E++){var d=e[E];d.castShadow&&(d instanceof THREE.SpotLight&&c++,d instanceof THREE.DirectionalLight&&!d.shadowCascade&&c++)}for(var m in e=c,bt&&i&&i.skeleton&&i.skeleton.useVertexTexture?c=1024:(c=fr.getParameter(fr.MAX_VERTEX_UNIFORM_VECTORS),c=Math.floor((c-20)/4),void 0!==i&&i instanceof THREE.SkinnedMesh&&((c=Math.min(i.skeleton.bones.length,c))<i.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+i.skeleton.bones.length+", this GPU supports just "+c+" (try OpenGL instead of ANGLE)"))),r={precision:w,supportsVertexTextures:_t,map:!!t.map,envMap:!!t.envMap,lightMap:!!t.lightMap,bumpMap:!!t.bumpMap,normalMap:!!t.normalMap,specularMap:!!t.specularMap,alphaMap:!!t.alphaMap,vertexColors:t.vertexColors,fog:r,useFog:t.fog,fogExp:r instanceof THREE.FogExp2,sizeAttenuation:t.sizeAttenuation,logarithmicDepthBuffer:K,skinning:t.skinning,maxBones:c,useVertexTexture:bt&&i&&i.skeleton&&i.skeleton.useVertexTexture,morphTargets:t.morphTargets,morphNormals:t.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:n,maxPointLights:o,maxSpotLights:a,maxHemiLights:s,maxShadows:e,shadowMapEnabled:this.shadowMapEnabled&&i.receiveShadow&&0<e,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:t.alphaTest,metal:t.metal,wrapAround:t.wrapAround,doubleSided:t.side===THREE.DoubleSide,flipSided:t.side===THREE.BackSide},i=[],u?i.push(u):(i.push(t.fragmentShader),i.push(t.vertexShader)),t.defines)i.push(m),i.push(t.defines[m]);for(l in r)i.push(l),i.push(r[l]);for(u=i.join(),l=0,m=z.length;l<m;l++)if((i=z[l]).code===u){(f=i).usedTimes++;break}if(void 0===f&&(f=new THREE.WebGLProgram(this,u,t,r),z.push(f),Er.info.memory.programs=z.length),t.program=f,f=t.program.attributes,t.morphTargets)for(m="morphTarget",l=t.numSupportedMorphTargets=0;l<this.maxMorphTargets;l++)0<=f[u=m+l]&&t.numSupportedMorphTargets++;if(t.morphNormals)for(m="morphNormal",l=t.numSupportedMorphNormals=0;l<this.maxMorphNormals;l++)0<=f[u=m+l]&&t.numSupportedMorphNormals++;for(h in t.uniformsList=[],t.__webglShader.uniforms)(l=t.program.uniforms[h])&&t.uniformsList.push([t.__webglShader.uniforms[h],l])},this.setFaceCulling=function(t,e){t===THREE.CullFaceNone?fr.disable(fr.CULL_FACE):(e===THREE.FrontFaceDirectionCW?fr.frontFace(fr.CW):fr.frontFace(fr.CCW),t===THREE.CullFaceBack?fr.cullFace(fr.BACK):t===THREE.CullFaceFront?fr.cullFace(fr.FRONT):fr.cullFace(fr.FRONT_AND_BACK),fr.enable(fr.CULL_FACE))},this.setMaterialFaces=function(t){var e=t.side===THREE.DoubleSide;t=t.side===THREE.BackSide,k!==e&&(e?fr.disable(fr.CULL_FACE):fr.enable(fr.CULL_FACE),k=e),N!==t&&(t?fr.frontFace(fr.CW):fr.frontFace(fr.CCW),N=t)},this.setDepthTest=function(t){it!==t&&(t?fr.enable(fr.DEPTH_TEST):fr.disable(fr.DEPTH_TEST),it=t)},this.setDepthWrite=function(t){nt!==t&&(fr.depthMask(t),nt=t)},this.setBlending=function(t,e,r,i){t!==O&&(t===THREE.NoBlending?fr.disable(fr.BLEND):t===THREE.AdditiveBlending?(fr.enable(fr.BLEND),fr.blendEquation(fr.FUNC_ADD),fr.blendFunc(fr.SRC_ALPHA,fr.ONE)):t===THREE.SubtractiveBlending?(fr.enable(fr.BLEND),fr.blendEquation(fr.FUNC_ADD),fr.blendFunc(fr.ZERO,fr.ONE_MINUS_SRC_COLOR)):t===THREE.MultiplyBlending?(fr.enable(fr.BLEND),fr.blendEquation(fr.FUNC_ADD),fr.blendFunc(fr.ZERO,fr.SRC_COLOR)):t===THREE.CustomBlending?fr.enable(fr.BLEND):(fr.enable(fr.BLEND),fr.blendEquationSeparate(fr.FUNC_ADD,fr.FUNC_ADD),fr.blendFuncSeparate(fr.SRC_ALPHA,fr.ONE_MINUS_SRC_ALPHA,fr.ONE,fr.ONE_MINUS_SRC_ALPHA)),O=t),t===THREE.CustomBlending?(e!==tt&&(fr.blendEquation(Y(e)),tt=e),(r!==et||i!==rt)&&(fr.blendFunc(Y(r),Y(i)),et=r,rt=i)):rt=et=tt=null},this.setTexture=function(t,e){if(t.needsUpdate){t.__webglInit||(t.__webglInit=!0,t.addEventListener("dispose",Ft),t.__webglTexture=fr.createTexture(),Er.info.memory.textures++),fr.activeTexture(fr.TEXTURE0+e),fr.bindTexture(fr.TEXTURE_2D,t.__webglTexture),fr.pixelStorei(fr.UNPACK_FLIP_Y_WEBGL,t.flipY),fr.pixelStorei(fr.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),fr.pixelStorei(fr.UNPACK_ALIGNMENT,t.unpackAlignment);var r=t.image,i=THREE.Math.isPowerOfTwo(r.width)&&THREE.Math.isPowerOfTwo(r.height),n=Y(t.format),o=Y(t.type);X(fr.TEXTURE_2D,t,i);var a=t.mipmaps;if(t instanceof THREE.DataTexture)if(0<a.length&&i){for(var s=0,h=a.length;s<h;s++)r=a[s],fr.texImage2D(fr.TEXTURE_2D,s,n,r.width,r.height,0,n,o,r.data);t.generateMipmaps=!1}else fr.texImage2D(fr.TEXTURE_2D,0,n,r.width,r.height,0,n,o,r.data);else if(t instanceof THREE.CompressedTexture)for(s=0,h=a.length;s<h;s++)r=a[s],t.format!==THREE.RGBAFormat?fr.compressedTexImage2D(fr.TEXTURE_2D,s,n,r.width,r.height,0,r.data):fr.texImage2D(fr.TEXTURE_2D,s,n,r.width,r.height,0,n,o,r.data);else if(0<a.length&&i){for(s=0,h=a.length;s<h;s++)r=a[s],fr.texImage2D(fr.TEXTURE_2D,s,n,n,o,r);t.generateMipmaps=!1}else fr.texImage2D(fr.TEXTURE_2D,0,n,n,o,t.image);t.generateMipmaps&&i&&fr.generateMipmap(fr.TEXTURE_2D),t.needsUpdate=!1,t.onUpdate&&t.onUpdate()}else fr.activeTexture(fr.TEXTURE0+e),fr.bindTexture(fr.TEXTURE_2D,t.__webglTexture)},this.setRenderTarget=function(t){var e=t instanceof THREE.WebGLRenderTargetCube;if(t&&!t.__webglFramebuffer){void 0===t.depthBuffer&&(t.depthBuffer=!0),void 0===t.stencilBuffer&&(t.stencilBuffer=!0),t.addEventListener("dispose",Dt),t.__webglTexture=fr.createTexture(),Er.info.memory.textures++;var r=THREE.Math.isPowerOfTwo(t.width)&&THREE.Math.isPowerOfTwo(t.height),i=Y(t.format),n=Y(t.type);if(e){t.__webglFramebuffer=[],t.__webglRenderbuffer=[],fr.bindTexture(fr.TEXTURE_CUBE_MAP,t.__webglTexture),X(fr.TEXTURE_CUBE_MAP,t,r);for(var o=0;o<6;o++){t.__webglFramebuffer[o]=fr.createFramebuffer(),t.__webglRenderbuffer[o]=fr.createRenderbuffer(),fr.texImage2D(fr.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,i,t.width,t.height,0,i,n,null);var a=t,s=fr.TEXTURE_CUBE_MAP_POSITIVE_X+o;fr.bindFramebuffer(fr.FRAMEBUFFER,t.__webglFramebuffer[o]),fr.framebufferTexture2D(fr.FRAMEBUFFER,fr.COLOR_ATTACHMENT0,s,a.__webglTexture,0),c(t.__webglRenderbuffer[o],t)}r&&fr.generateMipmap(fr.TEXTURE_CUBE_MAP)}else t.__webglFramebuffer=fr.createFramebuffer(),t.__webglRenderbuffer=t.shareDepthFrom?t.shareDepthFrom.__webglRenderbuffer:fr.createRenderbuffer(),fr.bindTexture(fr.TEXTURE_2D,t.__webglTexture),X(fr.TEXTURE_2D,t,r),fr.texImage2D(fr.TEXTURE_2D,0,i,t.width,t.height,0,i,n,null),i=fr.TEXTURE_2D,fr.bindFramebuffer(fr.FRAMEBUFFER,t.__webglFramebuffer),fr.framebufferTexture2D(fr.FRAMEBUFFER,fr.COLOR_ATTACHMENT0,i,t.__webglTexture,0),t.shareDepthFrom?t.depthBuffer&&!t.stencilBuffer?fr.framebufferRenderbuffer(fr.FRAMEBUFFER,fr.DEPTH_ATTACHMENT,fr.RENDERBUFFER,t.__webglRenderbuffer):t.depthBuffer&&t.stencilBuffer&&fr.framebufferRenderbuffer(fr.FRAMEBUFFER,fr.DEPTH_STENCIL_ATTACHMENT,fr.RENDERBUFFER,t.__webglRenderbuffer):c(t.__webglRenderbuffer,t),r&&fr.generateMipmap(fr.TEXTURE_2D);e?fr.bindTexture(fr.TEXTURE_CUBE_MAP,null):fr.bindTexture(fr.TEXTURE_2D,null),fr.bindRenderbuffer(fr.RENDERBUFFER,null),fr.bindFramebuffer(fr.FRAMEBUFFER,null)}t?(e=e?t.__webglFramebuffer[t.activeCubeFace]:t.__webglFramebuffer,r=t.width,t=t.height,n=i=0):(e=null,r=ut,t=ft,i=lt,n=ct),e!==V&&(fr.bindFramebuffer(fr.FRAMEBUFFER,e),fr.viewport(i,n,r,t),V=e),Et=r,pt=t},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(t,e,r){this.width=t,this.height=e,r=r||{},this.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter,this.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==r.format?r.format:THREE.RGBAFormat,this.type=void 0!==r.type?r.type:THREE.UnsignedByteType,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0===r.stencilBuffer||r.stencilBuffer,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(t,e){this.width=t,this.height=e},clone:function(){var t=new THREE.WebGLRenderTarget(this.width,this.height);return t.wrapS=this.wrapS,t.wrapT=this.wrapT,t.magFilter=this.magFilter,t.minFilter=this.minFilter,t.anisotropy=this.anisotropy,t.offset.copy(this.offset),t.repeat.copy(this.repeat),t.format=this.format,t.type=this.type,t.depthBuffer=this.depthBuffer,t.stencilBuffer=this.stencilBuffer,t.generateMipmaps=this.generateMipmaps,t.shareDepthFrom=this.shareDepthFrom,t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(t,e,r){THREE.WebGLRenderTarget.call(this,t,e,r),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.WebGLProgram=function(){var g=0;return function(t,e,r,i){var n=t.context,o=r.defines,a=r.__webglShader.uniforms,s=r.attributes,h=r.__webglShader.vertexShader,l=r.__webglShader.fragmentShader,c=r.index0AttributeName;void 0===c&&!0===i.morphTargets&&(c="position");var u,f,E="SHADOWMAP_TYPE_BASIC";for(var p in i.shadowMapType===THREE.PCFShadowMap?E="SHADOWMAP_TYPE_PCF":i.shadowMapType===THREE.PCFSoftShadowMap&&(E="SHADOWMAP_TYPE_PCF_SOFT"),u=[],o)!1!==(f=o[p])&&(f="#define "+p+" "+f,u.push(f));for(var d in u=u.join("\n"),o=n.createProgram(),r instanceof THREE.RawShaderMaterial?t=r="":(r=["precision "+i.precision+" float;","precision "+i.precision+" int;",u,i.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.gammaInput?"#define GAMMA_INPUT":"",t.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_HEMI_LIGHTS "+i.maxHemiLights,"#define MAX_SHADOWS "+i.maxShadows,"#define MAX_BONES "+i.maxBones,i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.lightMap?"#define USE_LIGHTMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.vertexColors?"#define USE_COLOR":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals?"#define USE_MORPHNORMALS":"",i.wrapAround?"#define WRAP_AROUND":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+E:"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\n\tattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n\tattribute vec3 morphTarget0;\n\tattribute vec3 morphTarget1;\n\tattribute vec3 morphTarget2;\n\tattribute vec3 morphTarget3;\n\t#ifdef USE_MORPHNORMALS\n\t\tattribute vec3 morphNormal0;\n\t\tattribute vec3 morphNormal1;\n\t\tattribute vec3 morphNormal2;\n\t\tattribute vec3 morphNormal3;\n\t#else\n\t\tattribute vec3 morphTarget4;\n\t\tattribute vec3 morphTarget5;\n\t\tattribute vec3 morphTarget6;\n\t\tattribute vec3 morphTarget7;\n\t#endif\n#endif\n#ifdef USE_SKINNING\n\tattribute vec4 skinIndex;\n\tattribute vec4 skinWeight;\n#endif\n"].join("\n"),t=["precision "+i.precision+" float;","precision "+i.precision+" int;",i.bumpMap||i.normalMap?"#extension GL_OES_standard_derivatives : enable":"",u,"#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_HEMI_LIGHTS "+i.maxHemiLights,"#define MAX_SHADOWS "+i.maxShadows,i.alphaTest?"#define ALPHATEST "+i.alphaTest:"",t.gammaInput?"#define GAMMA_INPUT":"",t.gammaOutput?"#define GAMMA_OUTPUT":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.lightMap?"#define USE_LIGHTMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.vertexColors?"#define USE_COLOR":"",i.metal?"#define METAL":"",i.wrapAround?"#define WRAP_AROUND":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+E:"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n")),h=new THREE.WebGLShader(n,n.VERTEX_SHADER,r+h),l=new THREE.WebGLShader(n,n.FRAGMENT_SHADER,t+l),n.attachShader(o,h),n.attachShader(o,l),void 0!==c&&n.bindAttribLocation(o,0,c),n.linkProgram(o),!1===n.getProgramParameter(o,n.LINK_STATUS)&&(console.error("THREE.WebGLProgram: Could not initialise shader."),console.error("gl.VALIDATE_STATUS",n.getProgramParameter(o,n.VALIDATE_STATUS)),console.error("gl.getError()",n.getError())),""!==n.getProgramInfoLog(o)&&console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",n.getProgramInfoLog(o)),n.deleteShader(h),n.deleteShader(l),c="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences bindMatrix bindMatrixInverse".split(" "),i.useVertexTexture?(c.push("boneTexture"),c.push("boneTextureWidth"),c.push("boneTextureHeight")):c.push("boneGlobalMatrices"),i.logarithmicDepthBuffer&&c.push("logDepthBufFC"),a)c.push(d);for(a=c,d={},c=0,t=a.length;c<t;c++)d[E=a[c]]=n.getUniformLocation(o,E);for(this.uniforms=d,c="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" "),a=0;a<i.maxMorphTargets;a++)c.push("morphTarget"+a);for(a=0;a<i.maxMorphNormals;a++)c.push("morphNormal"+a);for(var m in s)c.push(m);for(s={},m=0,a=(i=c).length;m<a;m++)s[d=i[m]]=n.getAttribLocation(o,d);return this.attributes=s,this.id=g++,this.code=e,this.usedTimes=1,this.program=o,this.vertexShader=h,this.fragmentShader=l,this}}(),THREE.WebGLShader=function(){var i=function(t){t=t.split("\n");for(var e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")};return function(t,e,r){return e=t.createShader(e),t.shaderSource(e,r),t.compileShader(e),!1===t.getShaderParameter(e,t.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==t.getShaderInfoLog(e)&&(console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",t.getShaderInfoLog(e)),console.warn(i(r))),e}}(),THREE.RenderableVertex=function(){this.position=new THREE.Vector3,this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(t){this.positionWorld.copy(t.positionWorld),this.positionScreen.copy(t.positionScreen)},THREE.RenderableFace=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.normalModel=new THREE.Vector3,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.color=new THREE.Color,this.material=null,this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2],this.z=0},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0},THREE.RenderableSprite=function(){this.id=0,this.object=null,this.rotation=this.z=this.y=this.x=0,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0},THREE.GeometryUtils={merge:function(t,e,r){var i;console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."),e instanceof THREE.Mesh&&(e.matrixAutoUpdate&&e.updateMatrix(),i=e.matrix,e=e.geometry),t.merge(e,i,r)},center:function(t){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),t.center()}},THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(t,e,r,i){var n=new THREE.ImageLoader;n.crossOrigin=this.crossOrigin;var o=new THREE.Texture(void 0,e);return n.load(t,function(t){o.image=t,o.needsUpdate=!0,r&&r(o)},void 0,function(t){i&&i(t)}),o.sourceFile=t,o},loadTextureCube:function(t,e,r,i){var n=new THREE.ImageLoader;n.crossOrigin=this.crossOrigin;var o=new THREE.CubeTexture([],e);o.flipY=!1;var a=0;e=function(e){n.load(t[e],function(t){o.images[e]=t,6===(a+=1)&&(o.needsUpdate=!0,r&&r(o))})},i=0;for(var s=t.length;i<s;++i)e(i);return o},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},getNormalMap:function(t,e){var r=function(t){var e=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return[t[0]/e,t[1]/e,t[2]/e]};e|=1;var i=t.width,n=t.height,o=document.createElement("canvas");o.width=i,o.height=n;var a=o.getContext("2d");a.drawImage(t,0,0);for(var s=a.getImageData(0,0,i,n).data,h=a.createImageData(i,n),l=h.data,c=0;c<i;c++)for(var u=0;u<n;u++){var f=u-1<0?0:u-1,E=n-1<u+1?n-1:u+1,p=c-1<0?0:c-1,d=i-1<c+1?i-1:c+1,m=[],g=[0,0,s[4*(u*i+c)]/255*e];for(m.push([-1,0,s[4*(u*i+p)]/255*e]),m.push([-1,-1,s[4*(f*i+p)]/255*e]),m.push([0,-1,s[4*(f*i+c)]/255*e]),m.push([1,-1,s[4*(f*i+d)]/255*e]),m.push([1,0,s[4*(u*i+d)]/255*e]),m.push([1,1,s[4*(E*i+d)]/255*e]),m.push([0,1,s[4*(E*i+c)]/255*e]),m.push([-1,1,s[4*(E*i+p)]/255*e]),f=[],p=m.length,E=0;E<p;E++){d=m[E];var T=m[(E+1)%p];d=[d[0]-g[0],d[1]-g[1],d[2]-g[2]],T=[T[0]-g[0],T[1]-g[1],T[2]-g[2]];f.push(r([d[1]*T[2]-d[2]*T[1],d[2]*T[0]-d[0]*T[2],d[0]*T[1]-d[1]*T[0]]))}for(m=[0,0,0],E=0;E<f.length;E++)m[0]+=f[E][0],m[1]+=f[E][1],m[2]+=f[E][2];m[0]/=f.length,m[1]/=f.length,m[2]/=f.length,l[g=4*(u*i+c)]=(m[0]+1)/2*255|0,l[g+1]=(m[1]+1)/2*255|0,l[g+2]=255*m[2]|0,l[g+3]=255}return a.putImageData(h,0,0),o},generateDataTexture:function(t,e,r){var i=t*e,n=new Uint8Array(3*i),o=Math.floor(255*r.r),a=Math.floor(255*r.g);r=Math.floor(255*r.b);for(var s=0;s<i;s++)n[3*s]=o,n[3*s+1]=a,n[3*s+2]=r;return(t=new THREE.DataTexture(n,t,e,THREE.RGBFormat)).needsUpdate=!0,t}},THREE.SceneUtils={createMultiMaterialObject:function(t,e){for(var r=new THREE.Object3D,i=0,n=e.length;i<n;i++)r.add(new THREE.Mesh(t,e[i]));return r},detach:function(t,e,r){t.applyMatrix(e.matrixWorld),e.remove(t),r.add(t)},attach:function(t,e,r){var i=new THREE.Matrix4;i.getInverse(r.matrixWorld),t.applyMatrix(i),e.remove(t),r.add(t)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){try{return this.faces[this.face][this.weight][this.style]}catch(t){throw"The font "+this.face+" with "+this.weight+" weight and "+this.style+" style is missing."}},loadFace:function(t){var e=t.familyName.toLowerCase();return this.faces[e]=this.faces[e]||{},this.faces[e][t.cssFontWeight]=this.faces[e][t.cssFontWeight]||{},this.faces[e][t.cssFontWeight][t.cssFontStyle]=t,this.faces[e][t.cssFontWeight][t.cssFontStyle]=t},drawText:function(t){var e=this.getFace(),r=this.size/e.resolution,i=0,n=String(t).split(""),o=n.length,a=[];for(t=0;t<o;t++){var s=new THREE.Path;i=i+(s=this.extractGlyphPoints(n[t],e,r,i,s)).offset;a.push(s.path)}return{paths:a,offset:i/2}},extractGlyphPoints:function(t,e,r,i,n){var o,a,s,h,l,c,u,f,E,p,d,m=[],g=e.glyphs[t]||e.glyphs["?"];if(g){if(g.o)for(h=(e=g._cachedOutline||(g._cachedOutline=g.o.split(" "))).length,t=0;t<h;)switch(s=e[t++],s){case"m":s=e[t++]*r+i,l=e[t++]*r,n.moveTo(s,l);break;case"l":s=e[t++]*r+i,l=e[t++]*r,n.lineTo(s,l);break;case"q":if(s=e[t++]*r+i,l=e[t++]*r,f=e[t++]*r+i,E=e[t++]*r,n.quadraticCurveTo(f,E,s,l),o=m[m.length-1])for(c=o.x,u=o.y,o=1,a=this.divisions;o<=a;o++){var T=o/a;THREE.Shape.Utils.b2(T,c,f,s),THREE.Shape.Utils.b2(T,u,E,l)}break;case"b":if(s=e[t++]*r+i,l=e[t++]*r,f=e[t++]*r+i,E=e[t++]*r,p=e[t++]*r+i,d=e[t++]*r,n.bezierCurveTo(f,E,p,d,s,l),o=m[m.length-1])for(c=o.x,u=o.y,o=1,a=this.divisions;o<=a;o++)T=o/a,THREE.Shape.Utils.b3(T,c,f,p,s),THREE.Shape.Utils.b3(T,u,E,d,l)}return{offset:g.ha*r,path:n}}}},THREE.FontUtils.generateShapes=function(t,e){var r=void 0!==(e=e||{}).curveSegments?e.curveSegments:4,i=void 0!==e.font?e.font:"helvetiker",n=void 0!==e.weight?e.weight:"normal",o=void 0!==e.style?e.style:"normal";for(THREE.FontUtils.size=void 0!==e.size?e.size:100,THREE.FontUtils.divisions=r,THREE.FontUtils.face=i,THREE.FontUtils.weight=n,THREE.FontUtils.style=o,i=[],n=0,o=(r=THREE.FontUtils.drawText(t).paths).length;n<o;n++)Array.prototype.push.apply(i,r[n].toShapes());return i},function(t){var C=function(t){for(var e=t.length,r=0,i=e-1,n=0;n<e;i=n++)r+=t[i].x*t[n].y-t[n].x*t[i].y;return.5*r};t.Triangulate=function(t,e){var r=t.length;if(r<3)return null;var i,n,o,a=[],s=[],h=[];if(0<C(t))for(n=0;n<r;n++)s[n]=n;else for(n=0;n<r;n++)s[n]=r-1-n;var l=2*r;for(n=r-1;2<r;){if(l--<=0){console.log("Warning, unable to triangulate polygon!");break}var c;r<=(i=n)&&(i=0),r<=(n=i+1)&&(n=0),r<=(o=n+1)&&(o=0);t:{var u=c=void 0,f=void 0,E=void 0,p=void 0,d=void 0,m=void 0,g=void 0,T=void 0;u=t[s[i]].x,f=t[s[i]].y,E=t[s[n]].x,p=t[s[n]].y,d=t[s[o]].x;if((E-u)*((m=t[s[o]].y)-f)-(p-f)*(d-u)<1e-10)c=!1;else{var v=void 0,y=void 0,R=void 0,x=void 0,H=void 0,_=void 0,b=void 0,w=void 0,M=void 0,S=void 0;M=w=b=T=g=void 0,v=d-E,y=m-p,R=u-d,x=f-m,H=E-u,_=p-f;for(c=0;c<r;c++)if(g=t[s[c]].x,T=t[s[c]].y,!(g===u&&T===f||g===E&&T===p||g===d&&T===m)&&(M=g-E,S=T-p,b=H*(w=T-f)-_*(b=g-u),w=R*(T-=m)-x*(g-=d),-1e-10<=(M=v*S-y*M)&&-1e-10<=w&&-1e-10<=b)){c=!1;break t}c=!0}}if(c){for(a.push([t[s[i]],t[s[n]],t[s[o]]]),h.push([s[i],s[n],s[o]]),o=(i=n)+1;o<r;i++,o++)s[i]=s[o];l=2*--r}}return e?h:a},t.Triangulate.area=C}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(t){return t=this.getUtoTmapping(t),this.getPoint(t)},THREE.Curve.prototype.getPoints=function(t){t||(t=5);var e,r=[];for(e=0;e<=t;e++)r.push(this.getPoint(e/t));return r},THREE.Curve.prototype.getSpacedPoints=function(t){t||(t=5);var e,r=[];for(e=0;e<=t;e++)r.push(this.getPointAt(e/t));return r},THREE.Curve.prototype.getLength=function(){var t=this.getLengths();return t[t.length-1]},
THREE.Curve.prototype.getLengths=function(t){if(t||(t=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e,r,i=[],n=this.getPoint(0),o=0;for(i.push(0),r=1;r<=t;r++)o+=(e=this.getPoint(r/t)).distanceTo(n),i.push(o),n=e;return this.cacheArcLengths=i},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(t,e){var r,i=this.getLengths(),n=0,o=i.length;r=e||t*i[o-1];for(var a,s=0,h=o-1;s<=h;)if((a=i[n=Math.floor(s+(h-s)/2)]-r)<0)s=n+1;else{if(!(0<a)){h=n;break}h=n-1}return i[n=h]==r?n/(o-1):(n+(r-(s=i[n]))/(i[n+1]-s))/(o-1)},THREE.Curve.prototype.getTangent=function(t){var e=t-1e-4;return e<0&&(e=0),1<(t+=1e-4)&&(t=1),e=this.getPoint(e),this.getPoint(t).clone().sub(e).normalize()},THREE.Curve.prototype.getTangentAt=function(t){return t=this.getUtoTmapping(t),this.getTangent(t)},THREE.Curve.Utils={tangentQuadraticBezier:function(t,e,r,i){return 2*(1-t)*(r-e)+2*t*(i-r)},tangentCubicBezier:function(t,e,r,i,n){return-3*e*(1-t)*(1-t)+3*r*(1-t)*(1-t)-6*t*r*(1-t)+6*t*i*(1-t)-3*t*t*i+3*t*t*n},tangentSpline:function(t){return 6*t*t-6*t+(3*t*t-4*t+1)+(-6*t*t+6*t)+(3*t*t-2*t)},interpolate:function(t,e,r,i,n){var o=n*n;return(2*e-2*r+(t=.5*(r-t))+(i=.5*(i-e)))*n*o+(-3*e+3*r-2*t-i)*o+t*n+e}},THREE.Curve.create=function(t,e){return t.prototype=Object.create(THREE.Curve.prototype),t.prototype.getPoint=e,t},THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(t){this.curves.push(t)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new THREE.LineCurve(e,t))},THREE.CurvePath.prototype.getPoint=function(t){var e=t*this.getLength(),r=this.getCurveLengths();for(t=0;t<r.length;){if(r[t]>=e)return e=1-(e=r[t]-e)/(t=this.curves[t]).getLength(),t.getPointAt(e);t++}return null},THREE.CurvePath.prototype.getLength=function(){var t=this.getCurveLengths();return t[t.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var t,e=[],r=0,i=this.curves.length;for(t=0;t<i;t++)r+=this.curves[t].getLength(),e.push(r);return this.cacheLengths=e},THREE.CurvePath.prototype.getBoundingBox=function(){var t,e,r,i,n,o,a=this.getPoints();t=e=Number.NEGATIVE_INFINITY,i=n=Number.POSITIVE_INFINITY;var s,h,l,c,u=a[0]instanceof THREE.Vector3;for(c=u?new THREE.Vector3:new THREE.Vector2,h=0,l=a.length;h<l;h++)(s=a[h]).x>t?t=s.x:s.x<i&&(i=s.x),s.y>e?e=s.y:s.y<n&&(n=s.y),u&&(s.z>r?r=s.z:s.z<o&&(o=s.z)),c.add(s);return a={minX:i,minY:n,maxX:t,maxY:e},u&&(a.maxZ=r,a.minZ=o),a},THREE.CurvePath.prototype.createPointsGeometry=function(t){return t=this.getPoints(t,!0),this.createGeometry(t)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(t){return t=this.getSpacedPoints(t,!0),this.createGeometry(t)},THREE.CurvePath.prototype.createGeometry=function(t){for(var e=new THREE.Geometry,r=0;r<t.length;r++)e.vertices.push(new THREE.Vector3(t[r].x,t[r].y,t[r].z||0));return e},THREE.CurvePath.prototype.addWrapPath=function(t){this.bends.push(t)},THREE.CurvePath.prototype.getTransformedPoints=function(t,e){var r,i,n=this.getPoints(t);for(e||(e=this.bends),r=0,i=e.length;r<i;r++)n=this.getWrapPoints(n,e[r]);return n},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(t,e){var r,i,n=this.getSpacedPoints(t);for(e||(e=this.bends),r=0,i=e.length;r<i;r++)n=this.getWrapPoints(n,e[r]);return n},THREE.CurvePath.prototype.getWrapPoints=function(t,e){var r,i,n,o,a,s,h=this.getBoundingBox();for(r=0,i=t.length;r<i;r++)o=(n=t[r]).x,a=n.y,s=o/h.maxX,s=e.getUtoTmapping(s,o),o=e.getPoint(s),(s=e.getTangent(s)).set(-s.y,s.x).multiplyScalar(a),n.x=o.x+s.x,n.y=o.y+s.y;return t},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),t=!(this.matrixWorldNeedsUpdate=!1));for(var e=0,r=this.children.length;e<r;e++)this.children[e].updateMatrixWorld(t)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(t){THREE.CurvePath.call(this),this.actions=[],t&&this.fromPoints(t)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,r=t.length;e<r;e++)this.lineTo(t[e].x,t[e].y)},THREE.Path.prototype.moveTo=function(){var t=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:t})},THREE.Path.prototype.lineTo=function(t,e){var r=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args;i=new THREE.LineCurve(new THREE.Vector2(i[i.length-2],i[i.length-1]),new THREE.Vector2(t,e));this.curves.push(i),this.actions.push({action:THREE.PathActions.LINE_TO,args:r})},THREE.Path.prototype.quadraticCurveTo=function(t,e,r,i){var n=Array.prototype.slice.call(arguments),o=this.actions[this.actions.length-1].args;o=new THREE.QuadraticBezierCurve(new THREE.Vector2(o[o.length-2],o[o.length-1]),new THREE.Vector2(t,e),new THREE.Vector2(r,i));this.curves.push(o),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:n})},THREE.Path.prototype.bezierCurveTo=function(t,e,r,i,n,o){var a=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args;s=new THREE.CubicBezierCurve(new THREE.Vector2(s[s.length-2],s[s.length-1]),new THREE.Vector2(t,e),new THREE.Vector2(r,i),new THREE.Vector2(n,o));this.curves.push(s),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:a})},THREE.Path.prototype.splineThru=function(t){var e=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args;r=[new THREE.Vector2(r[r.length-2],r[r.length-1])];Array.prototype.push.apply(r,t),r=new THREE.SplineCurve(r),this.curves.push(r),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:e})},THREE.Path.prototype.arc=function(t,e,r,i,n,o){var a=this.actions[this.actions.length-1].args;this.absarc(t+a[a.length-2],e+a[a.length-1],r,i,n,o)},THREE.Path.prototype.absarc=function(t,e,r,i,n,o){this.absellipse(t,e,r,r,i,n,o)},THREE.Path.prototype.ellipse=function(t,e,r,i,n,o,a){var s=this.actions[this.actions.length-1].args;this.absellipse(t+s[s.length-2],e+s[s.length-1],r,i,n,o,a)},THREE.Path.prototype.absellipse=function(t,e,r,i,n,o,a){var s=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(t,e,r,i,n,o,a);this.curves.push(h),h=h.getPoint(1),s.push(h.x),s.push(h.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(t){t||(t=40);for(var e=[],r=0;r<t;r++)e.push(this.getPoint(r/t));return e},THREE.Path.prototype.getPoints=function(t,e){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(t,e);t=t||12;var r,i,n,o,a,s,h,l,c,u,f,E,p,d=[];for(r=0,i=this.actions.length;r<i;r++)switch(n=this.actions[r],o=n.action,n=n.args,o){case THREE.PathActions.MOVE_TO:case THREE.PathActions.LINE_TO:d.push(new THREE.Vector2(n[0],n[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(a=n[2],s=n[3],c=n[0],u=n[1],0<d.length?(f=(o=d[d.length-1]).x,E=o.y):(f=(o=this.actions[r-1].args)[o.length-2],E=o[o.length-1]),n=1;n<=t;n++)p=n/t,o=THREE.Shape.Utils.b2(p,f,c,a),p=THREE.Shape.Utils.b2(p,E,u,s),d.push(new THREE.Vector2(o,p));break;case THREE.PathActions.BEZIER_CURVE_TO:for(a=n[4],s=n[5],c=n[0],u=n[1],h=n[2],l=n[3],0<d.length?(f=(o=d[d.length-1]).x,E=o.y):(f=(o=this.actions[r-1].args)[o.length-2],E=o[o.length-1]),n=1;n<=t;n++)p=n/t,o=THREE.Shape.Utils.b3(p,f,c,h,a),p=THREE.Shape.Utils.b3(p,E,u,l,s),d.push(new THREE.Vector2(o,p));break;case THREE.PathActions.CSPLINE_THRU:for(o=this.actions[r-1].args,p=[new THREE.Vector2(o[o.length-2],o[o.length-1])],o=t*n[0].length,p=p.concat(n[0]),p=new THREE.SplineCurve(p),n=1;n<=o;n++)d.push(p.getPointAt(n/o));break;case THREE.PathActions.ARC:for(a=n[0],s=n[1],u=n[2],h=n[3],o=n[4],c=!!n[5],f=o-h,E=2*t,n=1;n<=E;n++)p=n/E,c||(p=1-p),p=h+p*f,o=a+u*Math.cos(p),p=s+u*Math.sin(p),d.push(new THREE.Vector2(o,p));break;case THREE.PathActions.ELLIPSE:for(a=n[0],s=n[1],u=n[2],l=n[3],h=n[4],o=n[5],c=!!n[6],f=o-h,E=2*t,n=1;n<=E;n++)p=n/E,c||(p=1-p),p=h+p*f,o=a+u*Math.cos(p),p=s+l*Math.sin(p),d.push(new THREE.Vector2(o,p))}return r=d[d.length-1],Math.abs(r.x-d[0].x)<1e-10&&Math.abs(r.y-d[0].y)<1e-10&&d.splice(d.length-1,1),e&&d.push(d[0]),d},THREE.Path.prototype.toShapes=function(t,e){function r(t){for(var e=[],r=0,i=t.length;r<i;r++){var n=t[r],o=new THREE.Shape;o.actions=n.actions,o.curves=n.curves,e.push(o)}return e}function i(t,e){for(var r=e.length,i=!1,n=r-1,o=0;o<r;n=o++){var a=e[n],s=e[o],h=s.x-a.x,l=s.y-a.y;if(1e-10<Math.abs(l)){if(l<0&&(a=e[o],h=-h,s=e[n],l=-l),!(t.y<a.y||t.y>s.y))if(t.y==a.y){if(t.x==a.x)return!0}else{if(0==(n=l*(t.x-a.x)-h*(t.y-a.y)))return!0;n<0||(i=!i)}}else if(t.y==a.y&&(s.x<=t.x&&t.x<=a.x||a.x<=t.x&&t.x<=s.x))return!0}return i}var n=function(t){var e,r,i,n,o=[],a=new THREE.Path;for(e=0,r=t.length;e<r;e++)n=(i=t[e]).args,(i=i.action)==THREE.PathActions.MOVE_TO&&0!=a.actions.length&&(o.push(a),a=new THREE.Path),a[i].apply(a,n);return 0!=a.actions.length&&o.push(a),o}(this.actions);if(0==n.length)return[];if(!0===e)return r(n);var o,a,s,h=[];if(1==n.length)return a=n[0],(s=new THREE.Shape).actions=a.actions,s.curves=a.curves,h.push(s),h;var l=!THREE.Shape.Utils.isClockWise(n[0].getPoints());l=t?!l:l;s=[];var c,u,f,E=[],p=[],d=0;for(E[d]=void 0,p[d]=[],u=0,f=n.length;u<f;u++)c=(a=n[u]).getPoints(),o=THREE.Shape.Utils.isClockWise(c),(o=t?!o:o)?(!l&&E[d]&&d++,E[d]={s:new THREE.Shape,p:c},E[d].s.actions=a.actions,E[d].s.curves=a.curves,l&&d++,p[d]=[]):p[d].push({h:a,p:c[0]});if(!E[0])return r(n);if(1<E.length){for(u=!1,f=[],a=0,n=E.length;a<n;a++)s[a]=[];for(a=0,n=E.length;a<n;a++)for(o=p[a],l=0;l<o.length;l++){d=o[l],c=!0;for(var m=0;m<E.length;m++)i(d.p,E[m].p)&&(a!=m&&f.push({froms:a,tos:m,hole:l}),c?(c=!1,s[m].push(d)):u=!0);c&&s[a].push(d)}0<f.length&&(u||(p=s))}for(u=0,f=E.length;u<f;u++)for(s=E[u].s,h.push(s),n=0,o=(a=p[u]).length;n<o;n++)s.holes.push(a[n].h);return h},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(t){return new THREE.ExtrudeGeometry(this,t)},THREE.Shape.prototype.makeGeometry=function(t){return new THREE.ShapeGeometry(this,t)},THREE.Shape.prototype.getPointsHoles=function(t){var e,r=this.holes.length,i=[];for(e=0;e<r;e++)i[e]=this.holes[e].getTransformedPoints(t,this.bends);return i},THREE.Shape.prototype.getSpacedPointsHoles=function(t){var e,r=this.holes.length,i=[];for(e=0;e<r;e++)i[e]=this.holes[e].getTransformedSpacedPoints(t,this.bends);return i},THREE.Shape.prototype.extractAllPoints=function(t){return{shape:this.getTransformedPoints(t),holes:this.getPointsHoles(t)}},THREE.Shape.prototype.extractPoints=function(t){return this.useSpacedPoints?this.extractAllSpacedPoints(t):this.extractAllPoints(t)},THREE.Shape.prototype.extractAllSpacedPoints=function(t){return{shape:this.getTransformedSpacedPoints(t),holes:this.getSpacedPointsHoles(t)}},THREE.Shape.Utils={triangulateShape:function(v,t){function E(t,e,r){return t.x!=e.x?t.x<e.x?t.x<=r.x&&r.x<=e.x:e.x<=r.x&&r.x<=t.x:t.y<e.y?t.y<=r.y&&r.y<=e.y:e.y<=r.y&&r.y<=t.y}function y(t,e,r,i,n){var o=e.x-t.x,a=e.y-t.y,s=i.x-r.x,h=i.y-r.y,l=t.x-r.x,c=t.y-r.y,u=a*s-o*h,f=a*l-o*c;if(1e-10<Math.abs(u)){if(0<u){if(f<0||u<f)return[];if((s=h*l-s*c)<0||u<s)return[]}else{if(0<f||f<u)return[];if(0<(s=h*l-s*c)||s<u)return[]}return 0==s?!n||0!=f&&f!=u?[t]:[]:s==u?!n||0!=f&&f!=u?[e]:[]:0==f?[r]:f==u?[i]:(n=s/u,[{x:t.x+n*o,y:t.y+n*a}])}return 0!=f||h*l!=s*c?[]:(s=0==s&&0==h,(a=0==o&&0==a)&&s?t.x!=r.x||t.y!=r.y?[]:[t]:a?E(r,i,t)?[t]:[]:s?E(t,e,r)?[r]:[]:(0!=o?(t.x<e.x?(s=(o=t).x,t=(a=e).x):(s=(o=e).x,t=(a=t).x),r.x<i.x?(u=(e=r).x,r=(h=i).x):(u=(e=i).x,r=(h=r).x)):(t.y<e.y?(s=(o=t).y,t=(a=e).y):(s=(o=e).y,t=(a=t).y),r.y<i.y?(u=(e=r).y,r=(h=i).y):(u=(e=i).y,r=(h=r).y)),s<=u?t<u?[]:t==u?n?[]:[e]:t<=r?[e,a]:[e,h]:r<s?[]:s==r?n?[]:[o]:t<=r?[o,a]:[o,h]))}function R(t,e,r,i){var n=e.x-t.x,o=e.y-t.y;e=r.x-t.x,r=r.y-t.y;var a=i.x-t.x;return i=i.y-t.y,t=n*r-o*e,n=n*i-o*a,1e-10<Math.abs(t)?(e=a*r-i*e,0<t?0<=n&&0<=e:0<=n||0<=e):0<n}var e,r,i,n,o,a={};for(i=v.concat(),e=0,r=t.length;e<r;e++)Array.prototype.push.apply(i,t[e]);for(e=0,r=i.length;e<r;e++)void 0!==a[o=i[e].x+":"+i[e].y]&&console.log("Duplicate point",o),a[o]=e;e=function(t,a){function e(t,e){var r=p.length-1,i=t-1;i<0&&(i=r);var n=t+1;return r<n&&(n=0),!!(r=R(p[t],p[i],p[n],o[e]))&&(r=o.length-1,(i=e-1)<0&&(i=r),r<(n=e+1)&&(n=0),!!(r=R(o[e],o[i],o[n],p[t])))}function r(t,e){var r,i;for(r=0;r<p.length;r++)if(i=r+1,i%=p.length,0<(i=y(t,e,p[r],p[i],!0)).length)return!0;return!1}function i(t,e){var r,i,n,o;for(r=0;r<d.length;r++)for(i=a[d[r]],n=0;n<i.length;n++)if(o=n+1,o%=i.length,0<(o=y(t,e,i[n],i[o],!0)).length)return!0;return!1}var o,n,s,h,l,c,u,f,E,p=v.concat(),d=[],m=[],g=0;for(n=a.length;g<n;g++)d.push(g);u=0;for(var T=2*d.length;0<d.length;){if(--T<0){console.log("Infinite Loop! Holes left:"+d.length+", Probably Hole outside Shape!");break}for(s=u;s<p.length;s++){for(h=p[s],n=-1,g=0;g<d.length;g++)if(l=d[g],void 0===m[c=h.x+":"+h.y+":"+l]){for(o=a[l],f=0;f<o.length;f++)if(l=o[f],e(s,f)&&!r(h,l)&&!i(h,l)){n=f,d.splice(g,1),u=p.slice(0,s+1),l=p.slice(s),f=o.slice(n),E=o.slice(0,n+1),p=u.concat(f).concat(E).concat(l),u=s;break}if(0<=n)break;m[c]=!0}if(0<=n)break}}return p}(0,t);var s=THREE.FontUtils.Triangulate(e,!1);for(e=0,r=s.length;e<r;e++)for(n=s[e],i=0;i<3;i++)void 0!==(o=a[o=n[i].x+":"+n[i].y])&&(n[i]=o);return s.concat()},isClockWise:function(t){return THREE.FontUtils.Triangulate.area(t)<0},b2p0:function(t,e){var r=1-t;return r*r*e},b2p1:function(t,e){return 2*(1-t)*t*e},b2p2:function(t,e){return t*t*e},b2:function(t,e,r,i){return this.b2p0(t,e)+this.b2p1(t,r)+this.b2p2(t,i)},b3p0:function(t,e){var r=1-t;return r*r*r*e},b3p1:function(t,e){var r=1-t;return 3*r*r*t*e},b3p2:function(t,e){return 3*(1-t)*t*t*e},b3p3:function(t,e){return t*t*t*e},b3:function(t,e,r,i,n){return this.b3p0(t,e)+this.b3p1(t,r)+this.b3p2(t,i)+this.b3p3(t,n)}},THREE.LineCurve=function(t,e){this.v1=t,this.v2=e},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(t){var e=this.v2.clone().sub(this.v1);return e.multiplyScalar(t).add(this.v1),e},THREE.LineCurve.prototype.getPointAt=function(t){return this.getPoint(t)},THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(t,e,r){this.v0=t,this.v1=e,this.v2=r},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(t){var e;return e=THREE.Shape.Utils.b2(t,this.v0.x,this.v1.x,this.v2.x),t=THREE.Shape.Utils.b2(t,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(e,t)},THREE.QuadraticBezierCurve.prototype.getTangent=function(t){var e;return e=THREE.Curve.Utils.tangentQuadraticBezier(t,this.v0.x,this.v1.x,this.v2.x),t=THREE.Curve.Utils.tangentQuadraticBezier(t,this.v0.y,this.v1.y,this.v2.y),(e=new THREE.Vector2(e,t)).normalize(),e},THREE.CubicBezierCurve=function(t,e,r,i){this.v0=t,this.v1=e,this.v2=r,this.v3=i},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(t){var e;return e=THREE.Shape.Utils.b3(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t=THREE.Shape.Utils.b3(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(e,t)},THREE.CubicBezierCurve.prototype.getTangent=function(t){var e;return e=THREE.Curve.Utils.tangentCubicBezier(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t=THREE.Curve.Utils.tangentCubicBezier(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y),(e=new THREE.Vector2(e,t)).normalize(),e},THREE.SplineCurve=function(t){this.points=null==t?[]:t},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(t){var e,r=new THREE.Vector2,i=[],n=this.points;return e=(n.length-1)*t,e-=t=Math.floor(e),i[0]=0==t?t:t-1,i[1]=t,i[2]=t>n.length-2?n.length-1:t+1,i[3]=t>n.length-3?n.length-1:t+2,r.x=THREE.Curve.Utils.interpolate(n[i[0]].x,n[i[1]].x,n[i[2]].x,n[i[3]].x,e),r.y=THREE.Curve.Utils.interpolate(n[i[0]].y,n[i[1]].y,n[i[2]].y,n[i[3]].y,e),r},THREE.EllipseCurve=function(t,e,r,i,n,o,a){this.aX=t,this.aY=e,this.xRadius=r,this.yRadius=i,this.aStartAngle=n,this.aEndAngle=o,this.aClockwise=a},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(t){var e;return(e=this.aEndAngle-this.aStartAngle)<0&&(e+=2*Math.PI),e>2*Math.PI&&(e-=2*Math.PI),e=!0===this.aClockwise?this.aEndAngle+(1-t)*(2*Math.PI-e):this.aStartAngle+t*e,t=this.aX+this.xRadius*Math.cos(e),e=this.aY+this.yRadius*Math.sin(e),new THREE.Vector2(t,e)},THREE.ArcCurve=function(t,e,r,i,n,o){THREE.EllipseCurve.call(this,t,e,r,r,i,n,o)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.LineCurve3=THREE.Curve.create(function(t,e){this.v1=t,this.v2=e},function(t){var e=new THREE.Vector3;return e.subVectors(this.v2,this.v1),e.multiplyScalar(t),e.add(this.v1),e}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(t,e,r){this.v0=t,this.v1=e,this.v2=r},function(t){var e,r;return e=THREE.Shape.Utils.b2(t,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(t,this.v0.y,this.v1.y,this.v2.y),t=THREE.Shape.Utils.b2(t,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(e,r,t)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(t,e,r,i){this.v0=t,this.v1=e,this.v2=r,this.v3=i},function(t){var e,r;return e=THREE.Shape.Utils.b3(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t=THREE.Shape.Utils.b3(t,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(e,r,t)}),THREE.SplineCurve3=THREE.Curve.create(function(t){this.points=null==t?[]:t},function(t){var e,r=new THREE.Vector3,i=[],n=this.points;t*=n.length-1,t-=e=Math.floor(t),i[0]=0==e?e:e-1,i[1]=e,i[2]=e>n.length-2?n.length-1:e+1,i[3]=e>n.length-3?n.length-1:e+2,e=n[i[0]];var o=n[i[1]],a=n[i[2]];i=n[i[3]];return r.x=THREE.Curve.Utils.interpolate(e.x,o.x,a.x,i.x,t),r.y=THREE.Curve.Utils.interpolate(e.y,o.y,a.y,i.y,t),r.z=THREE.Curve.Utils.interpolate(e.z,o.z,a.z,i.z,t),r}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(t){this.points=null==t?[]:t},function(t){var e,r=new THREE.Vector3,i=[],n=this.points;return e=(n.length-0)*t,e-=t=Math.floor(e),t+=0<t?0:(Math.floor(Math.abs(t)/n.length)+1)*n.length,i[0]=(t-1)%n.length,i[1]=t%n.length,i[2]=(t+1)%n.length,i[3]=(t+2)%n.length,r.x=THREE.Curve.Utils.interpolate(n[i[0]].x,n[i[1]].x,n[i[2]].x,n[i[3]].x,e),r.y=THREE.Curve.Utils.interpolate(n[i[0]].y,n[i[1]].y,n[i[2]].y,n[i[3]].y,e),r.z=THREE.Curve.Utils.interpolate(n[i[0]].z,n[i[1]].z,n[i[2]].z,n[i[3]].z,e),r}),THREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){console.warn("THREE.AnimationHandler.add() has been deprecated.")},get:function(){console.warn("THREE.AnimationHandler.get() has been deprecated.")},remove:function(){console.warn("THREE.AnimationHandler.remove() has been deprecated.")},animations:[],init:function(t){if(!0!==t.initialized){for(var e=0;e<t.hierarchy.length;e++){for(var r=0;r<t.hierarchy[e].keys.length;r++)if(t.hierarchy[e].keys[r].time<0&&(t.hierarchy[e].keys[r].time=0),void 0!==t.hierarchy[e].keys[r].rot&&!(t.hierarchy[e].keys[r].rot instanceof THREE.Quaternion)){var i=t.hierarchy[e].keys[r].rot;t.hierarchy[e].keys[r].rot=(new THREE.Quaternion).fromArray(i)}if(t.hierarchy[e].keys.length&&void 0!==t.hierarchy[e].keys[0].morphTargets){for(i={},r=0;r<t.hierarchy[e].keys.length;r++)for(var n=0;n<t.hierarchy[e].keys[r].morphTargets.length;n++){var o=t.hierarchy[e].keys[r].morphTargets[n];i[o]=-1}for(t.hierarchy[e].usedMorphTargets=i,r=0;r<t.hierarchy[e].keys.length;r++){var a={};for(o in i){for(n=0;n<t.hierarchy[e].keys[r].morphTargets.length;n++)if(t.hierarchy[e].keys[r].morphTargets[n]===o){a[o]=t.hierarchy[e].keys[r].morphTargetsInfluences[n];break}n===t.hierarchy[e].keys[r].morphTargets.length&&(a[o]=0)}t.hierarchy[e].keys[r].morphTargetsInfluences=a}}for(r=1;r<t.hierarchy[e].keys.length;r++)t.hierarchy[e].keys[r].time===t.hierarchy[e].keys[r-1].time&&(t.hierarchy[e].keys.splice(r,1),r--);for(r=0;r<t.hierarchy[e].keys.length;r++)t.hierarchy[e].keys[r].index=r}return t.initialized=!0,t}},parse:function(t){var i=function(t,e){e.push(t);for(var r=0;r<t.children.length;r++)i(t.children[r],e)},e=[];if(t instanceof THREE.SkinnedMesh)for(var r=0;r<t.skeleton.bones.length;r++)e.push(t.skeleton.bones[r]);else i(t,e);return e},play:function(t){-1===this.animations.indexOf(t)&&this.animations.push(t)},stop:function(t){-1!==(t=this.animations.indexOf(t))&&this.animations.splice(t,1)},update:function(t){for(var e=0;e<this.animations.length;e++)this.animations[e].update(t)}},THREE.Animation=function(t,e){this.root=t,this.data=THREE.AnimationHandler.init(e),this.hierarchy=THREE.AnimationHandler.parse(t),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=!0,this.weight=0,this.interpolationType=THREE.AnimationHandler.LINEAR},THREE.Animation.prototype.keyTypes=["pos","rot","scl"],THREE.Animation.prototype.play=function(t,e){this.currentTime=void 0!==t?t:0,this.weight=void 0!==e?e:1,this.isPlaying=!0,this.reset(),THREE.AnimationHandler.play(this)},THREE.Animation.prototype.stop=function(){this.isPlaying=!1,THREE.AnimationHandler.stop(this)},THREE.Animation.prototype.reset=function(){for(var t=0,e=this.hierarchy.length;t<e;t++){(r=this.hierarchy[t]).matrixAutoUpdate=!0,void 0===r.animationCache&&(r.animationCache={}),void 0===r.animationCache[this.data.name]&&(r.animationCache[this.data.name]={},r.animationCache[this.data.name].prevKey={pos:0,rot:0,scl:0},r.animationCache[this.data.name].nextKey={pos:0,rot:0,scl:0},r.animationCache[this.data.name].originalMatrix=r.matrix);for(var r=r.animationCache[this.data.name],i=0;i<3;i++){for(var n=this.keyTypes[i],o=this.data.hierarchy[t].keys[0],a=this.getNextKeyWith(n,t,1);a.time<this.currentTime&&a.index>o.index;)o=a,a=this.getNextKeyWith(n,t,a.index+1);r.prevKey[n]=o,r.nextKey[n]=a}}},THREE.Animation.prototype.update=function(){var u=[],f=new THREE.Vector3,E=new THREE.Vector3,p=new THREE.Quaternion,d=function(t,e){var r,i,n,o,a,s,h=[],l=[];return r=(t.length-1)*e,r-=i=Math.floor(r),h[0]=0===i?i:i-1,h[1]=i,h[2]=i>t.length-2?i:i+1,h[3]=i>t.length-3?i:i+2,i=t[h[0]],o=t[h[1]],a=t[h[2]],s=t[h[3]],n=r*(h=r*r),l[0]=c(i[0],o[0],a[0],s[0],r,h,n),l[1]=c(i[1],o[1],a[1],s[1],r,h,n),l[2]=c(i[2],o[2],a[2],s[2],r,h,n),l},c=function(t,e,r,i,n,o,a){return(2*(e-r)+(t=.5*(r-t))+(i=.5*(i-e)))*a+(-3*(e-r)-2*t-i)*o+t*n+e};return function(t){if(!1!==this.isPlaying&&(this.currentTime+=t*this.timeScale,0!==this.weight)){if(t=this.data.length,!0===this.loop&&this.currentTime>t)this.currentTime%=t,this.reset();else if(!1===this.loop&&this.currentTime>t)return void this.stop();t=0;for(var e=this.hierarchy.length;t<e;t++)for(var r=this.hierarchy[t],i=r.animationCache[this.data.name],n=0;n<3;n++){var o=this.keyTypes[n],a=i.prevKey[o],s=i.nextKey[o];if(s.time<=this.currentTime){for(a=this.data.hierarchy[t].keys[0],s=this.getNextKeyWith(o,t,1);s.time<this.currentTime&&s.index>a.index;)a=s,s=this.getNextKeyWith(o,t,s.index+1);i.prevKey[o]=a,i.nextKey[o]=s}r.matrixAutoUpdate=!0,r.matrixWorldNeedsUpdate=!0;var h=(this.currentTime-a.time)/(s.time-a.time),l=a[o],c=s[o];h<0&&(h=0),1<h&&(h=1),"pos"===o?this.interpolationType===THREE.AnimationHandler.LINEAR?(E.x=l[0]+(c[0]-l[0])*h,E.y=l[1]+(c[1]-l[1])*h,E.z=l[2]+(c[2]-l[2])*h,r instanceof THREE.Bone?(a=this.weight/(this.weight+r.accumulatedPosWeight),r.position.lerp(E,a),r.accumulatedPosWeight+=this.weight):r.position.copy(E)):this.interpolationType!==THREE.AnimationHandler.CATMULLROM&&this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD||(u[0]=this.getPrevKeyWith("pos",t,a.index-1).pos,u[1]=l,u[2]=c,u[3]=this.getNextKeyWith("pos",t,s.index+1).pos,s=d(u,h=.33*h+.33),a=1,r instanceof THREE.Bone&&(a=this.weight/(this.weight+r.accumulatedPosWeight),r.accumulatedPosWeight+=this.weight),(o=r.position).x+=(s[0]-o.x)*a,o.y+=(s[1]-o.y)*a,o.z+=(s[2]-o.z)*a,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(h=d(u,1.01*h),f.set(h[0],h[1],h[2]),f.sub(o),f.y=0,f.normalize(),h=Math.atan2(f.x,f.z),r.rotation.set(0,h,0))):"rot"===o?(THREE.Quaternion.slerp(l,c,p,h),r instanceof THREE.Bone?0===r.accumulatedRotWeight?(r.quaternion.copy(p),r.accumulatedRotWeight=this.weight):(a=this.weight/(this.weight+r.accumulatedRotWeight),THREE.Quaternion.slerp(r.quaternion,p,r.quaternion,a),r.accumulatedRotWeight+=this.weight):r.quaternion.copy(p)):"scl"===o&&(E.x=l[0]+(c[0]-l[0])*h,E.y=l[1]+(c[1]-l[1])*h,E.z=l[2]+(c[2]-l[2])*h,r instanceof THREE.Bone?(a=this.weight/(this.weight+r.accumulatedSclWeight),r.scale.lerp(E,a),r.accumulatedSclWeight+=this.weight):r.scale.copy(E))}return!0}}}(),THREE.Animation.prototype.getNextKeyWith=function(t,e,r){var i=this.data.hierarchy[e].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r<i.length-1?r:i.length-1:r%i.length;r<i.length;r++)if(void 0!==i[r][t])return i[r];return this.data.hierarchy[e].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(t,e,r){var i=this.data.hierarchy[e].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<r?r:0:0<=r?r:r+i.length;0<=r;r--)if(void 0!==i[r][t])return i[r];return this.data.hierarchy[e].keys[i.length-1]},THREE.KeyFrameAnimation=function(t){this.root=t.node,this.data=THREE.AnimationHandler.init(t),this.hierarchy=THREE.AnimationHandler.parse(this.root),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.loop=this.isPaused=!0,t=0;for(var e=this.hierarchy.length;t<e;t++){var r=this.data.hierarchy[t].sids,i=this.hierarchy[t];if(this.data.hierarchy[t].keys.length&&r){for(var n=0;n<r.length;n++){var o=r[n],a=this.getNextKeyWith(o,t,0);a&&a.apply(o)}i.matrixAutoUpdate=!1,this.data.hierarchy[t].node.updateMatrix(),i.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(t){if(this.currentTime=void 0!==t?t:0,!1===this.isPlaying){this.isPlaying=!0;var e,r,i=this.hierarchy.length;for(t=0;t<i;t++)e=this.hierarchy[t],void 0===(r=this.data.hierarchy[t]).animationCache&&(r.animationCache={},r.animationCache.prevKey=null,r.animationCache.nextKey=null,r.animationCache.originalMatrix=e.matrix),(e=this.data.hierarchy[t].keys).length&&(r.animationCache.prevKey=e[0],r.animationCache.nextKey=e[1],this.startTime=Math.min(e[0].time,this.startTime),this.endTime=Math.max(e[e.length-1].time,this.endTime));this.update(0)}this.isPaused=!1,THREE.AnimationHandler.play(this)},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.stop(this);for(var t=0;t<this.data.hierarchy.length;t++){var e=this.hierarchy[t],r=this.data.hierarchy[t];if(void 0!==r.animationCache){var i=r.animationCache.originalMatrix;i.copy(e.matrix),e.matrix=i,delete r.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(t){if(!1!==this.isPlaying){this.currentTime+=t*this.timeScale,t=this.data.length,!0===this.loop&&this.currentTime>t&&(this.currentTime%=t),this.currentTime=Math.min(this.currentTime,t),t=0;for(var e=this.hierarchy.length;t<e;t++){var r=this.hierarchy[t],i=(n=this.data.hierarchy[t]).keys,n=n.animationCache;if(i.length){var o=n.prevKey,a=n.nextKey;if(a.time<=this.currentTime){for(;a.time<this.currentTime&&a.index>o.index;)a=i[(o=a).index+1];n.prevKey=o,n.nextKey=a}a.time>=this.currentTime?o.interpolate(a,this.currentTime):o.interpolate(a,a.time),this.data.hierarchy[t].node.updateMatrix(),r.matrixWorldNeedsUpdate=!0}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(t,e,r){for(r%=(e=this.data.hierarchy[e].keys).length;r<e.length;r++)if(e[r].hasTarget(t))return e[r];return e[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(t,e,r){for(e=this.data.hierarchy[e].keys,r=0<=r?r:r+e.length;0<=r;r--)if(e[r].hasTarget(t))return e[r];return e[e.length-1]},THREE.MorphAnimation=function(t){this.mesh=t,this.frames=t.morphTargetInfluences.length,this.currentTime=0,this.duration=1e3,this.loop=!0,this.isPlaying=!1},THREE.MorphAnimation.prototype={play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(){var r=0,i=0;return function(t){if(!1!==this.isPlaying){this.currentTime+=t,!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration),this.currentTime=Math.min(this.currentTime,this.duration),t=this.duration/this.frames;var e=Math.floor(this.currentTime/t);e!=i&&(this.mesh.morphTargetInfluences[r]=0,this.mesh.morphTargetInfluences[i]=1,this.mesh.morphTargetInfluences[e]=0,r=i,i=e),this.mesh.morphTargetInfluences[e]=this.currentTime%t/t,this.mesh.morphTargetInfluences[r]=1-this.mesh.morphTargetInfluences[e]}}}()},THREE.BoxGeometry=function(t,e,r,i,n,o){function a(t,e,r,i,n,o,a,s){var h,l=y.widthSegments,c=y.heightSegments,u=n/2,f=o/2,E=y.vertices.length;"x"===t&&"y"===e||"y"===t&&"x"===e?h="z":"x"===t&&"z"===e||"z"===t&&"x"===e?(h="y",c=y.depthSegments):("z"===t&&"y"===e||"y"===t&&"z"===e)&&(h="x",l=y.depthSegments);var p=l+1,d=c+1,m=n/l,g=o/c,T=new THREE.Vector3;for(T[h]=0<a?1:-1,n=0;n<d;n++)for(o=0;o<p;o++){var v=new THREE.Vector3;v[t]=(o*m-u)*r,v[e]=(n*g-f)*i,v[h]=a,y.vertices.push(v)}for(n=0;n<c;n++)for(o=0;o<l;o++)f=o+p*n,t=o+p*(n+1),e=o+1+p*(n+1),r=o+1+p*n,i=new THREE.Vector2(o/l,1-n/c),a=new THREE.Vector2(o/l,1-(n+1)/c),h=new THREE.Vector2((o+1)/l,1-(n+1)/c),u=new THREE.Vector2((o+1)/l,1-n/c),(f=new THREE.Face3(f+E,t+E,r+E)).normal.copy(T),f.vertexNormals.push(T.clone(),T.clone(),T.clone()),f.materialIndex=s,y.faces.push(f),y.faceVertexUvs[0].push([i,a,u]),(f=new THREE.Face3(t+E,e+E,r+E)).normal.copy(T),f.vertexNormals.push(T.clone(),T.clone(),T.clone()),f.materialIndex=s,y.faces.push(f),y.faceVertexUvs[0].push([a.clone(),h,u.clone()])}THREE.Geometry.call(this),this.parameters={width:t,height:e,depth:r,widthSegments:i,heightSegments:n,depthSegments:o},this.widthSegments=i||1,this.heightSegments=n||1,this.depthSegments=o||1;var y=this;n=e/2,o=r/2,a("z","y",-1,-1,r,e,i=t/2,0),a("z","y",1,-1,r,e,-i,1),a("x","z",1,1,t,r,n,2),a("x","z",1,-1,t,r,-n,3),a("x","y",1,-1,t,e,o,4),a("x","y",-1,-1,t,e,-o,5),this.mergeVertices()},THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry=function(t,e,r,i){THREE.Geometry.call(this),this.parameters={radius:t,segments:e,thetaStart:r,thetaLength:i},t=t||50,e=void 0!==e?Math.max(3,e):8,r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI;var n,o=[];n=new THREE.Vector3;var a=new THREE.Vector2(.5,.5);for(this.vertices.push(n),o.push(a),n=0;n<=e;n++){var s=new THREE.Vector3,h=r+n/e*i;s.x=t*Math.cos(h),s.y=t*Math.sin(h),this.vertices.push(s),o.push(new THREE.Vector2((s.x/t+1)/2,(s.y/t+1)/2))}for(r=new THREE.Vector3(0,0,1),n=1;n<=e;n++)this.faces.push(new THREE.Face3(n,n+1,0,[r.clone(),r.clone(),r.clone()])),this.faceVertexUvs[0].push([o[n].clone(),o[n+1].clone(),a.clone()]);this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,t)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(t,e,r,i,n,o){return console.warn("THEE.CubeGeometry has been renamed to THREE.BoxGeometry."),new THREE.BoxGeometry(t,e,r,i,n,o)},
THREE.CylinderGeometry=function(t,e,r,i,n,o){THREE.Geometry.call(this),this.parameters={radiusTop:t,radiusBottom:e,height:r,radialSegments:i,heightSegments:n,openEnded:o},t=void 0!==t?t:20,e=void 0!==e?e:20,i=i||8,n=n||1,o=void 0!==o&&o;var a,s,h=(r=void 0!==r?r:100)/2,l=[],c=[];for(s=0;s<=n;s++){var u=[],f=[],E=(d=s/n)*(e-t)+t;for(a=0;a<=i;a++){var p=a/i;(m=new THREE.Vector3).x=E*Math.sin(p*Math.PI*2),m.y=-d*r+h,m.z=E*Math.cos(p*Math.PI*2),this.vertices.push(m),u.push(this.vertices.length-1),f.push(new THREE.Vector2(p,1-d))}l.push(u),c.push(f)}for(r=(e-t)/r,a=0;a<i;a++)for(0!==t?(u=this.vertices[l[0][a]].clone(),f=this.vertices[l[0][a+1]].clone()):(u=this.vertices[l[1][a]].clone(),f=this.vertices[l[1][a+1]].clone()),u.setY(Math.sqrt(u.x*u.x+u.z*u.z)*r).normalize(),f.setY(Math.sqrt(f.x*f.x+f.z*f.z)*r).normalize(),s=0;s<n;s++){var d=l[s][a],m=(E=l[s+1][a],p=l[s+1][a+1],l[s][a+1]),g=u.clone(),T=u.clone(),v=f.clone(),y=f.clone(),R=c[s][a].clone(),x=c[s+1][a].clone(),H=c[s+1][a+1].clone(),_=c[s][a+1].clone();this.faces.push(new THREE.Face3(d,E,m,[g,T,y])),this.faceVertexUvs[0].push([R,x,_]),this.faces.push(new THREE.Face3(E,p,m,[T.clone(),v,y.clone()])),this.faceVertexUvs[0].push([x.clone(),H,_.clone()])}if(!1===o&&0<t)for(this.vertices.push(new THREE.Vector3(0,h,0)),a=0;a<i;a++)d=l[0][a],E=l[0][a+1],p=this.vertices.length-1,g=new THREE.Vector3(0,1,0),T=new THREE.Vector3(0,1,0),v=new THREE.Vector3(0,1,0),R=c[0][a].clone(),x=c[0][a+1].clone(),H=new THREE.Vector2(x.x,0),this.faces.push(new THREE.Face3(d,E,p,[g,T,v])),this.faceVertexUvs[0].push([R,x,H]);if(!1===o&&0<e)for(this.vertices.push(new THREE.Vector3(0,-h,0)),a=0;a<i;a++)d=l[s][a+1],E=l[s][a],p=this.vertices.length-1,g=new THREE.Vector3(0,-1,0),T=new THREE.Vector3(0,-1,0),v=new THREE.Vector3(0,-1,0),R=c[s][a+1].clone(),x=c[s][a].clone(),H=new THREE.Vector2(x.x,1),this.faces.push(new THREE.Face3(d,E,p,[g,T,v])),this.faceVertexUvs[0].push([R,x,H]);this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(t,e){void 0!==t&&(THREE.Geometry.call(this),t=t instanceof Array?t:[t],this.addShapeList(t,e),this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(t,e){for(var r=t.length,i=0;i<r;i++)this.addShape(t[i],e)},THREE.ExtrudeGeometry.prototype.addShape=function(d,m){function t(t,e,r){return e||console.log("die"),e.clone().multiplyScalar(r).add(t)}function e(t,e,r){var i=THREE.Math.sign,n=1,o=(n=t.x-e.x,t.y-e.y),a=r.x-t.x,s=r.y-t.y,h=n*n+o*o;if(1e-10<Math.abs(n*s-o*a)){var l=Math.sqrt(h);i=Math.sqrt(a*a+s*s),h=e.x-o/l;if(e=e.y+n/l,(n=(r=h+n*(a=((r.x-s/i-h)*s-(r.y+a/i-e)*a)/(n*s-o*a))-t.x)*r+(t=e+o*a-t.y)*t)<=2)return new THREE.Vector2(r,t);n=Math.sqrt(n/2)}else t=!1,1e-10<n?1e-10<a&&(t=!0):n<-1e-10?a<-1e-10&&(t=!0):i(o)==i(s)&&(t=!0),t?(r=-o,t=n,n=Math.sqrt(h)):(r=n,t=o,n=Math.sqrt(h/2));return new THREE.Vector2(r/n,t/n)}function r(t,e){var r,i;for(N=t.length;0<=--N;){(i=(r=N)-1)<0&&(i=t.length-1);var n=0,o=T+2*g;for(n=0;n<o;n++){var a=t,s=n,h=o,l=r,c=i,u=(u=e+r+(f=B*n))+S,f=(f=e+i+f)+S,E=(E=e+i+(p=B*(n+1)))+S,p=(p=e+r+p)+S;M.faces.push(new THREE.Face3(u,f,p,null,null,x)),M.faces.push(new THREE.Face3(f,E,p,null,null,x)),u=H.generateSideWallUV(M,d,a,m,u,f,E,p,s,h,l,c),M.faceVertexUvs[0].push([u[0],u[1],u[3]]),M.faceVertexUvs[0].push([u[1],u[2],u[3]])}}}function i(t,e,r){M.vertices.push(new THREE.Vector3(t,e,r))}function n(t,e,r,i){t+=S,e+=S,r+=S,M.faces.push(new THREE.Face3(t,e,r,null,null,R)),t=i?H.generateBottomUV(M,d,m,t,e,r):H.generateTopUV(M,d,m,t,e,r),M.faceVertexUvs[0].push(t)}var o,a,s,h,l,c=void 0!==m.amount?m.amount:100,u=void 0!==m.bevelThickness?m.bevelThickness:6,f=void 0!==m.bevelSize?m.bevelSize:u-2,g=void 0!==m.bevelSegments?m.bevelSegments:3,E=void 0===m.bevelEnabled||m.bevelEnabled,p=void 0!==m.curveSegments?m.curveSegments:12,T=void 0!==m.steps?m.steps:1,v=m.extrudePath,y=!1,R=m.material,x=m.extrudeMaterial,H=void 0!==m.UVGenerator?m.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;v&&(o=v.getSpacedPoints(T),E=!(y=!0),a=void 0!==m.frames?m.frames:new THREE.TubeGeometry.FrenetFrames(v,T,!1),s=new THREE.Vector3,h=new THREE.Vector3,l=new THREE.Vector3),E||(f=u=g=0);var _,b,w,M=this,S=this.vertices.length,C=(p=(v=d.extractPoints(p)).shape,v.holes);if(v=!THREE.Shape.Utils.isClockWise(p)){for(p=p.reverse(),b=0,w=C.length;b<w;b++)_=C[b],THREE.Shape.Utils.isClockWise(_)&&(C[b]=_.reverse());v=!1}var A=THREE.Shape.Utils.triangulateShape(p,C),L=p;for(b=0,w=C.length;b<w;b++)_=C[b],p=p.concat(_);var P,F,D,U,z,V,B=p.length,k=A.length,N=(v=[],0);for(P=(D=L.length)-1,F=N+1;N<D;N++,P++,F++)P===D&&(P=0),F===D&&(F=0),v[N]=e(L[N],L[P],L[F]);var O,I=[],G=v.concat();for(b=0,w=C.length;b<w;b++){for(_=C[b],O=[],N=0,P=(D=_.length)-1,F=N+1;N<D;N++,P++,F++)P===D&&(P=0),F===D&&(F=0),O[N]=e(_[N],_[P],_[F]);I.push(O),G=G.concat(O)}for(P=0;P<g;P++){for(U=u*(1-(D=P/g)),F=f*Math.sin(D*Math.PI/2),N=0,D=L.length;N<D;N++)i((z=t(L[N],v[N],F)).x,z.y,-U);for(b=0,w=C.length;b<w;b++)for(_=C[b],O=I[b],N=0,D=_.length;N<D;N++)i((z=t(_[N],O[N],F)).x,z.y,-U)}for(F=f,N=0;N<B;N++)z=E?t(p[N],G[N],F):p[N],y?(h.copy(a.normals[0]).multiplyScalar(z.x),s.copy(a.binormals[0]).multiplyScalar(z.y),l.copy(o[0]).add(h).add(s),i(l.x,l.y,l.z)):i(z.x,z.y,0);for(D=1;D<=T;D++)for(N=0;N<B;N++)z=E?t(p[N],G[N],F):p[N],y?(h.copy(a.normals[D]).multiplyScalar(z.x),s.copy(a.binormals[D]).multiplyScalar(z.y),l.copy(o[D]).add(h).add(s),i(l.x,l.y,l.z)):i(z.x,z.y,c/T*D);for(P=g-1;0<=P;P--){for(U=u*(1-(D=P/g)),F=f*Math.sin(D*Math.PI/2),N=0,D=L.length;N<D;N++)i((z=t(L[N],v[N],F)).x,z.y,c+U);for(b=0,w=C.length;b<w;b++)for(_=C[b],O=I[b],N=0,D=_.length;N<D;N++)z=t(_[N],O[N],F),y?i(z.x,z.y+o[T-1].y,o[T-1].x+U):i(z.x,z.y,c+U)}!function(){if(E){var t;for(t=0*B,N=0;N<k;N++)n((V=A[N])[2]+t,V[1]+t,V[0]+t,!0);for(t=T+2*g,t*=B,N=0;N<k;N++)n((V=A[N])[0]+t,V[1]+t,V[2]+t,!1)}else{for(N=0;N<k;N++)n((V=A[N])[2],V[1],V[0],!0);for(N=0;N<k;N++)n((V=A[N])[0]+B*T,V[1]+B*T,V[2]+B*T,!1)}}(),function(){var t=0;for(r(L,t),t+=L.length,b=0,w=C.length;b<w;b++)r(_=C[b],t),t+=_.length}()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(t,e,r,i,n,o){return e=t.vertices[n].x,n=t.vertices[n].y,r=t.vertices[o].x,o=t.vertices[o].y,[new THREE.Vector2(t.vertices[i].x,t.vertices[i].y),new THREE.Vector2(e,n),new THREE.Vector2(r,o)]},generateBottomUV:function(t,e,r,i,n,o){return this.generateTopUV(t,e,r,i,n,o)},generateSideWallUV:function(t,e,r,i,n,o,a,s,h,l,c,u){e=t.vertices[n].x,r=t.vertices[n].y,n=t.vertices[n].z,i=t.vertices[o].x,h=t.vertices[o].y,o=t.vertices[o].z,l=t.vertices[a].x,c=t.vertices[a].y,a=t.vertices[a].z,u=t.vertices[s].x;var f=t.vertices[s].y;return t=t.vertices[s].z,Math.abs(r-h)<.01?[new THREE.Vector2(e,1-n),new THREE.Vector2(i,1-o),new THREE.Vector2(l,1-a),new THREE.Vector2(u,1-t)]:[new THREE.Vector2(r,1-n),new THREE.Vector2(h,1-o),new THREE.Vector2(c,1-a),new THREE.Vector2(f,1-t)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(t,e){THREE.Geometry.call(this),!1==t instanceof Array&&(t=[t]),this.addShapeList(t,e),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(t,e){for(var r=0,i=t.length;r<i;r++)this.addShape(t[r],e);return this},THREE.ShapeGeometry.prototype.addShape=function(t,e){void 0===e&&(e={});var r,i,n,o=e.material,a=void 0===e.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:e.UVGenerator,s=this.vertices.length,h=(r=t.extractPoints(void 0!==e.curveSegments?e.curveSegments:12)).shape,l=r.holes;if(!THREE.Shape.Utils.isClockWise(h))for(h=h.reverse(),r=0,i=l.length;r<i;r++)n=l[r],THREE.Shape.Utils.isClockWise(n)&&(l[r]=n.reverse());var c=THREE.Shape.Utils.triangulateShape(h,l);for(r=0,i=l.length;r<i;r++)n=l[r],h=h.concat(n);for(l=h.length,i=c.length,r=0;r<l;r++)n=h[r],this.vertices.push(new THREE.Vector3(n.x,n.y,0));for(r=0;r<i;r++)h=(l=c[r])[0]+s,n=l[1]+s,l=l[2]+s,this.faces.push(new THREE.Face3(h,n,l,null,null,o)),this.faceVertexUvs[0].push(a.generateBottomUV(this,t,e,h,n,l))},THREE.LatheGeometry=function(t,e,r,i){THREE.Geometry.call(this),e=e||12,r=r||0,i=i||2*Math.PI;for(var n=1/(t.length-1),o=1/e,a=0,s=e;a<=s;a++)for(var h=r+a*o*i,l=Math.cos(h),c=Math.sin(h),u=(h=0,t.length);h<u;h++){var f=t[h];(E=new THREE.Vector3).x=l*f.x-c*f.y,E.y=c*f.x+l*f.y,E.z=f.z,this.vertices.push(E)}for(r=t.length,a=0,s=e;a<s;a++)for(h=0,u=t.length-1;h<u;h++){e=c=h+r*a,i=c+r;l=c+1+r,c=c+1;var E,p=(f=a*o)+o,d=(E=h*n)+n;this.faces.push(new THREE.Face3(e,i,c)),this.faceVertexUvs[0].push([new THREE.Vector2(f,E),new THREE.Vector2(p,E),new THREE.Vector2(f,d)]),this.faces.push(new THREE.Face3(i,l,c)),this.faceVertexUvs[0].push([new THREE.Vector2(p,E),new THREE.Vector2(p,d),new THREE.Vector2(f,d)])}this.mergeVertices(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(t,e,r,i){THREE.Geometry.call(this),this.parameters={width:t,height:e,widthSegments:r,heightSegments:i};var n=t/2,o=e/2,a=(r=r||1)+1,s=(i=i||1)+1,h=t/r,l=e/i,c=new THREE.Vector3(0,0,1);for(t=0;t<s;t++){var u=t*l-o;for(e=0;e<a;e++)this.vertices.push(new THREE.Vector3(e*h-n,-u,0))}for(t=0;t<i;t++)for(e=0;e<r;e++){var f=e+a*t,E=(n=e+a*(t+1),o=e+1+a*(t+1),s=e+1+a*t,h=new THREE.Vector2(e/r,1-t/i),l=new THREE.Vector2(e/r,1-(t+1)/i),u=new THREE.Vector2((e+1)/r,1-(t+1)/i),new THREE.Vector2((e+1)/r,1-t/i));(f=new THREE.Face3(f,n,s)).normal.copy(c),f.vertexNormals.push(c.clone(),c.clone(),c.clone()),this.faces.push(f),this.faceVertexUvs[0].push([h,l,E]),(f=new THREE.Face3(n,o,s)).normal.copy(c),f.vertexNormals.push(c.clone(),c.clone(),c.clone()),this.faces.push(f),this.faceVertexUvs[0].push([l.clone(),u,E.clone()])}},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry=function(t,e,r,i,n,o){THREE.Geometry.call(this),t=t||0,e=e||50,n=void 0!==n?n:0,o=void 0!==o?o:2*Math.PI,r=void 0!==r?Math.max(3,r):8;var a,s=[],h=t,l=(e-t)/(i=void 0!==i?Math.max(1,i):8);for(t=0;t<i+1;t++){for(a=0;a<r+1;a++){var c=new THREE.Vector3,u=n+a/r*o;c.x=h*Math.cos(u),c.y=h*Math.sin(u),this.vertices.push(c),s.push(new THREE.Vector2((c.x/e+1)/2,(c.y/e+1)/2))}h+=l}for(e=new THREE.Vector3(0,0,1),t=0;t<i;t++)for(n=t*(r+1),a=0;a<r;a++)o=u=a+n,l=u+r+1,c=u+r+2,this.faces.push(new THREE.Face3(o,l,c,[e.clone(),e.clone(),e.clone()])),this.faceVertexUvs[0].push([s[o].clone(),s[l].clone(),s[c].clone()]),l=(o=u)+r+2,c=u+1,this.faces.push(new THREE.Face3(o,l,c,[e.clone(),e.clone(),e.clone()])),this.faceVertexUvs[0].push([s[o].clone(),s[l].clone(),s[c].clone()]);this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,h)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(t,e,r,i,n,o,a){THREE.Geometry.call(this),this.parameters={radius:t,widthSegments:e,heightSegments:r,phiStart:i,phiLength:n,thetaStart:o,thetaLength:a},t=t||50,e=Math.max(3,Math.floor(e)||8),r=Math.max(2,Math.floor(r)||6),i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI,o=void 0!==o?o:0,a=void 0!==a?a:Math.PI;var s,h,l=[],c=[];for(h=0;h<=r;h++){var u=[],f=[];for(s=0;s<=e;s++){var E=s/e,p=h/r;(d=new THREE.Vector3).x=-t*Math.cos(i+E*n)*Math.sin(o+p*a),d.y=t*Math.cos(o+p*a),d.z=t*Math.sin(i+E*n)*Math.sin(o+p*a),this.vertices.push(d),u.push(this.vertices.length-1),f.push(new THREE.Vector2(E,1-p))}l.push(u),c.push(f)}for(h=0;h<r;h++)for(s=0;s<e;s++){i=l[h][s+1],n=l[h][s],o=l[h+1][s],a=l[h+1][s+1];u=this.vertices[i].clone().normalize(),f=this.vertices[n].clone().normalize(),E=this.vertices[o].clone().normalize(),p=this.vertices[a].clone().normalize();var d=c[h][s+1].clone(),m=c[h][s].clone(),g=c[h+1][s].clone(),T=c[h+1][s+1].clone();Math.abs(this.vertices[i].y)===t?(d.x=(d.x+m.x)/2,this.faces.push(new THREE.Face3(i,o,a,[u,E,p])),this.faceVertexUvs[0].push([d,g,T])):Math.abs(this.vertices[o].y)===t?(g.x=(g.x+T.x)/2,this.faces.push(new THREE.Face3(i,n,o,[u,f,E])),this.faceVertexUvs[0].push([d,m,g])):(this.faces.push(new THREE.Face3(i,n,a,[u,f,p])),this.faceVertexUvs[0].push([d,m,T]),this.faces.push(new THREE.Face3(n,o,a,[f.clone(),E,p.clone()])),this.faceVertexUvs[0].push([m.clone(),g,T.clone()]))}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,t)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(t,e){e=e||{};var r=THREE.FontUtils.generateShapes(t,e);e.amount=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,r,e)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(t,e,r,i,n){THREE.Geometry.call(this),this.parameters={radius:t,tube:e,radialSegments:r,tubularSegments:i,arc:n},t=t||100,e=e||40,r=r||8,i=i||6,n=n||2*Math.PI;for(var o=new THREE.Vector3,a=[],s=[],h=0;h<=r;h++)for(var l=0;l<=i;l++){var c=l/i*n,u=h/r*Math.PI*2;o.x=t*Math.cos(c),o.y=t*Math.sin(c);var f=new THREE.Vector3;f.x=(t+e*Math.cos(u))*Math.cos(c),f.y=(t+e*Math.cos(u))*Math.sin(c),f.z=e*Math.sin(u),this.vertices.push(f),a.push(new THREE.Vector2(l/i,h/r)),s.push(f.clone().sub(o).normalize())}for(h=1;h<=r;h++)for(l=1;l<=i;l++)t=(i+1)*h+l-1,e=(i+1)*(h-1)+l-1,n=(i+1)*(h-1)+l,o=(i+1)*h+l,c=new THREE.Face3(t,e,o,[s[t].clone(),s[e].clone(),s[o].clone()]),this.faces.push(c),this.faceVertexUvs[0].push([a[t].clone(),a[e].clone(),a[o].clone()]),c=new THREE.Face3(e,n,o,[s[e].clone(),s[n].clone(),s[o].clone()]),this.faces.push(c),this.faceVertexUvs[0].push([a[e].clone(),a[n].clone(),a[o].clone()]);this.computeFaceNormals()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(t,e,r,i,n,o,a){function s(t,e,r,i,n){var o=Math.cos(t),a=Math.sin(t);return t*=e/r,o*=i*(2+(e=Math.cos(t)))*.5,a=i*(2+e)*a*.5,i=n*i*Math.sin(t)*.5,new THREE.Vector3(o,a,i)}THREE.Geometry.call(this),this.parameters={radius:t,tube:e,radialSegments:r,tubularSegments:i,p:n,q:o,heightScale:a},t=t||100,e=e||40,r=r||64,i=i||8,n=n||2,o=o||3,a=a||1;for(var h=Array(r),l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3,f=0;f<r;++f){h[f]=Array(i);var E=s(p=f/r*2*n*Math.PI,o,n,t,a),p=s(p+.01,o,n,t,a);for(l.subVectors(p,E),c.addVectors(p,E),u.crossVectors(l,c),c.crossVectors(u,l),u.normalize(),c.normalize(),p=0;p<i;++p){var d=p/i*2*Math.PI,m=-e*Math.cos(d),g=(d=e*Math.sin(d),new THREE.Vector3);g.x=E.x+m*c.x+d*u.x,g.y=E.y+m*c.y+d*u.y,g.z=E.z+m*c.z+d*u.z,h[f][p]=this.vertices.push(g)-1}}for(f=0;f<r;++f)for(p=0;p<i;++p)n=(f+1)%r,o=(p+1)%i,t=h[f][p],e=h[n][p],n=h[n][o],o=h[f][o],a=new THREE.Vector2(f/r,p/i),l=new THREE.Vector2((f+1)/r,p/i),c=new THREE.Vector2((f+1)/r,(p+1)/i),u=new THREE.Vector2(f/r,(p+1)/i),this.faces.push(new THREE.Face3(t,e,o)),this.faceVertexUvs[0].push([a,l,u]),this.faces.push(new THREE.Face3(e,n,o)),this.faceVertexUvs[0].push([l.clone(),c,u.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(t,e,r,i,n){THREE.Geometry.call(this),this.parameters={path:t,segments:e,radius:r,radialSegments:i,closed:n},r=r||1,i=i||8,n=n||!1;var o,a,s,h,l,c,u,f,E,p=[],d=(e=e||64)+1,m=new THREE.Vector3;for(f=(u=new THREE.TubeGeometry.FrenetFrames(t,e,n)).normals,E=u.binormals,this.tangents=u.tangents,this.normals=f,this.binormals=E,u=0;u<d;u++)for(p[u]=[],s=u/(d-1),c=t.getPointAt(s),o=f[u],a=E[u],s=0;s<i;s++)h=s/i*2*Math.PI,l=-r*Math.cos(h),h=r*Math.sin(h),m.copy(c),m.x+=l*o.x+h*a.x,m.y+=l*o.y+h*a.y,m.z+=l*o.z+h*a.z,p[u][s]=this.vertices.push(new THREE.Vector3(m.x,m.y,m.z))-1;for(u=0;u<e;u++)for(s=0;s<i;s++)d=n?(u+1)%e:u+1,m=(s+1)%i,t=p[u][s],r=p[d][s],d=p[d][m],m=p[u][m],f=new THREE.Vector2(u/e,s/i),E=new THREE.Vector2((u+1)/e,s/i),o=new THREE.Vector2((u+1)/e,(s+1)/i),a=new THREE.Vector2(u/e,(s+1)/i),this.faces.push(new THREE.Face3(t,r,m)),this.faceVertexUvs[0].push([f,E,a]),this.faces.push(new THREE.Face3(r,d,m)),this.faceVertexUvs[0].push([E.clone(),o,a.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(t,e,r){new THREE.Vector3;var i=new THREE.Vector3;new THREE.Vector3;var n,o,a,s=[],h=[],l=[],c=new THREE.Vector3,u=new THREE.Matrix4;for(e+=1,this.tangents=s,this.normals=h,this.binormals=l,n=0;n<e;n++)o=n/(e-1),s[n]=t.getTangentAt(o),s[n].normalize();for(h[0]=new THREE.Vector3,l[0]=new THREE.Vector3,t=Number.MAX_VALUE,n=Math.abs(s[0].x),o=Math.abs(s[0].y),a=Math.abs(s[0].z),n<=t&&(t=n,i.set(1,0,0)),o<=t&&(t=o,i.set(0,1,0)),a<=t&&i.set(0,0,1),c.crossVectors(s[0],i).normalize(),h[0].crossVectors(s[0],c),l[0].crossVectors(s[0],h[0]),n=1;n<e;n++)h[n]=h[n-1].clone(),l[n]=l[n-1].clone(),c.crossVectors(s[n-1],s[n]),1e-4<c.length()&&(c.normalize(),i=Math.acos(THREE.Math.clamp(s[n-1].dot(s[n]),-1,1)),h[n].applyMatrix4(u.makeRotationAxis(c,i))),l[n].crossVectors(s[n],h[n]);if(r)for(i=Math.acos(THREE.Math.clamp(h[0].dot(h[e-1]),-1,1)),i/=e-1,0<s[0].dot(c.crossVectors(h[0],h[e-1]))&&(i=-i),n=1;n<e;n++)h[n].applyMatrix4(u.makeRotationAxis(s[n],i*n)),l[n].crossVectors(s[n],h[n])},THREE.PolyhedronGeometry=function(t,e,r,i){function f(t){var e=t.normalize().clone();e.index=p.vertices.push(e)-1;var r=Math.atan2(t.z,-t.x)/2/Math.PI+.5;return t=Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))/Math.PI+.5,e.uv=new THREE.Vector2(r,1-t),e}function E(t,e,r){var i=new THREE.Face3(t.index,e.index,r.index,[t.clone(),e.clone(),r.clone()]);p.faces.push(i),m.copy(t).add(e).add(r).divideScalar(3),i=Math.atan2(m.z,-m.x),p.faceVertexUvs[0].push([o(t.uv,t,i),o(e.uv,e,i),o(r.uv,r,i)])}function n(t,e){var r=Math.pow(2,e);Math.pow(4,e);for(var i=f(p.vertices[t.a]),n=f(p.vertices[t.b]),o=f(p.vertices[t.c]),a=[],s=0;s<=r;s++){a[s]=[];for(var h=f(i.clone().lerp(o,s/r)),l=f(n.clone().lerp(o,s/r)),c=r-s,u=0;u<=c;u++)a[s][u]=0==u&&s==r?h:f(h.clone().lerp(l,u/c))}for(s=0;s<r;s++)for(u=0;u<2*(r-s)-1;u++)i=Math.floor(u/2),0==u%2?E(a[s][i+1],a[s+1][i],a[s][i]):E(a[s][i+1],a[s+1][i+1],a[s+1][i])}function o(t,e,r){return r<0&&1===t.x&&(t=new THREE.Vector2(t.x-1,t.y)),0===e.x&&0===e.z&&(t=new THREE.Vector2(r/2/Math.PI+.5,t.y)),t.clone()}THREE.Geometry.call(this),r=r||1,i=i||0;for(var p=this,a=0,s=t.length;a<s;a+=3)f(new THREE.Vector3(t[a],t[a+1],t[a+2]));t=this.vertices;var h=[],l=a=0;for(s=e.length;a<s;a+=3,l++){var c=t[e[a]],u=t[e[a+1]],d=t[e[a+2]];h[l]=new THREE.Face3(c.index,u.index,d.index,[c.clone(),u.clone(),d.clone()])}var m=new THREE.Vector3;for(a=0,s=h.length;a<s;a++)n(h[a],i);for(a=0,s=this.faceVertexUvs[0].length;a<s;a++)i=(e=this.faceVertexUvs[0][a])[0].x,t=e[1].x,h=e[2].x,l=Math.max(i,Math.max(t,h)),c=Math.min(i,Math.min(t,h)),.9<l&&c<.1&&(i<.2&&(e[0].x+=1),t<.2&&(e[1].x+=1),h<.2&&(e[2].x+=1));for(a=0,s=this.vertices.length;a<s;a++)this.vertices[a].multiplyScalar(r);this.mergeVertices(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(t,e){this.parameters={radius:t,detail:e};var r=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(t,e){this.parameters={radius:t,detail:e},THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(t,e){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(t,e,r){THREE.Geometry.call(this);var i,n,o,a,s,h,l,c,u=this.vertices,f=this.faces,E=this.faceVertexUvs[0],p=e+1;for(i=0;i<=r;i++)for(a=i/r,n=0;n<=e;n++)o=t(o=n/e,a),u.push(o);for(i=0;i<r;i++)for(n=0;n<e;n++)u=(t=i*p+n)+1,a=(i+1)*p+n+1,o=(i+1)*p+n,s=new THREE.Vector2(n/e,i/r),h=new THREE.Vector2((n+1)/e,i/r),l=new THREE.Vector2((n+1)/e,(i+1)/r),c=new THREE.Vector2(n/e,(i+1)/r),f.push(new THREE.Face3(t,u,o)),E.push([s,h,c]),f.push(new THREE.Face3(u,a,o)),E.push([h.clone(),l,c.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(t){t=t||1;var e=new Float32Array([0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t]),r=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]);(t=new THREE.BufferGeometry).addAttribute("position",new THREE.BufferAttribute(e,3)),t.addAttribute("color",new THREE.BufferAttribute(r,3)),e=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),THREE.Line.call(this,t,e,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(){var a=new THREE.Geometry;a.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var s=new THREE.CylinderGeometry(0,.5,1,5,1);return s.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),function(t,e,r,i,n,o){THREE.Object3D.call(this),void 0===i&&(i=16776960),void 0===r&&(r=1),void 0===n&&(n=.2*r),void 0===o&&(o=.2*n),this.position.copy(e),this.line=new THREE.Line(a,new THREE.LineBasicMaterial({color:i})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new THREE.Mesh(s,new THREE.MeshBasicMaterial({color:i})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(r,n,o)}}(),THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(){var e,r=new THREE.Vector3;return function(t){.99999<t.y?this.quaternion.set(0,0,0,1):t.y<-.99999?this.quaternion.set(1,0,0,0):(r.set(t.z,0,-t.x).normalize(),e=Math.acos(t.y),this.quaternion.setFromAxisAngle(r,e))}}(),THREE.ArrowHelper.prototype.setLength=function(t,e,r){void 0===e&&(e=.2*t),void 0===r&&(r=.2*e),this.line.scale.set(1,t,1),this.line.updateMatrix(),this.cone.scale.set(r,e,r),this.cone.position.y=t,this.cone.updateMatrix()},THREE.ArrowHelper.prototype.setColor=function(t){this.line.material.color.set(t),this.cone.material.color.set(t)},THREE.BoxHelper=function(t){var e=new THREE.BufferGeometry;e.addAttribute("position",new THREE.BufferAttribute(new Float32Array(72),3)),THREE.Line.call(this,e,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces),void 0!==t&&this.update(t)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.update=function(t){null===(r=t.geometry).boundingBox&&r.computeBoundingBox();var e=r.boundingBox.min,r=r.boundingBox.max,i=this.geometry.attributes.position.array;i[0]=r.x,i[1]=r.y,i[2]=r.z,i[3]=e.x,i[4]=r.y,i[5]=r.z,i[6]=e.x,i[7]=r.y,i[8]=r.z,i[9]=e.x,i[10]=e.y,i[11]=r.z,i[12]=e.x,i[13]=e.y,i[14]=r.z,i[15]=r.x,i[16]=e.y,i[17]=r.z,i[18]=r.x,i[19]=e.y,i[20]=r.z,i[21]=r.x,i[22]=r.y,i[23]=r.z,i[24]=r.x,i[25]=r.y,i[26]=e.z,i[27]=e.x,i[28]=r.y,i[29]=e.z,i[30]=e.x,i[31]=r.y,i[32]=e.z,i[33]=e.x,i[34]=e.y,i[35]=e.z,i[36]=e.x,i[37]=e.y,i[38]=e.z,i[39]=r.x,i[40]=e.y,i[41]=e.z,i[42]=r.x,i[43]=e.y,i[44]=e.z,i[45]=r.x,i[46]=r.y,i[47]=e.z,i[48]=r.x,i[49]=r.y,i[50]=r.z,i[51]=r.x,i[52]=r.y,i[53]=e.z,i[54]=e.x,i[55]=r.y,i[56]=r.z,i[57]=e.x,i[58]=r.y,i[59]=e.z,i[60]=e.x,i[61]=e.y,i[62]=r.z,i[63]=e.x,i[64]=e.y,i[65]=e.z,i[66]=r.x,i[67]=e.y,i[68]=r.z,i[69]=r.x,i[70]=e.y,i[71]=e.z,this.geometry.attributes.position.needsUpdate=!0,this.geometry.computeBoundingSphere(),this.matrixAutoUpdate=!1,this.matrixWorld=t.matrixWorld},THREE.BoundingBoxHelper=function(t,e){var r=void 0!==e?e:8947848;this.object=t,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:r,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(t){function e(t,e,r){i(t,r),i(e,r)}function i(t,e){r.vertices.push(new THREE.Vector3),r.colors.push(new THREE.Color(e)),void 0===o[t]&&(o[t]=[]),o[t].push(r.vertices.length-1)}var r=new THREE.Geometry,n=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),o={};e("n1","n2",16755200),e("n2","n4",16755200),e("n4","n3",16755200),e("n3","n1",16755200),e("f1","f2",16755200),e("f2","f4",16755200),e("f4","f3",16755200),e("f3","f1",16755200),e("n1","f1",16755200),e("n2","f2",16755200),e("n3","f3",16755200),e("n4","f4",16755200),e("p","n1",16711680),e("p","n2",16711680),e("p","n3",16711680),e("p","n4",16711680),e("u1","u2",43775),e("u2","u3",43775),e("u3","u1",43775),e("c","t",16777215),e("p","c",3355443),e("cn1","cn2",3355443),e("cn3","cn4",3355443),e("cf1","cf2",3355443),e("cf3","cf4",3355443),THREE.Line.call(this,r,n,THREE.LinePieces),this.camera=t,this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){var o=new THREE.Vector3,a=new THREE.Camera,s=new THREE.Projector;return function(){function t(t,e,r,i){if(o.set(e,r,i),s.unprojectVector(o,a),void 0!==(t=n.pointMap[t]))for(e=0,r=t.length;e<r;e++)n.geometry.vertices[t[e]].copy(o)}var n=this;a.projectionMatrix.copy(this.camera.projectionMatrix),t("c",0,0,-1),t("t",0,0,1),t("n1",-1,-1,-1),t("n2",1,-1,-1),t("n3",-1,1,-1),t("n4",1,1,-1),t("f1",-1,-1,1),t("f2",1,-1,1),t("f3",-1,1,1),t("f4",1,1,1),t("u1",.7,1.1,-1),t("u2",-.7,1.1,-1),t("u3",0,2,-1),t("cf1",-1,0,1),t("cf2",1,0,1),t("cf3",0,-1,1),t("cf4",0,1,1),t("cn1",-1,0,-1),t("cn2",1,0,-1),t("cn3",0,-1,-1),t("cn4",0,1,-1),this.geometry.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(t,e){THREE.Object3D.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,e=e||1;var r=new THREE.Geometry;r.vertices.push(new THREE.Vector3(-e,e,0),new THREE.Vector3(e,e,0),new THREE.Vector3(e,-e,0),new THREE.Vector3(-e,-e,0),new THREE.Vector3(-e,e,0));var i=new THREE.LineBasicMaterial({fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Line(r,i),this.add(this.lightPlane),(r=new THREE.Geometry).vertices.push(new THREE.Vector3,new THREE.Vector3),(i=new THREE.LineBasicMaterial({fog:!1})).color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(r,i),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3;return function(){t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),r.subVectors(e,t),this.lightPlane.lookAt(r),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(r),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.EdgesHelper=function(t,e){var r=void 0!==e?e:16777215,i=[0,0],n={},o=function(t,e){return t-e},a=["a","b","c"],s=new THREE.BufferGeometry;(h=t.geometry.clone()).mergeVertices(),h.computeFaceNormals();for(var h,l=h.vertices,c=0,u=0,f=(h=h.faces).length;u<f;u++)for(var E=h[u],p=0;p<3;p++){i[0]=E[a[p]],i[1]=E[a[(p+1)%3]],i.sort(o);var d=i.toString();void 0===n[d]?(n[d]={vert1:i[0],vert2:i[1],face1:u,face2:void 0},c++):n[d].face2=u}for(d in s.addAttribute("position",new THREE.Float32Attribute(6*c,3)),i=s.attributes.position.array,o=0,n)(void 0===(a=n[d]).face2||h[a.face1].normal.dot(h[a.face2].normal)<.9999)&&(c=l[a.vert1],i[o++]=c.x,i[o++]=c.y,i[o++]=c.z,c=l[a.vert2],i[o++]=c.x,i[o++]=c.y,i[o++]=c.z);THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=t.matrixWorld},THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper=function(t,e,r,i){this.object=t,this.size=void 0!==e?e:1,t=void 0!==r?r:16776960,i=void 0!==i?i:1,e=new THREE.Geometry,r=0;for(var n=this.object.geometry.faces.length;r<n;r++)e.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,e,new THREE.LineBasicMaterial({color:t,linewidth:i}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper.prototype.update=function(){var t=this.geometry.vertices,e=this.object,r=e.geometry.vertices,i=e.geometry.faces,n=e.matrixWorld;e.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(n);for(var o=e=0,a=i.length;e<a;e++,o+=2){var s=i[e];t[o].copy(r[s.a]).add(r[s.b]).add(r[s.c]).divideScalar(3).applyMatrix4(n),t[o+1].copy(s.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(t[o])}return this.geometry.verticesNeedUpdate=!0,this},THREE.GridHelper=function(t,e){var r=new THREE.Geometry,i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var n=-t;n<=t;n+=e){r.vertices.push(new THREE.Vector3(-t,0,n),new THREE.Vector3(t,0,n),new THREE.Vector3(n,0,-t),new THREE.Vector3(n,0,t));var o=0===n?this.color1:this.color2;r.colors.push(o,o,o,o)}THREE.Line.call(this,r,i,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.GridHelper.prototype.setColors=function(t,e){this.color1.set(t),this.color2.set(e),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(t,e){for(THREE.Object3D.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color],(t=new THREE.SphereGeometry(e,4,2)).applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2)),e=0;e<8;e++)t.faces[e].color=this.colors[e<4?0:1];e=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0}),this.lightSphere=new THREE.Mesh(t,e),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var t=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(t,e){this.light=t,this.light.updateMatrixWorld();var r=new THREE.SphereGeometry(e,4,2),i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,r,i),this.matrixWorld=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SkeletonHelper=function(t){this.bones=this.getBoneList(t);for(var e=new THREE.Geometry,r=0;r<this.bones.length;r++)this.bones[r].parent instanceof THREE.Bone&&(e.vertices.push(new THREE.Vector3),e.vertices.push(new THREE.Vector3),e.colors.push(new THREE.Color(0,0,1)),e.colors.push(new THREE.Color(0,1,0)));r=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0}),THREE.Line.call(this,e,r,THREE.LinePieces),this.root=t,this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,this.update()},
THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype),THREE.SkeletonHelper.prototype.getBoneList=function(t){var e=[];t instanceof THREE.Bone&&e.push(t);for(var r=0;r<t.children.length;r++)e.push.apply(e,this.getBoneList(t.children[r]));return e},THREE.SkeletonHelper.prototype.update=function(){for(var t=this.geometry,e=(new THREE.Matrix4).getInverse(this.root.matrixWorld),r=new THREE.Matrix4,i=0,n=0;n<this.bones.length;n++){var o=this.bones[n];o.parent instanceof THREE.Bone&&(r.multiplyMatrices(e,o.matrixWorld),t.vertices[i].setFromMatrixPosition(r),r.multiplyMatrices(e,o.parent.matrixWorld),t.vertices[i+1].setFromMatrixPosition(r),i+=2)}t.verticesNeedUpdate=!0,t.computeBoundingSphere()},THREE.SpotLightHelper=function(t){THREE.Object3D.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,(t=new THREE.CylinderGeometry(0,1,1,8,1,!0)).applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),t.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var e=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(t,e),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var r=new THREE.Vector3,i=new THREE.Vector3;return function(){var t=this.light.distance?this.light.distance:1e4,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),r.setFromMatrixPosition(this.light.matrixWorld),i.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(i.sub(r)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(t,e,r,i){this.object=t,this.size=void 0!==e?e:1,e=void 0!==r?r:16711680,i=void 0!==i?i:1,r=new THREE.Geometry;for(var n=0,o=(t=t.geometry.faces).length;n<o;n++)for(var a=0,s=t[n].vertexNormals.length;a<s;a++)r.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,r,new THREE.LineBasicMaterial({color:e,linewidth:i}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexNormalsHelper.prototype.update=function(){var f=new THREE.Vector3;return function(t){t=["a","b","c","d"],this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var e=this.geometry.vertices,r=this.object.geometry.vertices,i=this.object.geometry.faces,n=this.object.matrixWorld,o=0,a=0,s=i.length;a<s;a++)for(var h=i[a],l=0,c=h.vertexNormals.length;l<c;l++){var u=h.vertexNormals[l];e[o].copy(r[h[t[l]]]).applyMatrix4(n),f.copy(u).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),f.add(e[o]),e[o+=1].copy(f),o+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.VertexTangentsHelper=function(t,e,r,i){this.object=t,this.size=void 0!==e?e:1,e=void 0!==r?r:255,i=void 0!==i?i:1,r=new THREE.Geometry;for(var n=0,o=(t=t.geometry.faces).length;n<o;n++)for(var a=0,s=t[n].vertexTangents.length;a<s;a++)r.vertices.push(new THREE.Vector3),r.vertices.push(new THREE.Vector3);THREE.Line.call(this,r,new THREE.LineBasicMaterial({color:e,linewidth:i}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.update()},THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexTangentsHelper.prototype.update=function(){var f=new THREE.Vector3;return function(t){t=["a","b","c","d"],this.object.updateMatrixWorld(!0);for(var e=this.geometry.vertices,r=this.object.geometry.vertices,i=this.object.geometry.faces,n=this.object.matrixWorld,o=0,a=0,s=i.length;a<s;a++)for(var h=i[a],l=0,c=h.vertexTangents.length;l<c;l++){var u=h.vertexTangents[l];e[o].copy(r[h[t[l]]]).applyMatrix4(n),f.copy(u).transformDirection(n).multiplyScalar(this.size),f.add(e[o]),e[o+=1].copy(f),o+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.WireframeHelper=function(t,e){var r=void 0!==e?e:16777215,i=[0,0],n={},o=function(t,e){return t-e},a=["a","b","c"],s=new THREE.BufferGeometry;if(t.geometry instanceof THREE.Geometry){for(var h=t.geometry.vertices,l=t.geometry.faces,c=0,u=new Uint32Array(6*l.length),f=0,E=l.length;f<E;f++)for(var p=l[f],d=0;d<3;d++){i[0]=p[a[d]],i[1]=p[a[(d+1)%3]],i.sort(o),void 0===n[g=i.toString()]&&(u[2*c]=i[0],u[2*c+1]=i[1],n[g]=!0,c++)}for(i=new Float32Array(6*c),f=0,E=c;f<E;f++)for(d=0;d<2;d++)c=h[u[2*f+d]],i[(a=6*f+3*d)+0]=c.x,i[a+1]=c.y,i[a+2]=c.z;s.addAttribute("position",new THREE.BufferAttribute(i,3))}else if(t.geometry instanceof THREE.BufferGeometry){if(void 0!==t.geometry.attributes.index){h=t.geometry.attributes.position.array,E=t.geometry.attributes.index.array,l=t.geometry.offsets,c=0,u=new Uint32Array(2*E.length),p=0;for(var m=l.length;p<m;++p){d=l[p].start;for(var g=l[p].count,T=(a=l[p].index,f=d,d+g);f<T;f+=3)for(d=0;d<3;d++)i[0]=a+E[f+d],i[1]=a+E[f+(d+1)%3],i.sort(o),void 0===n[g=i.toString()]&&(u[2*c]=i[0],u[2*c+1]=i[1],n[g]=!0,c++)}for(i=new Float32Array(6*c),f=0,E=c;f<E;f++)for(d=0;d<2;d++)a=6*f+3*d,c=3*u[2*f+d],i[a+0]=h[c],i[a+1]=h[c+1],i[a+2]=h[c+2]}else for(u=(c=(h=t.geometry.attributes.position.array).length/3)/3,i=new Float32Array(6*c),f=0,E=u;f<E;f++)for(d=0;d<3;d++)u=9*f+3*d,i[(a=18*f+6*d)+0]=h[u],i[a+1]=h[u+1],i[a+2]=h[u+2],c=9*f+(d+1)%3*3,i[a+3]=h[c],i[a+4]=h[c+1],i[a+5]=h[c+2];s.addAttribute("position",new THREE.BufferAttribute(i,3))}THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=t.matrixWorld},THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype),THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(t,e,r,i,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,(this.customUpdateCallback=void 0)!==t&&this.add(t,e,r,i,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(t,e,r,i,n,o){void 0===e&&(e=-1),void 0===r&&(r=0),void 0===o&&(o=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===i&&(i=THREE.NormalBlending),r=Math.min(r,Math.max(0,r)),this.lensFlares.push({texture:t,size:e,distance:r,x:0,y:0,z:0,scale:1,rotation:1,opacity:o,color:n,blending:i})},THREE.LensFlare.prototype.updateLensFlares=function(){var t,e,r=this.lensFlares.length,i=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(t=0;t<r;t++)(e=this.lensFlares[t]).x=this.positionScreen.x+i*e.distance,e.y=this.positionScreen.y+n*e.distance,e.wantedRotation=e.x*Math.PI*.25,e.rotation+=.25*(e.wantedRotation-e.rotation)},THREE.MorphBlendMesh=function(t,e){THREE.Mesh.call(this,t,e),this.animationsMap={},this.animationsList=[];var r=this.geometry.morphTargets.length;this.createAnimation("__default",0,r-1,r/1),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(t,e,r,i){e={startFrame:e,endFrame:r,length:r-e+1,fps:i,duration:(r-e)/i,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1},this.animationsMap[t]=e,this.animationsList.push(e)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(t){for(var e,r=/([a-z]+)_?(\d+)/,i={},n=this.geometry,o=0,a=n.morphTargets.length;o<a;o++){var s=n.morphTargets[o].name.match(r);if(s&&1<s.length){var h=s[1];i[h]||(i[h]={start:Infinity,end:-Infinity}),o<(s=i[h]).start&&(s.start=o),o>s.end&&(s.end=o),e||(e=h)}}for(h in i)s=i[h],this.createAnimation(h,s.start,s.end,t);this.firstAnimation=e},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(t){(t=this.animationsMap[t])&&(t.direction=1,t.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(t){(t=this.animationsMap[t])&&(t.direction=-1,t.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(t,e){var r=this.animationsMap[t];r&&(r.fps=e,r.duration=(r.end-r.start)/r.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(t,e){var r=this.animationsMap[t];r&&(r.duration=e,r.fps=(r.end-r.start)/r.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(t,e){var r=this.animationsMap[t];r&&(r.weight=e)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(t,e){var r=this.animationsMap[t];r&&(r.time=e)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(t){var e=0;return(t=this.animationsMap[t])&&(e=t.time),e},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(t){var e=-1;return(t=this.animationsMap[t])&&(e=t.duration),e},THREE.MorphBlendMesh.prototype.playAnimation=function(t){var e=this.animationsMap[t];e?(e.time=0,e.active=!0):console.warn("animation["+t+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(t){(t=this.animationsMap[t])&&(t.active=!1)},THREE.MorphBlendMesh.prototype.update=function(t){for(var e=0,r=this.animationsList.length;e<r;e++){var i=this.animationsList[e];if(i.active){var n=i.duration/i.length;i.time+=i.direction*t,i.mirroredLoop?(i.time>i.duration||i.time<0)&&(i.direction*=-1,i.time>i.duration&&(i.time=i.duration,i.directionBackwards=!0),i.time<0&&(i.time=0,i.directionBackwards=!1)):(i.time%=i.duration,i.time<0&&(i.time+=i.duration));var o=i.startFrame+THREE.Math.clamp(Math.floor(i.time/n),0,i.length-1),a=i.weight;o!==i.currentFrame&&(this.morphTargetInfluences[i.lastFrame]=0,this.morphTargetInfluences[i.currentFrame]=1*a,this.morphTargetInfluences[o]=0,i.lastFrame=i.currentFrame,i.currentFrame=o),n=i.time%n/n,i.directionBackwards&&(n=1-n),this.morphTargetInfluences[i.currentFrame]=n*a,this.morphTargetInfluences[i.lastFrame]=(1-n)*a}}},THREE.LensFlarePlugin=function(){function e(t,e){var r=T.createProgram(),i=T.createShader(T.FRAGMENT_SHADER),n=T.createShader(T.VERTEX_SHADER),o="precision "+e+" float;\n";return T.shaderSource(i,o+t.fragmentShader),T.shaderSource(n,o+t.vertexShader),T.compileShader(i),T.compileShader(n),T.attachShader(r,i),T.attachShader(r,n),T.linkProgram(r),r}var T,v,r,i,n,y,R,x,H,_,b,w,M,S=[];this.init=function(t){T=t.context,r=(v=t).getPrecision(),i=new Float32Array(16),n=new Uint16Array(6),t=0,i[t++]=-1,i[t++]=-1,i[t++]=0,i[t++]=0,i[t++]=1,i[t++]=-1,i[t++]=1,i[t++]=0,i[t++]=1,i[t++]=1,i[t++]=1,i[t++]=1,i[t++]=-1,i[t++]=1,i[t++]=0,i[t++]=1,t=0,n[t++]=0,n[t++]=1,n[t++]=2,n[t++]=0,n[t++]=2,n[t++]=3,y=T.createBuffer(),R=T.createBuffer(),T.bindBuffer(T.ARRAY_BUFFER,y),T.bufferData(T.ARRAY_BUFFER,i,T.STATIC_DRAW),T.bindBuffer(T.ELEMENT_ARRAY_BUFFER,R),T.bufferData(T.ELEMENT_ARRAY_BUFFER,n,T.STATIC_DRAW),x=T.createTexture(),H=T.createTexture(),T.bindTexture(T.TEXTURE_2D,x),T.texImage2D(T.TEXTURE_2D,0,T.RGB,16,16,0,T.RGB,T.UNSIGNED_BYTE,null),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_WRAP_S,T.CLAMP_TO_EDGE),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_WRAP_T,T.CLAMP_TO_EDGE),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_MAG_FILTER,T.NEAREST),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_MIN_FILTER,T.NEAREST),T.bindTexture(T.TEXTURE_2D,H),T.texImage2D(T.TEXTURE_2D,0,T.RGBA,16,16,0,T.RGBA,T.UNSIGNED_BYTE,null),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_WRAP_S,T.CLAMP_TO_EDGE),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_WRAP_T,T.CLAMP_TO_EDGE),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_MAG_FILTER,T.NEAREST),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_MIN_FILTER,T.NEAREST),T.getParameter(T.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(_=!1,b=e(THREE.ShaderFlares.lensFlare,r)):(_=!0,b=e(THREE.ShaderFlares.lensFlareVertexTexture,r)),M={},(w={}).vertex=T.getAttribLocation(b,"position"),w.uv=T.getAttribLocation(b,"uv"),M.renderType=T.getUniformLocation(b,"renderType"),M.map=T.getUniformLocation(b,"map"),M.occlusionMap=T.getUniformLocation(b,"occlusionMap"),M.opacity=T.getUniformLocation(b,"opacity"),M.color=T.getUniformLocation(b,"color"),M.scale=T.getUniformLocation(b,"scale"),M.rotation=T.getUniformLocation(b,"rotation"),M.screenPosition=T.getUniformLocation(b,"screenPosition")},this.render=function(t,e,r,i){if(S.length=0,t.traverseVisible(function(t){t instanceof THREE.LensFlare&&S.push(t)}),0!==S.length){t=new THREE.Vector3;var n=i/r,o=.5*r,a=.5*i,s=16/i,h=new THREE.Vector2(s*n,s),l=new THREE.Vector3(1,1,0),c=new THREE.Vector2(1,1),u=M;s=w;T.useProgram(b),T.enableVertexAttribArray(w.vertex),T.enableVertexAttribArray(w.uv),T.uniform1i(u.occlusionMap,0),T.uniform1i(u.map,1),T.bindBuffer(T.ARRAY_BUFFER,y),T.vertexAttribPointer(s.vertex,2,T.FLOAT,!1,16,0),T.vertexAttribPointer(s.uv,2,T.FLOAT,!1,16,8),T.bindBuffer(T.ELEMENT_ARRAY_BUFFER,R),T.disable(T.CULL_FACE),T.depthMask(!1);for(var f=0,E=S.length;f<E;f++){s=16/i,h.set(s*n,s);var p=S[f];if(t.set(p.matrixWorld.elements[12],p.matrixWorld.elements[13],p.matrixWorld.elements[14]),t.applyMatrix4(e.matrixWorldInverse),t.applyProjection(e.projectionMatrix),l.copy(t),c.x=l.x*o+o,c.y=l.y*a+a,_||0<c.x&&c.x<r&&0<c.y&&c.y<i){T.activeTexture(T.TEXTURE1),T.bindTexture(T.TEXTURE_2D,x),T.copyTexImage2D(T.TEXTURE_2D,0,T.RGB,c.x-8,c.y-8,16,16,0),T.uniform1i(u.renderType,0),T.uniform2f(u.scale,h.x,h.y),T.uniform3f(u.screenPosition,l.x,l.y,l.z),T.disable(T.BLEND),T.enable(T.DEPTH_TEST),T.drawElements(T.TRIANGLES,6,T.UNSIGNED_SHORT,0),T.activeTexture(T.TEXTURE0),T.bindTexture(T.TEXTURE_2D,H),T.copyTexImage2D(T.TEXTURE_2D,0,T.RGBA,c.x-8,c.y-8,16,16,0),T.uniform1i(u.renderType,1),T.disable(T.DEPTH_TEST),T.activeTexture(T.TEXTURE1),T.bindTexture(T.TEXTURE_2D,x),T.drawElements(T.TRIANGLES,6,T.UNSIGNED_SHORT,0),p.positionScreen.copy(l),p.customUpdateCallback?p.customUpdateCallback(p):p.updateLensFlares(),T.uniform1i(u.renderType,2),T.enable(T.BLEND);for(var d=0,m=p.lensFlares.length;d<m;d++){var g=p.lensFlares[d];.001<g.opacity&&.001<g.scale&&(l.x=g.x,l.y=g.y,l.z=g.z,s=g.size*g.scale/i,h.x=s*n,h.y=s,T.uniform3f(u.screenPosition,l.x,l.y,l.z),T.uniform2f(u.scale,h.x,h.y),T.uniform1f(u.rotation,g.rotation),T.uniform1f(u.opacity,g.opacity),T.uniform3f(u.color,g.color.r,g.color.g,g.color.b),v.setBlending(g.blending,g.blendEquation,g.blendSrc,g.blendDst),v.setTexture(g.texture,1),T.drawElements(T.TRIANGLES,6,T.UNSIGNED_SHORT,0))}}}T.enable(T.CULL_FACE),T.enable(T.DEPTH_TEST),T.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){function p(t,e,r){if(e.visible){var i=t.__webglObjects[e.id];if(i&&e.castShadow&&(!1===e.frustumCulled||!0===R.intersectsObject(e)))for(var n=0,o=i.length;n<o;n++){var a=i[n];e._modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),w.push(a)}for(n=0,o=e.children.length;n<o;n++)p(t,e.children[n],r)}}var d,m,g,T,v,y,R=new THREE.Frustum,x=new THREE.Matrix4,H=new THREE.Vector3,_=new THREE.Vector3,b=new THREE.Vector3,w=[];this.init=function(t){d=t.context,m=t,t=THREE.ShaderLib.depthRGBA;var e=THREE.UniformsUtils.clone(t.uniforms);g=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:e}),T=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:e,morphTargets:!0}),v=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:e,skinning:!0}),y=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:e,morphTargets:!0,skinning:!0}),g._shadowPass=!0,T._shadowPass=!0,v._shadowPass=!0,y._shadowPass=!0},this.render=function(t,e){m.shadowMapEnabled&&m.shadowMapAutoUpdate&&this.update(t,e)},this.update=function(t,e){var r,i,n,o,a,s,h,l,c=[];for(o=0,d.clearColor(1,1,1,1),d.disable(d.BLEND),d.enable(d.CULL_FACE),d.frontFace(d.CCW),m.shadowMapCullFace===THREE.CullFaceFront?d.cullFace(d.FRONT):d.cullFace(d.BACK),m.setDepthTest(!0),r=0,i=t.__lights.length;r<i;r++)if((n=t.__lights[r]).castShadow)if(n instanceof THREE.DirectionalLight&&n.shadowCascade)for(a=0;a<n.shadowCascadeCount;a++){var u;if(n.shadowCascadeArray[a])u=n.shadowCascadeArray[a];else{h=n;var f=a;(u=new THREE.DirectionalLight).isVirtual=!0,u.onlyShadow=!0,u.castShadow=!0,u.shadowCameraNear=h.shadowCameraNear,u.shadowCameraFar=h.shadowCameraFar,u.shadowCameraLeft=h.shadowCameraLeft,u.shadowCameraRight=h.shadowCameraRight,u.shadowCameraBottom=h.shadowCameraBottom,u.shadowCameraTop=h.shadowCameraTop,u.shadowCameraVisible=h.shadowCameraVisible,u.shadowDarkness=h.shadowDarkness,u.shadowBias=h.shadowCascadeBias[f],u.shadowMapWidth=h.shadowCascadeWidth[f],u.shadowMapHeight=h.shadowCascadeHeight[f],u.pointsWorld=[],u.pointsFrustum=[],l=u.pointsWorld,s=u.pointsFrustum;for(var E=0;E<8;E++)l[E]=new THREE.Vector3,s[E]=new THREE.Vector3;l=h.shadowCascadeNearZ[f],h=h.shadowCascadeFarZ[f],s[0].set(-1,-1,l),s[1].set(1,-1,l),s[2].set(-1,1,l),s[3].set(1,1,l),s[4].set(-1,-1,h),s[5].set(1,-1,h),s[6].set(-1,1,h),s[7].set(1,1,h),u.originalCamera=e,(s=new THREE.Gyroscope).position.copy(n.shadowCascadeOffset),s.add(u),s.add(u.target),e.add(s),n.shadowCascadeArray[a]=u,console.log("Created virtualLight",u)}l=a,(h=(f=n).shadowCascadeArray[l]).position.copy(f.position),h.target.position.copy(f.target.position),h.lookAt(h.target),h.shadowCameraVisible=f.shadowCameraVisible,h.shadowDarkness=f.shadowDarkness,h.shadowBias=f.shadowCascadeBias[l],s=f.shadowCascadeNearZ[l],f=f.shadowCascadeFarZ[l],(h=h.pointsFrustum)[0].z=s,h[1].z=s,h[2].z=s,h[3].z=s,h[4].z=f,h[5].z=f,h[6].z=f,h[7].z=f,c[o]=u,o++}else c[o]=n,o++;for(r=0,i=c.length;r<i;r++){if((n=c[r]).shadowMap||(a=THREE.LinearFilter,m.shadowMapType===THREE.PCFSoftShadowMap&&(a=THREE.NearestFilter),n.shadowMap=new THREE.WebGLRenderTarget(n.shadowMapWidth,n.shadowMapHeight,{minFilter:a,magFilter:a,format:THREE.RGBAFormat}),n.shadowMapSize=new THREE.Vector2(n.shadowMapWidth,n.shadowMapHeight),n.shadowMatrix=new THREE.Matrix4),!n.shadowCamera){if(n instanceof THREE.SpotLight)n.shadowCamera=new THREE.PerspectiveCamera(n.shadowCameraFov,n.shadowMapWidth/n.shadowMapHeight,n.shadowCameraNear,n.shadowCameraFar);else{if(!(n instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}n.shadowCamera=new THREE.OrthographicCamera(n.shadowCameraLeft,n.shadowCameraRight,n.shadowCameraTop,n.shadowCameraBottom,n.shadowCameraNear,n.shadowCameraFar)}t.add(n.shadowCamera),!0===t.autoUpdate&&t.updateMatrixWorld()}if(n.shadowCameraVisible&&!n.cameraHelper&&(n.cameraHelper=new THREE.CameraHelper(n.shadowCamera),n.shadowCamera.add(n.cameraHelper)),n.isVirtual&&u.originalCamera==e){for(a=e,o=n.shadowCamera,s=n.pointsFrustum,h=n.pointsWorld,H.set(Infinity,Infinity,Infinity),_.set(-Infinity,-Infinity,-Infinity),f=0;f<8;f++)(l=h[f]).copy(s[f]),THREE.ShadowMapPlugin.__projector.unprojectVector(l,a),l.applyMatrix4(o.matrixWorldInverse),l.x<H.x&&(H.x=l.x),l.x>_.x&&(_.x=l.x),l.y<H.y&&(H.y=l.y),l.y>_.y&&(_.y=l.y),l.z<H.z&&(H.z=l.z),l.z>_.z&&(_.z=l.z);o.left=H.x,o.right=_.x,o.top=_.y,o.bottom=H.y,o.updateProjectionMatrix()}for(o=n.shadowMap,s=n.shadowMatrix,(a=n.shadowCamera).position.setFromMatrixPosition(n.matrixWorld),b.setFromMatrixPosition(n.target.matrixWorld),a.lookAt(b),a.updateMatrixWorld(),a.matrixWorldInverse.getInverse(a.matrixWorld),n.cameraHelper&&(n.cameraHelper.visible=n.shadowCameraVisible),n.shadowCameraVisible&&n.cameraHelper.update(),s.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),s.multiply(a.projectionMatrix),s.multiply(a.matrixWorldInverse),x.multiplyMatrices(a.projectionMatrix,a.matrixWorldInverse),R.setFromMatrix(x),m.setRenderTarget(o),m.clear(),w.length=0,p(t,t,a),n=0,o=w.length;n<o;n++)s=(h=w[n]).object,h=h.buffer,f=s.material instanceof THREE.MeshFaceMaterial?s.material.materials[0]:s.material,l=void 0!==s.geometry.morphTargets&&0<s.geometry.morphTargets.length&&f.morphTargets,E=s instanceof THREE.SkinnedMesh&&f.skinning,l=s.customDepthMaterial?s.customDepthMaterial:E?l?y:v:l?T:g,m.setMaterialFaces(f),h instanceof THREE.BufferGeometry?m.renderBufferDirect(a,t.__lights,null,l,h,s):m.renderBuffer(a,t.__lights,null,l,h,s);for(n=0,o=(f=t.__webglObjectsImmediate).length;n<o;n++)(s=(h=f[n]).object).visible&&s.castShadow&&(s._modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,s.matrixWorld),m.renderImmediateObject(a,t.__lights,null,g,s))}r=m.getClearColor(),i=m.getClearAlpha(),d.clearColor(r.r,r.g,r.b,i),d.enable(d.BLEND),m.shadowMapCullFace===THREE.CullFaceFront&&d.cullFace(d.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function h(t,e){return t.z!==e.z?e.z-t.z:e.id-t.id}var l,c,u,f,E,p,d,m,g,T,v,y,R,x,H,_,b,w,M,S,i,n,C,A,L,P=[];this.init=function(t){w=t.context,M=t,i=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),n=new Uint16Array([0,1,2,0,2,3]),C=w.createBuffer(),A=w.createBuffer(),w.bindBuffer(w.ARRAY_BUFFER,C),w.bufferData(w.ARRAY_BUFFER,i,w.STATIC_DRAW),w.bindBuffer(w.ELEMENT_ARRAY_BUFFER,A),w.bufferData(w.ELEMENT_ARRAY_BUFFER,n,w.STATIC_DRAW),t=w.createProgram();var e=w.createShader(w.VERTEX_SHADER),r=w.createShader(w.FRAGMENT_SHADER);w.shaderSource(e,["precision "+M.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n")),w.shaderSource(r,["precision "+M.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n")),w.compileShader(e),w.compileShader(r),w.attachShader(t,e),w.attachShader(t,r),w.linkProgram(t),L=t,_=w.getAttribLocation(L,"position"),b=w.getAttribLocation(L,"uv"),l=w.getUniformLocation(L,"uvOffset"),c=w.getUniformLocation(L,"uvScale"),u=w.getUniformLocation(L,"rotation"),f=w.getUniformLocation(L,"scale"),E=w.getUniformLocation(L,"color"),p=w.getUniformLocation(L,"map"),d=w.getUniformLocation(L,"opacity"),m=w.getUniformLocation(L,"modelViewMatrix"),g=w.getUniformLocation(L,"projectionMatrix"),T=w.getUniformLocation(L,"fogType"),v=w.getUniformLocation(L,"fogDensity"),y=w.getUniformLocation(L,"fogNear"),R=w.getUniformLocation(L,"fogFar"),x=w.getUniformLocation(L,"fogColor"),H=w.getUniformLocation(L,"alphaTest"),(t=document.createElement("canvas")).width=8,t.height=8,(e=t.getContext("2d")).fillStyle="white",e.fillRect(0,0,8,8),(S=new THREE.Texture(t)).needsUpdate=!0},this.render=function(t,e,r,i){if(P.length=0,t.traverseVisible(function(t){t instanceof THREE.Sprite&&P.push(t)}),0!==P.length){w.useProgram(L),w.enableVertexAttribArray(_),w.enableVertexAttribArray(b),w.disable(w.CULL_FACE),w.enable(w.BLEND),w.bindBuffer(w.ARRAY_BUFFER,C),w.vertexAttribPointer(_,2,w.FLOAT,!1,16,0),w.vertexAttribPointer(b,2,w.FLOAT,!1,16,8),w.bindBuffer(w.ELEMENT_ARRAY_BUFFER,A),w.uniformMatrix4fv(g,!1,e.projectionMatrix.elements),w.activeTexture(w.TEXTURE0),w.uniform1i(p,0),i=r=0,(n=t.fog)?(w.uniform3f(x,n.color.r,n.color.g,n.color.b),n instanceof THREE.Fog?(w.uniform1f(y,n.near),w.uniform1f(R,n.far),w.uniform1i(T,1),i=r=1):n instanceof THREE.FogExp2&&(w.uniform1f(v,n.density),w.uniform1i(T,2),i=r=2)):(w.uniform1i(T,0),i=r=0);for(var n=0,o=P.length;n<o;n++){var a=P[n],s=a.material;a._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,a.matrixWorld),a.z=-a._modelViewMatrix.elements[14]}for(P.sort(h),e=[],n=0,o=P.length;n<o;n++)s=(a=P[n]).material,w.uniform1f(H,s.alphaTest),w.uniformMatrix4fv(m,!1,a._modelViewMatrix.elements),e[0]=a.scale.x,e[1]=a.scale.y,a=0,t.fog&&s.fog&&(a=i),r!==a&&(w.uniform1i(T,a),r=a),null!==s.map?(w.uniform2f(l,s.map.offset.x,s.map.offset.y),w.uniform2f(c,s.map.repeat.x,s.map.repeat.y)):(w.uniform2f(l,0,0),w.uniform2f(c,1,1)),w.uniform1f(d,s.opacity),w.uniform3f(E,s.color.r,s.color.g,s.color.b),w.uniform1f(u,s.rotation),w.uniform2fv(f,e),M.setBlending(s.blending,s.blendEquation,s.blendSrc,s.blendDst),M.setDepthTest(s.depthTest),M.setDepthWrite(s.depthWrite),s.map&&s.map.image&&s.map.image.width?M.setTexture(s.map,0):M.setTexture(S,0),w.drawElements(w.TRIANGLES,6,w.UNSIGNED_SHORT,0);w.enable(w.CULL_FACE)}}},THREE.DepthPassPlugin=function(){function h(t,e,r){if(e.visible){var i=t.__webglObjects[e.id];if(i&&(!1===e.frustumCulled||!0===d.intersectsObject(e)))for(var n=0,o=i.length;n<o;n++){var a=i[n];e._modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),g.push(a)}for(n=0,o=e.children.length;n<o;n++)h(t,e.children[n],r)}}this.enabled=!1,this.renderTarget=null;var l,c,u,f,E,p,d=new THREE.Frustum,m=new THREE.Matrix4,g=[];this.init=function(t){l=t.context,c=t,t=THREE.ShaderLib.depthRGBA;var e=THREE.UniformsUtils.clone(t.uniforms);u=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:e}),f=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:e,morphTargets:!0}),E=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:e,skinning:!0}),p=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:e,morphTargets:!0,skinning:!0}),u._shadowPass=!0,f._shadowPass=!0,E._shadowPass=!0,p._shadowPass=!0},this.render=function(t,e){this.enabled&&this.update(t,e)},this.update=function(t,e){var r,i,n,o,a,s;for(l.clearColor(1,1,1,1),l.disable(l.BLEND),c.setDepthTest(!0),!0===t.autoUpdate&&t.updateMatrixWorld(),e.matrixWorldInverse.getInverse(e.matrixWorld),m.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),d.setFromMatrix(m),c.setRenderTarget(this.renderTarget),c.clear(),g.length=0,h(t,t,e),r=0,i=g.length;r<i;r++)a=(n=g[r]).object,n=n.buffer,a instanceof THREE.PointCloud&&!a.customDepthMaterial||((s=a.material instanceof THREE.MeshFaceMaterial?a.material.materials[0]:a.material)&&c.setMaterialFaces(a.material),o=void 0!==a.geometry.morphTargets&&0<a.geometry.morphTargets.length&&s.morphTargets,s=a instanceof THREE.SkinnedMesh&&s.skinning,o=a.customDepthMaterial?a.customDepthMaterial:s?o?p:E:o?f:u,n instanceof THREE.BufferGeometry?c.renderBufferDirect(e,t.__lights,null,o,n,a):c.renderBuffer(e,t.__lights,null,o,n,a));for(r=0,i=(o=t.__webglObjectsImmediate).length;r<i;r++)(a=(n=o[r]).object).visible&&(a._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,a.matrixWorld),c.renderImmediateObject(e,t.__lights,null,u,a));r=c.getClearColor(),i=c.getClearAlpha(),l.clearColor(r.r,r.g,r.b,i),l.enable(l.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};